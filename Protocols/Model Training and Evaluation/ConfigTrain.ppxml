<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="ConfigTrain" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>rache</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Wed Mar 11 20:38:25 2020</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>20.1.0.2208</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>ConfigTrain</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{5B38A44F-35F9-4A77-B8F1-E9F1CAE4C94D}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>ConfigTrain</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Protocols\Clinic1920\Model Train and Eval\ConfigTrain</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Excel Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
						<sci:member>Keep Properties</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:value>public:/Clinic1920/PPModelConfig_temp2.xlsx</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>SheetTag</sci:member>
						<sci:member>SheetName</sci:member>
						<sci:legalval selected="true">AllSheets</sci:legalval>
						<sci:legalval>ActiveSheet</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
					</sci:arg>
					<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">SheetName</sci:legalval>
						<sci:legalval>SheetNumber</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>AllLines</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>DateFormat</sci:member>
						<sci:member>PreserveExcelFormats</sci:member>
						<sci:member>Reduced Memory Usage</sci:member>
						<sci:member>Extract Comments</sci:member>
						<sci:member>Cells can contain Arrays</sci:member>
						<sci:member>Array Element Delimiter</sci:member>
						<sci:member>Read Background Color</sci:member>
						<sci:member>Treat empty cells as non-existant</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
						<sci:legalval selected="true">Text</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
					</sci:arg>
					<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Extract Comments</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>merge_tagname</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
						<sci:legalval/>
						<sci:legalval>1</sci:legalval>
						<sci:legalval selected="true">2</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Cells can contain Arrays</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Array Element Delimiter</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
						<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
						<sci:legalval selected="true">\n</sci:legalval>
						<sci:legalval>;</sci:legalval>
						<sci:legalval>,</sci:legalval>
						<sci:legalval>:</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Read Background Color</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Treat empty cells as non-existant</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
						<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1778</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>#DateTag := DateTimeCurrent();
DateSetFormat(#DateTag,&apos;%d%B%Y&apos;);
ModelDateTag := DateText(#DateTag);</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Add a Date Tag showing when the protocol was run</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>4</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Filter (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>The PilotScript expression used to filter the data.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>SheetTag NE &apos;USAGE&apos;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Filter (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>6</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="ModelTrain" version="2">
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:member>__PoolID</sci:member>
						<sci:member>Http Cookie Handling</sci:member>
						<sci:member>__NotificationProtocol</sci:member>
					</sci:arg>
					<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">Protocol Scoped</sci:legalval>
						<sci:legalval>Disabled</sci:legalval>
					</sci:arg>
					<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
						<sci:member>Reporting Stylesheet</sci:member>
						<sci:member>Reporting Chart Display Type</sci:member>
					</sci:arg>
					<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
						<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
					</sci:arg>
					<sci:arg name="Reporting Chart Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Interactive</sci:legalval>
						<sci:legalval>Image</sci:legalval>
					</sci:arg>
					<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
						<sci:member>Queue Name</sci:member>
						<sci:member>Grid Options</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
						<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
						<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
						<sci:value>Account=</sci:value>
						<sci:value>Maximum Execution Time=</sci:value>
						<sci:value>Parallel Environment=</sci:value>
						<sci:value>Number of Cores=</sci:value>
						<sci:value>Other=</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>clinic1920</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Feb 17 15:14:32 2020</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>20.1.0.2208</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>ModelTrainAndEval</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>PROTOCOLNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>CVtesting</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>80</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
						<sci:value>%VERSION 3%</sci:value>
						<sci:value>1256 -690 579 201</sci:value>
						<sci:value>255 255 0</sci:value>
						<sci:value>Only choose one model to train</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Include JobDir Files</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -95</sci:value>
					</sci:arg>
					<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>OriginalPackage</sci:help>
						<sci:value>scitegic/coreutils</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Create Validation Learner" version="2">
							<sci:arg name="Model Type" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to configure the customized learner to build Regression models of numeric Y properties, or Classification models of a categorical Y properties. Some learners support only regression models, some support only classification models, and some support both. Accordingly, the value of &lt;i&gt;Model Type&lt;/i&gt; determines the allowable values for &lt;i&gt;Learner&lt;/i&gt;.</sci:help>
								<sci:legalval>Regression</sci:legalval>
								<sci:legalval selected="true">Classification</sci:legalval>
							</sci:arg>
							<sci:arg name="Learner" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>Name of learner to be used to build validated models. See the help for the corresponding component for more information on each learner.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To use a learner here, you must have a license for the collection to which the learner belongs.
&lt;/ul&gt;</sci:help>
								<sci:legalvalscript>#reg := &apos;Learn Property,Learn Molecular Property,Learn GFA Model,Learn Molecular GFA Model,Learn RP Tree Model,Learn RP Forest Model,Learn R Generalized Linear Model,Learn R Linear Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Partial Least Squares Model,Learn R Principal Components Regression Model,Learn R Supervised Principal Components Model,Learn R Support Vector Machine Model,Learn R Forest Model,Learn R XGBoost Model&apos;;

#class := &apos;Learn Good From Bad,Learn Good Molecules,Learn Categories,Learn Molecular Categories,Learn RP Tree Model,Learn RP Forest Model,Learn R Linear Discriminant Analysis Model,Learn R Logistic Regression Model,Learn R Mixture Discriminant Analysis Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Support Vector Machine Model,Learn R Forest Model,Learn R XGBoost Model&apos;;

if Parameter(&apos;Model Type&apos;) eq &apos;Regression&apos; then
	expand(&apos;,&apos;, #reg);
	SetLegalValues(#reg);
else
	expand(&apos;,&apos;, #class);
	SetLegalValues(#class);
end if;</sci:legalvalscript>
								<sci:value>Learn Good From Bad</sci:value>
							</sci:arg>
							<sci:arg name="Learner Destination" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the name and location in the component database where the new validation learner is to be saved</sci:help>
								<sci:value>Protocols/Clinic1920/Learners/LGFB_CV</sci:value>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>Names,NewNames,Types,Help,Required,MultiSelect,Values,LegalValues,Children,Parents,TemplateComponent</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
								<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Create Validation Learner</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1FD83ABD-D6E8-4B1D-895B-BEEFB000B17E}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Creates a customized learner component for performing model validation and parameter tuning</sci:value>
								<sci:value>Takes the &quot;standard&quot; Pipeline Pilot learner component specified by &lt;i&gt;Learner&lt;/i&gt; and creates from it a new component with the ability to use cross-validation, bootstrap resampling, and Y scrambling to validate its fitted models. The new component allows you to specify multiple values for the model building parameters for the purpose of parameter tuning. &lt;i&gt;Learner Destination&lt;/i&gt; specifies the name and location of the new learner. Once the component has been created, you can drag it into a protocol and use it to build and validate models.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For a detailed description of self-validating learner capabilities, create a custom learner with &lt;i&gt;Create Validation Learner&lt;/i&gt; and see the help for the new component and its parameters. Alternatively, see the following internal template components used as the basis for the validation learners: &lt;a href=&quot;javascript:DoLink(&apos;{B8255010-1D45-474E-A42F-1D7B8F36E617}&apos;)&quot;&gt;Learn Validated Numerical Model&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{27086257-FFC5-47FC-9B0C-3E416619073D}&apos;)&quot;&gt;Learn Validated Classification Model&lt;/a&gt;.
&lt;/ul&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1872</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>%VERSION 3%</sci:value>
								<sci:value>486 -95 966 314</sci:value>
								<sci:value>255 255 0</sci:value>
								<sci:value>Run only this component just once to create a learner with CV. Use that custom learner within this protocol. Seems that you need to recreate the CV learner on each computer.</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/modeling</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Fri Jul 20 07:22:34 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Data Modeling\Learners\Create Validation Learner</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>//@FeatureSource := GlobalProperty(&apos;Feature Source&apos;);
//ChangePropertyType(@FeatureSource, &apos;SciTegic.value.StringArrayValue&apos;, &apos;g&apos;);
//@FeatureSource := RSplit(@FeatureSource, &apos;\/&apos;, &apos;g&apos;);
//#index := NumValues(@FeatureSource);
//@FeatureSource := @FeatureSource[#index];
//@FeatureSource := RSplit(@FeatureSource, &apos;.&apos;, &apos;g&apos;);
//@FeatureSource := @FeatureSource[1];
@featuresource := &apos;public:/Clinic1920/Features/finished_features/&apos; + Features + &apos;.csv&apos;;
@learnername := String(SheetTag);
@modelname := @learnername+&apos;_&apos;+Features;
@score := @modelname;
IF @learnername EQ &apos;RF&apos; THEN
	@maxdepth := MaxDepth;
	@numtrees := NumberOfTrees;
	@score := @score + &apos;#P(true)&apos;;
END IF;
IF @learnername EQ &apos;SVM&apos; THEN
	@gamma := Gamma;
	@cost := Cost;
END IF;
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Model Name Global Var</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -455</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>147</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{96FF3FEF-9578-49A6-B021-36EB9FC3AA34}</sci:value>
								<sci:value>1</sci:value>
								<sci:value>-1</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Excel Reader" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
								<sci:member>Keep Properties</sci:member>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>HasColumnNames</sci:member>
								<sci:member>Column Name Lines</sci:member>
								<sci:value>public:/Clinic1920/DI Labels/DI_out.csv</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>SheetTag</sci:member>
								<sci:member>SheetName</sci:member>
								<sci:legalval selected="true">AllSheets</sci:legalval>
								<sci:legalval>ActiveSheet</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
							</sci:arg>
							<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
								<sci:legalval>SheetNumber</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>AllLines</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>TrimWhitespace</sci:member>
								<sci:member>CommentLines</sci:member>
								<sci:member>DateFormat</sci:member>
								<sci:member>PreserveExcelFormats</sci:member>
								<sci:member>Reduced Memory Usage</sci:member>
								<sci:member>Extract Comments</sci:member>
								<sci:member>Cells can contain Arrays</sci:member>
								<sci:member>Array Element Delimiter</sci:member>
								<sci:member>Read Background Color</sci:member>
								<sci:member>Treat empty cells as non-existant</sci:member>
							</sci:arg>
							<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
							</sci:arg>
							<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
								<sci:legalval selected="true">Text</sci:legalval>
								<sci:legalval>DateTime</sci:legalval>
							</sci:arg>
							<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Extract Comments</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>merge_tagname</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
								<sci:legalval/>
								<sci:legalval>1</sci:legalval>
								<sci:legalval selected="true">2</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Cells can contain Arrays</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Array Element Delimiter</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
								<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
								<sci:legalval selected="true">\n</sci:legalval>
								<sci:legalval>;</sci:legalval>
								<sci:legalval>,</sci:legalval>
								<sci:legalval>:</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
								<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Read Background Color</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Treat empty cells as non-existant</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -815</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
								<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1778</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read DI labels</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>76</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>pdb_code := Substring(ToLower(Name), 1, 4);
Rename(&apos;Developability Index (Fv)&apos;, &apos;DI&apos;);
Dev := DI &lt; 36.226; //hard-coded value, gets replaced later in pipeline
Remove(&apos;Name&apos;)</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Clean Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>77</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>DI</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -815</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>78</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>job:/trainingData.csv</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write Training Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -816</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>150</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MeanCenterAndScale.1">
						<sci:component name="Scale Data" version="2">
							<sci:arg name="ScalingType" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Type of scaling; see component help for options.</sci:help>
								<sci:member>Invalid Value Treatment</sci:member>
								<sci:legalval selected="true">MeanCenterAndScaleToUnitVariance</sci:legalval>
								<sci:legalval>ScaleToUnitRange</sci:legalval>
								<sci:legalval>ScaleBetweenMinusOneAndOne</sci:legalval>
								<sci:legalval>CommonLog</sci:legalval>
								<sci:legalval>NegativeCommonLog</sci:legalval>
								<sci:legalval>NaturalLog</sci:legalval>
								<sci:legalval>DivideByMean</sci:legalval>
							</sci:arg>
							<sci:arg name="Invalid Value Treatment" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For logarithmic transformations, specifies behavior for property values whose logarithm is undefined. Options are:
&lt;ul&gt;
&lt;li&gt;Error: Raise an error message, causing the protocol to halt.
&lt;li&gt;IEEE: Apply the IEEE 754 floating point standard. This yields the special floating point value &quot;-Infinity&quot; for the logarithm of 0, or &quot;NaN&quot; for the logarithm of a negative number.
&lt;li&gt;Legacy: Apply backwardly compatible behavior of &lt;i&gt;Scale Data&lt;/i&gt; such that property values of 0 are left alone, and negative values yield the logarithm of their absolute values.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>setdisableddetails(&apos;This option applies only to log transformations.&apos;);

#val := parameter(&apos;ScalingType&apos;);

#val eq &apos;CommonLog&apos; or #val eq &apos;NegativeCommonLog&apos; or #val eq &apos;NaturalLog&apos;</sci:enabledscript>
								<sci:legalval>Error</sci:legalval>
								<sci:legalval selected="true">IEEE</sci:legalval>
								<sci:legalval>Legacy</sci:legalval>
							</sci:arg>
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The properties to scale: 

 - AllPropertiesOnFirstData: Uses all those that are found
on the first data object.
 - UserSet: Takes the list of properties from the parameter
UserSet.  Property ranges can be given by providing the first
and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot;
followed by the index, such as &quot;Column3-Column10&quot;.

</sci:help>
								<sci:member>UserSet</sci:member>
								<sci:member>IgnoreProperties</sci:member>
								<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
								<sci:legalval>UserSet</sci:legalval>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to scale. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to ignore. This is used, for example, if the UseProperties parameter is set to &quot;AllPropertiesOnFirstData&quot;, and there is a small set of undesirable properties (such as record names) you do not want to use, but cannot remove.</sci:help>
								<sci:value>Dev</sci:value>
							</sci:arg>
							<sci:arg name="Postfix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The text (if any) to append to the property name for the scaled property name</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Scale Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Scale Data</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Feb 02 08:38:45 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>COMPONENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{4B9C025F-20BD-44CC-ABBA-036B70BDA858}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -996</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Scales the values of specified properties in the incoming data, creating new properties or replacing the existing ones</sci:value>
								<sci:value>Calculates scaled values for numeric properties specified by &lt;i&gt;UseProperties&lt;/i&gt;  using one of the following methods: 
&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;MeanCenterAndScaleToUnitVariance (Zscore): Each property is offset its mean so 
    that its sum over all data records is zero (mean centering), and then divided by a 
    factor so that its variance is one. &lt;/li&gt;
  &lt;li&gt;ScaleToUnitRange: Each property is scaled so that its minimum value becomes 0, 
    its maximum value 1.0, and the remaining points linearly scaled into that range. 
  &lt;/li&gt;
  &lt;li&gt;ScaleBetweenOneAndMinusOne: Each property is scaled so that its minimum value becomes -1.0, 
    its maximum value 1.0, and the remaining points linearly scaled into that range.  &lt;/li&gt;
  &lt;li&gt;CommonLog: Each property value is replaced by its common (base 10) logarithm. &lt;i&gt;Invalid Value Treatment&lt;/i&gt; specifies how values with undefined logarithms are treated.&lt;/li&gt;
  &lt;li&gt;NegativeCommonLog: Each property value is replaced by the negative its common (base 10) logarithm (yielding, e.g., a pIC50 value from an IC50 value).&lt;/li&gt;
  &lt;li&gt;NaturalLog: Each property value is replaced by the negative its natural (base &lt;i&gt;e&lt;/i&gt;) logarithm.&lt;/li&gt;
  &lt;li&gt;DivideByMean: Each property value is divided by the mean value for that property. If the mean is zero, the values are left unchanged.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To overwrite the existing properties with the scaled values, leave &lt;i&gt;Postfix&lt;/i&gt; blank&lt;/li&gt;
&lt;li&gt;To preserve the existing properties and create new ones with the scaled values, enter the text to be appended to the original property names to create the new property names in &lt;i&gt;Postfix&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data with numeric properties to be scaled</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data with the scaled property values, either as new properties or overwriting the existing ones</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>168</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>16.1.0.1140</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Scale Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>public:/Clinic1920/Data/training_data_temp.csv</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write Training Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>4</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -1176</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>193</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MultiValueStats.1">
						<sci:component name="Basic Statistics" version="2">
							<sci:arg name="Statistics" type="StringType" required="true" visibility="visible" multi="true" expanded="true">
								<sci:help>The statistics to calculate</sci:help>
								<sci:member>Percentiles</sci:member>
								<sci:member>Percentile Type</sci:member>
								<sci:member>Sampling Rate</sci:member>
								<sci:member>Maximum Lag</sci:member>
								<sci:legalval>Mean</sci:legalval>
								<sci:legalval>StdDev</sci:legalval>
								<sci:legalval>StdDevSample</sci:legalval>
								<sci:legalval>SEM</sci:legalval>
								<sci:legalval>N</sci:legalval>
								<sci:legalval>Variance</sci:legalval>
								<sci:legalval>Skew</sci:legalval>
								<sci:legalval>Kurtosis</sci:legalval>
								<sci:legalval>Sum</sci:legalval>
								<sci:legalval>Min</sci:legalval>
								<sci:legalval>Max</sci:legalval>
								<sci:legalval>Median</sci:legalval>
								<sci:legalval>Mode</sci:legalval>
								<sci:legalval>GeometricMean</sci:legalval>
								<sci:legalval>HarmonicMean</sci:legalval>
								<sci:legalval>MAD</sci:legalval>
								<sci:legalval selected="true">Percentile</sci:legalval>
								<sci:legalval>Lag</sci:legalval>
								<sci:legalval>FFT</sci:legalval>
							</sci:arg>
							<sci:arg name="Percentiles" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Comma-separated list of the percentiles to output when Percentile is selected as one of the &lt;i&gt;Statistics&lt;/i&gt;. Values are in percentages (as opposed to fractions).</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Percentile&apos;)</sci:enabledscript>
								<sci:value>20</sci:value>
							</sci:arg>
							<sci:arg name="Percentile Type" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Method to use for computing percentiles. Options are:
&lt;ul&gt;
&lt;li&gt;Excel: Method used by Excel. Equivalent to the R type 7 method (see link below), which is the default in R.
&lt;li&gt;NIST: Method recommended in the NIST Engineering Statistics Handbook (see link  below). Equivalent to the R type 6 method. Also used by Minitab and SPSS.
&lt;li&gt;Closest Value: Returns the value from the input data whose sorted index is the lowest index greater than or equal to N*p/100, where N is the number of data points and p is the percentile level. Equivalent to the R type 1 method.
&lt;li&gt;R Type 2: R type 2 method. Similar to &quot;Closest Value&quot; but with averaging at discontinuities.
&lt;li&gt;R Type 3: R type 3 method. Also used by SAS.
&lt;li&gt;R Type 4: R type 4 method. Linear interpolation of the empirical cumulative distribution function.
&lt;li&gt;R Type 5: R type 5 method. According to R documentation, &quot;popular amongst hydrologists.&quot;
&lt;li&gt;R Type 8: R type 8 method. Recommended by Hyndman and Fan (see link below to R documentation).
&lt;li&gt;R Type 9: R type 9 method. According to R documentation, &quot;resulting quantile estimates are approximately unbiased for the expected order statistics if x is normally distributed.&quot;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on these options, see &lt;a href=&quot;javascript:DoLink(&apos;http://stat.ethz.ch/R-manual/R-patched/library/stats/html/quantile.html&apos;)&quot;&gt;the R documentation for the quantile function&lt;/a&gt;, the article from the &lt;a href=&quot;javascript:DoLink(&apos;http://www.itl.nist.gov/div898/handbook/prc/section2/prc252.htm&apos;)&quot;&gt;NIST Engineering Statistics Handbook&lt;/a&gt; on percentiles, and the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Percentile&apos;)&quot;&gt;Wikipedia article&lt;/a&gt; on percentiles.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Percentile&apos;)</sci:enabledscript>
								<sci:legalval>Excel</sci:legalval>
								<sci:legalval>NIST</sci:legalval>
								<sci:legalval selected="true">Closest Value</sci:legalval>
								<sci:legalval>R Type 2</sci:legalval>
								<sci:legalval>R Type 3</sci:legalval>
								<sci:legalval>R Type 4</sci:legalval>
								<sci:legalval>R Type 5</sci:legalval>
								<sci:legalval>R Type 8</sci:legalval>
								<sci:legalval>R Type 9</sci:legalval>
							</sci:arg>
							<sci:arg name="Sampling Rate" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For the FFT (Fast Fourier Transform) option, specifies the sampling rate of the input data in Hertz (i.e., data records per second). This is used to compute the values in the &lt;b&gt;FFTfrequency&lt;/b&gt; array which is matched with the &lt;b&gt;FFTamplitude&lt;/b&gt; array in the output.</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;FFT&apos;)</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Maximum Lag" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>For &quot;Lag&quot; output, the maximum number of previous data records from which to generate lagged values.</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Lag&apos;)</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The applicable input properties for this component:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AllPropertiesOnFirstData&lt;/b&gt;:  Uses all those that are found on the first data object.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserSet&lt;/b&gt;:  Takes the list of properties from the parameter &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen.  Properties can be referred to by index by using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>UserSet</sci:member>
								<sci:member>IgnoreProperties</sci:member>
								<sci:legalval>AllPropertiesOnFirstData</sci:legalval>
								<sci:legalval selected="true">UserSet</sci:legalval>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to use for calculating statistics. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
								<sci:value>DI</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to ignore. This is used, for example, if the UseProperties parameter is set to &quot;AllPropertiesOnFirstData&quot;, and there is a small set of undesirable properties (such as record names) you do not want to use, but cannot remove.</sci:help>
							</sci:arg>
							<sci:arg name="OutputResults" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies results to output. Options are:
&lt;ul&gt;
&lt;li&gt;As Summary: Output is a single data record containing the computed statistics.
&lt;li&gt;As Tabular Summary: Output is one data record for each property whose statistics have been computed, with one &quot;column&quot; for each statistic.
&lt;li&gt;On Original Data: Each input data record is output along with with the statistics computed over all data records.
&lt;li&gt;As Running Tally: Each input data record is output along with the statistics computed over all data records up to that point.
&lt;/ul&gt;
</sci:help>
								<sci:member>Output Suffix</sci:member>
								<sci:legalval selected="true">On Original Data</sci:legalval>
								<sci:legalval>As Summary</sci:legalval>
								<sci:legalval>As Tabular Summary</sci:legalval>
								<sci:legalval>As Running Tally</sci:legalval>
							</sci:arg>
							<sci:arg name="Output Suffix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text string to append to each output property name. Can be useful to prevent overwriting of results when using &lt;i&gt;Basic Statistics&lt;/i&gt; components in series (e.g., sampling data in different ways in each case).</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="GenerateStatisticsAcross" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>GenerateStatisticsAcross</sci:help>
								<sci:value>All Records</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Mar 22 11:06:37 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F1C40831-FCA5-454e-867A-129B64053531}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Basic Statistics</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Multivalue Stats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -1356</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates statistics for specified properties over all data records</sci:value>
								<sci:value>Use &lt;i&gt;Statistics&lt;/i&gt; to specify the statistical quantities you wish to calculate. You can choose any or all of the following:
&lt;ul&gt;
&lt;li&gt;Mean: Sum of values divided by number of values. &lt;/li&gt;
&lt;li&gt;StdDev: Standard deviation if sample represents entire population. (Square-root of 1/N times sum of squared deviation from mean.)&lt;/li&gt;
&lt;li&gt;StdDevSample: Sample standard deviation. (Square-root of 1/(N-1) times sum of squared deviation from mean.  This is the square-root of the unbiased estimator of the population variance if the sample is a subset of a larger population).&lt;/li&gt;
&lt;li&gt;SEM: Standard error of the mean. Calculated as StdDevSample / sqrt(N). &lt;/li&gt;
&lt;li&gt;N: Number of values. &lt;/li&gt;
&lt;li&gt;Variance: Variance of values if sample represents entire population; square of StdDev. &lt;/li&gt;
&lt;li&gt;Skew: Skew of values. &lt;/li&gt;
&lt;li&gt;Kurtosis: Kurtosis of values (excess kurtosis relative to a Gaussian). &lt;/li&gt;
&lt;li&gt;Sum: Sum of values. &lt;/li&gt;
&lt;li&gt;Min: Minimum value. &lt;/li&gt;
&lt;li&gt;Max: Maximum value. &lt;/li&gt;
&lt;li&gt;Median: Median value. &lt;/li&gt;
&lt;li&gt;Mode: Most common value. &lt;/li&gt;
&lt;li&gt;GeometricMean: The N-th root of the product of N values. &lt;/li&gt;
&lt;li&gt;HarmonicMean: The reciprocal of the mean of the reciprocals. &lt;/li&gt;
&lt;li&gt;MAD: Median Absolute Deviation, the median of the absolute value of the difference between each data point and the median of the data points. &lt;/li&gt;
&lt;li&gt;Percentile: Percentile values specified by &lt;i&gt;Percentiles&lt;/i&gt;.
&lt;li&gt;Lag: Lagged values (values from previous data records) of property up to &lt;i&gt;Maximum Lag&lt;/i&gt; steps back. This can be useful for modeling time series or other ordered data. Output property names end with &lt;b&gt;Lag_&lt;i&gt;n&lt;/i&gt;&lt;/b&gt; where &lt;i&gt;n&lt;/i&gt; is the number of steps back. (Note that this option only makes sense for the &quot;As Running Tally&quot; output option.)
&lt;li&gt;FFT: Fast Fourier Transform of input data from time domain to frequency domain. Output for each property is two matched arrays with suffixes &lt;b&gt;FFTfrequency&lt;/b&gt; and &lt;b&gt;FFTamplitude&lt;/b&gt; corresponding to the frequency (derived from &lt;i&gt;Sampling Rate&lt;/i&gt;) and the amplitude at that frequency.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each property in each input data record may have one or multiple values. Statistics are calculated over all values for all records. For each statistic, a new property name is created by appending an underscore and the statistic name to the original property name. For percentiles, the number specifying the percentile level is appended to the name as well.&lt;/p&gt;
&lt;p&gt;
Use &lt;i&gt;OutputResults&lt;/i&gt; to specify whether you wish to output only the statistics (&quot;As Summary&quot;) or to add the statistics to the original data records (&quot;On Original Data&quot;). Note that in the latter case, the same value for each statistic will appear on each record, as the statistics are computed over all records. Alternatively, choose &quot;As Running Tally&quot; to output each original data record along with the statistical quantities computed over all records up to that point. Finally, choose &quot;As Tabular Summary&quot; to output summary results in the form of a table, with one column containing property names, and additional columns containing the computed statistics &lt;i&gt;without&lt;/i&gt; the property name prefix.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Common usage of the term &quot;sample standard deviation&quot; (or &quot;sample variance&quot;) is inconsistent in that it sometimes refers to the form with N in the denominator, as &lt;a href=&quot;javascript:DoLink(&apos;http://mathworld.wolfram.com/StandardDeviation.html&apos;)&quot;&gt;here&lt;/a&gt;, and sometimes to the form with N-1 in the denominator, as &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Standard_deviation&apos;)&quot;&gt;here&lt;/a&gt;.  The distinction is usually not important in that &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Variance#Population_variance_and_sample_variance&apos;)&quot;&gt;&quot;for small sample sizes both are inaccurate and for large values of N they are practically the same.&quot;&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records augmented with the requested statistics</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with missing or invalid values for all properties whose statistics are being calculated</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1749</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>148</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Basic Statistics</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Dev := Property(&apos;DI&apos;) &lt; Property(&apos;DI_Percentile20&apos;);
@Dev_Threshold := Property(&apos;DI_Percentile20&apos;);
Remove(&apos;DI_Percentile20&apos;);
Remove(&apos;pdb_code&apos;);
Remove(&apos;DI&apos;);
Remove(&apos;Column1&apos;);
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -1356</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>149</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{962A47FC-978B-48FF-8CC2-B692DDDCED3D}</sci:value>
								<sci:value>1</sci:value>
								<sci:value>-1</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Excel Reader" version="2">
							<sci:arg name="Source" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAALDADxwPgpUaGUgZmlsZShzKSBvciBVUkwgc291cmNlKHMpIHRvIHJlYWQuCjwvcD4KPHA+ClRoaXMgbWF5IGJlIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Qgb2YgZmlsZXMgb3IgVVJMcy4gVVJMcyBtYXkgaW5jbHVkZSBodHRwLCBodHRwcyBhbmQgZnRwLiBTaW1wbGUgd2lsZGNhcmQgdG9rZW5zIGFyZSBzdXBwb3J0ZWQgKCogYW5kID8pLgo8L3A+IFVSTFR5cGUADAAAAAEBAAEABAH8AAAAAAAAAAAAHFNvdXJjZQPMU8+7ARIkKEZlYXR1cmUgU291cmNlKQA=</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">URLType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">URLType</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
								<sci:member>Keep Properties</sci:member>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>HasColumnNames</sci:member>
								<sci:member>Column Name Lines</sci:member>
								<sci:value>featuresource</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>SheetTag</sci:member>
								<sci:member>SheetName</sci:member>
								<sci:legalval selected="true">AllSheets</sci:legalval>
								<sci:legalval>ActiveSheet</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
							</sci:arg>
							<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
								<sci:legalval>SheetNumber</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>AllLines</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>TrimWhitespace</sci:member>
								<sci:member>CommentLines</sci:member>
								<sci:member>DateFormat</sci:member>
								<sci:member>PreserveExcelFormats</sci:member>
								<sci:member>Reduced Memory Usage</sci:member>
								<sci:member>Extract Comments</sci:member>
								<sci:member>Cells can contain Arrays</sci:member>
								<sci:member>Array Element Delimiter</sci:member>
								<sci:member>Read Background Color</sci:member>
								<sci:member>Treat empty cells as non-existant</sci:member>
							</sci:arg>
							<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
							</sci:arg>
							<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
								<sci:legalval selected="true">Text</sci:legalval>
								<sci:legalval>DateTime</sci:legalval>
							</sci:arg>
							<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Extract Comments</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>merge_tagname</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
								<sci:legalval/>
								<sci:legalval>1</sci:legalval>
								<sci:legalval selected="true">2</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Cells can contain Arrays</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Array Element Delimiter</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
								<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
								<sci:legalval selected="true">\n</sci:legalval>
								<sci:legalval>;</sci:legalval>
								<sci:legalval>,</sci:legalval>
								<sci:legalval>:</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
								<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Read Background Color</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Treat empty cells as non-existant</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
								<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1778</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read Features</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>151</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{6DD47411-AB40-47F6-8EB7-1DAD1736A8ED}</sci:value>
								<sci:value>1</sci:value>
								<sci:value>-1</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>pdb_code</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>DI</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>152</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MergeProperties.1">
						<sci:component name="Merge Data" version="2">
							<sci:arg name="MergeUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
								<sci:member>MergeUsingListType</sci:member>
								<sci:member>MergePropertyType</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:value>pdb_code</sci:value>
							</sci:arg>
							<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
								<sci:legalval>IsFingerprint</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
								<sci:member>WhenMerging</sci:member>
								<sci:member>KeepAllNullString</sci:member>
								<sci:member>KeepAllPreferredNodeName</sci:member>
								<sci:member>PrefixUsingProperty</sci:member>
								<sci:member>Data Are Sorted</sci:member>
								<sci:legalval>KeepAll</sci:legalval>
								<sci:legalval selected="true">KeepFirst</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
								<sci:legalval selected="true">OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval>AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
							</sci:arg>
							<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
								<sci:value>Molecule</sci:value>
							</sci:arg>
							<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
							</sci:arg>
							<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:05:29 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Remove Duplicates
</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Merge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
								<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property, which acts as an ID or index property.&lt;/p&gt;
&lt;p&gt;This component can be used to perform two types of operation:
&lt;ul&gt;
&lt;li&gt;Merge data records from multiple input streams. This combines properties from the multiple streams that are associated with the same index (i.e., &lt;i&gt;MergeUsing&lt;/i&gt;) property. Typically this will widen the data records with more properties and reduce the total number of data records.&lt;/li&gt;
&lt;li&gt;Merge data records from a single input stream to create array data. This maintains the number of properties but will reduce the number of records.&lt;/li&gt;
&lt;/ul&gt;
Note that these operations can occur simultaneously.
&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;
{2E21E16B-6901-46F3-8780-F14D3D7057CE}
&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that contain the properties being used for merging</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records that do not contain the properties being used for merging</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>153</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Random Percent Filter" version="2">
							<sci:arg name="Percent" type="DoubleType" required="true" visibility="visible" multi="false">
								<sci:help>Enter the percentage of records to pass as a number between 0.0 and 100.0.</sci:help>
								<sci:value>80</sci:value>
							</sci:arg>
							<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>Random number generator seed. If left blank the current time in seconds is used as the seed.</sci:help>
								<sci:value>333</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Sets up the random seed.</sci:help>
								<sci:value>srand($(seed));</sci:value>
							</sci:arg>
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Defines how the random filtering is performed.</sci:help>
								<sci:value>rand() * 100 &lt; $(Percent);</sci:value>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Not used.</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether calculated properties are kept on the data property list.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
								<sci:help>Argument Description</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Wed Jun 01 10:08:01 2005</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Random Percent Filter</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>FILTERNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{B9AF5701-25F7-4492-984D-85BEBA2C704C}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Random Percent Filter</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Passes a specified percentage of data records by random selection</sci:value>
								<sci:value>&lt;p&gt;Applies a probability, based on the &lt;i&gt;Percent&lt;/i&gt; value, which determines if a record should be passed. (Because the probability is applied to each record, the total percent of records sent out the Pass port may differ slightly from the actual &lt;i&gt;Percent&lt;/i&gt; value entered.) All remaining records are sent out the Fail port.&lt;/p&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records which pass the random selection filter.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records which do not pass the random selection filter.</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>5.0.0.103</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>154</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Filters\Random Percent Filter</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.MultiValueStats.1">
						<sci:component name="Basic Statistics" version="2">
							<sci:arg name="Statistics" type="StringType" required="true" visibility="visible" multi="true">
								<sci:help>The statistics to calculate</sci:help>
								<sci:member>Percentiles</sci:member>
								<sci:member>Percentile Type</sci:member>
								<sci:member>Sampling Rate</sci:member>
								<sci:member>Maximum Lag</sci:member>
								<sci:legalval selected="true">Mean</sci:legalval>
								<sci:legalval selected="true">StdDev</sci:legalval>
								<sci:legalval>StdDevSample</sci:legalval>
								<sci:legalval>SEM</sci:legalval>
								<sci:legalval>N</sci:legalval>
								<sci:legalval>Variance</sci:legalval>
								<sci:legalval>Skew</sci:legalval>
								<sci:legalval>Kurtosis</sci:legalval>
								<sci:legalval>Sum</sci:legalval>
								<sci:legalval>Min</sci:legalval>
								<sci:legalval>Max</sci:legalval>
								<sci:legalval>Median</sci:legalval>
								<sci:legalval>Mode</sci:legalval>
								<sci:legalval>GeometricMean</sci:legalval>
								<sci:legalval>HarmonicMean</sci:legalval>
								<sci:legalval>MAD</sci:legalval>
								<sci:legalval>Percentile</sci:legalval>
								<sci:legalval>Lag</sci:legalval>
								<sci:legalval>FFT</sci:legalval>
							</sci:arg>
							<sci:arg name="Percentiles" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Comma-separated list of the percentiles to output when Percentile is selected as one of the &lt;i&gt;Statistics&lt;/i&gt;. Values are in percentages (as opposed to fractions).</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Percentile&apos;)</sci:enabledscript>
								<sci:value>25,50,75</sci:value>
							</sci:arg>
							<sci:arg name="Percentile Type" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Method to use for computing percentiles. Options are:
&lt;ul&gt;
&lt;li&gt;Excel: Method used by Excel. Equivalent to the R type 7 method (see link below), which is the default in R.
&lt;li&gt;NIST: Method recommended in the NIST Engineering Statistics Handbook (see link  below). Equivalent to the R type 6 method. Also used by Minitab and SPSS.
&lt;li&gt;Closest Value: Returns the value from the input data whose sorted index is the lowest index greater than or equal to N*p/100, where N is the number of data points and p is the percentile level. Equivalent to the R type 1 method.
&lt;li&gt;R Type 2: R type 2 method. Similar to &quot;Closest Value&quot; but with averaging at discontinuities.
&lt;li&gt;R Type 3: R type 3 method. Also used by SAS.
&lt;li&gt;R Type 4: R type 4 method. Linear interpolation of the empirical cumulative distribution function.
&lt;li&gt;R Type 5: R type 5 method. According to R documentation, &quot;popular amongst hydrologists.&quot;
&lt;li&gt;R Type 8: R type 8 method. Recommended by Hyndman and Fan (see link below to R documentation).
&lt;li&gt;R Type 9: R type 9 method. According to R documentation, &quot;resulting quantile estimates are approximately unbiased for the expected order statistics if x is normally distributed.&quot;
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more information on these options, see &lt;a href=&quot;javascript:DoLink(&apos;http://stat.ethz.ch/R-manual/R-patched/library/stats/html/quantile.html&apos;)&quot;&gt;the R documentation for the quantile function&lt;/a&gt;, the article from the &lt;a href=&quot;javascript:DoLink(&apos;http://www.itl.nist.gov/div898/handbook/prc/section2/prc252.htm&apos;)&quot;&gt;NIST Engineering Statistics Handbook&lt;/a&gt; on percentiles, and the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Percentile&apos;)&quot;&gt;Wikipedia article&lt;/a&gt; on percentiles.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Percentile&apos;)</sci:enabledscript>
								<sci:legalval selected="true">Excel</sci:legalval>
								<sci:legalval>NIST</sci:legalval>
								<sci:legalval>Closest Value</sci:legalval>
								<sci:legalval>R Type 2</sci:legalval>
								<sci:legalval>R Type 3</sci:legalval>
								<sci:legalval>R Type 4</sci:legalval>
								<sci:legalval>R Type 5</sci:legalval>
								<sci:legalval>R Type 8</sci:legalval>
								<sci:legalval>R Type 9</sci:legalval>
							</sci:arg>
							<sci:arg name="Sampling Rate" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>For the FFT (Fast Fourier Transform) option, specifies the sampling rate of the input data in Hertz (i.e., data records per second). This is used to compute the values in the &lt;b&gt;FFTfrequency&lt;/b&gt; array which is matched with the &lt;b&gt;FFTamplitude&lt;/b&gt; array in the output.</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;FFT&apos;)</sci:enabledscript>
								<sci:value>10</sci:value>
							</sci:arg>
							<sci:arg name="Maximum Lag" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>For &quot;Lag&quot; output, the maximum number of previous data records from which to generate lagged values.</sci:help>
								<sci:enabledscript>contains(Parameter(&apos;Statistics&apos;), &apos;Lag&apos;)</sci:enabledscript>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>The applicable input properties for this component:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;AllPropertiesOnFirstData&lt;/b&gt;:  Uses all those that are found on the first data object.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;UserSet&lt;/b&gt;:  Takes the list of properties from the parameter &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen.  Properties can be referred to by index by using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>UserSet</sci:member>
								<sci:member>IgnoreProperties</sci:member>
								<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
								<sci:legalval>UserSet</sci:legalval>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to use for calculating statistics. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to ignore. This is used, for example, if the UseProperties parameter is set to &quot;AllPropertiesOnFirstData&quot;, and there is a small set of undesirable properties (such as record names) you do not want to use, but cannot remove.</sci:help>
								<sci:value>Dev</sci:value>
							</sci:arg>
							<sci:arg name="OutputResults" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies results to output. Options are:
&lt;ul&gt;
&lt;li&gt;As Summary: Output is a single data record containing the computed statistics.
&lt;li&gt;As Tabular Summary: Output is one data record for each property whose statistics have been computed, with one &quot;column&quot; for each statistic.
&lt;li&gt;On Original Data: Each input data record is output along with with the statistics computed over all data records.
&lt;li&gt;As Running Tally: Each input data record is output along with the statistics computed over all data records up to that point.
&lt;/ul&gt;
</sci:help>
								<sci:member>Output Suffix</sci:member>
								<sci:legalval>On Original Data</sci:legalval>
								<sci:legalval selected="true">As Summary</sci:legalval>
								<sci:legalval>As Tabular Summary</sci:legalval>
								<sci:legalval>As Running Tally</sci:legalval>
							</sci:arg>
							<sci:arg name="Output Suffix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text string to append to each output property name. Can be useful to prevent overwriting of results when using &lt;i&gt;Basic Statistics&lt;/i&gt; components in series (e.g., sampling data in different ways in each case).</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="GenerateStatisticsAcross" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>GenerateStatisticsAcross</sci:help>
								<sci:value>All Records</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Mar 22 11:06:37 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{F1C40831-FCA5-454e-867A-129B64053531}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Basic Statistics</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Multivalue Stats</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>CALCULATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Calculates statistics for specified properties over all data records</sci:value>
								<sci:value>Use &lt;i&gt;Statistics&lt;/i&gt; to specify the statistical quantities you wish to calculate. You can choose any or all of the following:
&lt;ul&gt;
&lt;li&gt;Mean: Sum of values divided by number of values. &lt;/li&gt;
&lt;li&gt;StdDev: Standard deviation if sample represents entire population. (Square-root of 1/N times sum of squared deviation from mean.)&lt;/li&gt;
&lt;li&gt;StdDevSample: Sample standard deviation. (Square-root of 1/(N-1) times sum of squared deviation from mean.  This is the square-root of the unbiased estimator of the population variance if the sample is a subset of a larger population).&lt;/li&gt;
&lt;li&gt;SEM: Standard error of the mean. Calculated as StdDevSample / sqrt(N). &lt;/li&gt;
&lt;li&gt;N: Number of values. &lt;/li&gt;
&lt;li&gt;Variance: Variance of values if sample represents entire population; square of StdDev. &lt;/li&gt;
&lt;li&gt;Skew: Skew of values. &lt;/li&gt;
&lt;li&gt;Kurtosis: Kurtosis of values (excess kurtosis relative to a Gaussian). &lt;/li&gt;
&lt;li&gt;Sum: Sum of values. &lt;/li&gt;
&lt;li&gt;Min: Minimum value. &lt;/li&gt;
&lt;li&gt;Max: Maximum value. &lt;/li&gt;
&lt;li&gt;Median: Median value. &lt;/li&gt;
&lt;li&gt;Mode: Most common value. &lt;/li&gt;
&lt;li&gt;GeometricMean: The N-th root of the product of N values. &lt;/li&gt;
&lt;li&gt;HarmonicMean: The reciprocal of the mean of the reciprocals. &lt;/li&gt;
&lt;li&gt;MAD: Median Absolute Deviation, the median of the absolute value of the difference between each data point and the median of the data points. &lt;/li&gt;
&lt;li&gt;Percentile: Percentile values specified by &lt;i&gt;Percentiles&lt;/i&gt;.
&lt;li&gt;Lag: Lagged values (values from previous data records) of property up to &lt;i&gt;Maximum Lag&lt;/i&gt; steps back. This can be useful for modeling time series or other ordered data. Output property names end with &lt;b&gt;Lag_&lt;i&gt;n&lt;/i&gt;&lt;/b&gt; where &lt;i&gt;n&lt;/i&gt; is the number of steps back. (Note that this option only makes sense for the &quot;As Running Tally&quot; output option.)
&lt;li&gt;FFT: Fast Fourier Transform of input data from time domain to frequency domain. Output for each property is two matched arrays with suffixes &lt;b&gt;FFTfrequency&lt;/b&gt; and &lt;b&gt;FFTamplitude&lt;/b&gt; corresponding to the frequency (derived from &lt;i&gt;Sampling Rate&lt;/i&gt;) and the amplitude at that frequency.
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Each property in each input data record may have one or multiple values. Statistics are calculated over all values for all records. For each statistic, a new property name is created by appending an underscore and the statistic name to the original property name. For percentiles, the number specifying the percentile level is appended to the name as well.&lt;/p&gt;
&lt;p&gt;
Use &lt;i&gt;OutputResults&lt;/i&gt; to specify whether you wish to output only the statistics (&quot;As Summary&quot;) or to add the statistics to the original data records (&quot;On Original Data&quot;). Note that in the latter case, the same value for each statistic will appear on each record, as the statistics are computed over all records. Alternatively, choose &quot;As Running Tally&quot; to output each original data record along with the statistical quantities computed over all records up to that point. Finally, choose &quot;As Tabular Summary&quot; to output summary results in the form of a table, with one column containing property names, and additional columns containing the computed statistics &lt;i&gt;without&lt;/i&gt; the property name prefix.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Common usage of the term &quot;sample standard deviation&quot; (or &quot;sample variance&quot;) is inconsistent in that it sometimes refers to the form with N in the denominator, as &lt;a href=&quot;javascript:DoLink(&apos;http://mathworld.wolfram.com/StandardDeviation.html&apos;)&quot;&gt;here&lt;/a&gt;, and sometimes to the form with N-1 in the denominator, as &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Standard_deviation&apos;)&quot;&gt;here&lt;/a&gt;.  The distinction is usually not important in that &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Variance#Population_variance_and_sample_variance&apos;)&quot;&gt;&quot;for small sample sizes both are inaccurate and for large values of N they are practically the same.&quot;&lt;/a&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records augmented with the requested statistics</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with missing or invalid values for all properties whose statistics are being calculated</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1749</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>172</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{AE799FB1-57AA-4D8E-BB96-3C17B52A84CF}</sci:value>
								<sci:value>1</sci:value>
								<sci:value>-1</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Basic Statistics</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>JoinMe := &quot;Yes&quot;;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2190 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>188</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>TrainDataMeanStdDev</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>2490 -1536</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>174</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Writer" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache to write, for example: A, 1234 or MyCache.  To create a temporary cacheID use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component.
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Append</sci:member>
								<sci:member>Scope</sci:member>
								<sci:value>TestData</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write to the cache.</sci:help>
							</sci:arg>
							<sci:arg name="Append" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, append to a currently-existing cache if possible; if False, clear any current contents of the cache</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. &lt;I&gt;Job Only&lt;/I&gt; creates a cache that is visible
only to components in the currently-running protocol, and which is deleted when the protocol finishes.
&lt;I&gt;User Only&lt;/I&gt; creates a cache that is visible to components in any protocol a particular user runs;  
&lt;I&gt;All Users&lt;/I&gt; creates a cache that is visible to any user on the Pipeline Pilot server. 
&lt;P&gt;Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to fully determine a particular cache.&lt;/P&gt;
&lt;P&gt;Since the caches created with scopes &lt;I&gt;User Only&lt;/I&gt; and &lt;I&gt;All Users&lt;/I&gt;
may be accessed by multiple jobs, you should use caution, as problems may arise if two jobs try to write to 
the same shared cache at once. Also, to save disk space, you are responsible for deleting these caches
when finished, using the &lt;I&gt;Delete Cache&lt;/I&gt; component. &lt;/P&gt;
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Create Index for Join" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>If set to True, creates an index for the cache that can be used by subsequent &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  As long as the later Join components use identical settings, the created index will greatly improve the performance of the join.  When set to true, you will also need to update &lt;i&gt;JoinUsing&lt;/i&gt;, &lt;i&gt;JoinUsingListType&lt;/i&gt;, &lt;i&gt;JoinPropertyType&lt;/i&gt;, and &lt;i&gt;IgnoreCase&lt;/i&gt; to match your Join component.</sci:help>
								<sci:member>JoinUsing</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:member>JoinUsingListType</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinUsing" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>The name of the property or properties to index for use by &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; components.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted for creating a cache index when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: The join will use only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: The join will use the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;
&lt;p&gt;This parameter must match the identically named parameter on the Join component in order to benefit from the created index.&lt;/p&gt;</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>The data type of the &lt;i&gt;JoinUsing&lt;/i&gt; property. This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.  This parameter must match the identically named parameter on the Join component in order to benefit from the created index.</sci:help>
								<sci:enabledscript>Parameter(&apos;Create Index for Join&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Write Globals</sci:member>
								<sci:member>Enable Compression</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Write Globals" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;Specifies which globals, if any, are written into the cache.&lt;/p&gt;
&lt;p&gt;The value is an array of top-level global names or global nodes specified using XPath notation. Note that node names should end with a forward slash (/).&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Enable Compression" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Specifies if data written to disk should be compressed.&lt;/p&gt;
&lt;b&gt;Note:&lt;b&gt; Starting with 2017 R2, compression uses the LZ4 compression algorithm which is very fast.  Turning off compression will typically result in 6 to 10 times increased disk usage with little or no improvement in performance.  You should test your own data for comparison.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
An optional password to assign to the cache content. Once set, the password must be used to read data back from the cache. It is useful to control access to a new public data cache.
&lt;/p&gt;
&lt;p&gt;
For an existing cache, set the password to be able to overwrite or append to the content.
&lt;/p&gt;
&lt;p&gt;
Note that the user who writes a password-protected cache does not require a password to access or overwrite the content.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval selected="true">Writer</sci:legalval>
								<sci:legalval>Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:11:28 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Write cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -1716</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{674E3781-33EA-42BB-9099-49CB4C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is place where you can temporarily store data records without losing information.  Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache.  A cache can contain records of different types.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To avoid clashes with other cache names, you can use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to obtain a global with a unique cacheID.  For example, you could have a temporary cacheID identified by MYCACHE and set &lt;i&gt;CacheID&lt;/i&gt; to $(MYCACHE).&lt;/li&gt;
&lt;li&gt;Typically, a cache is scoped to only be visible to component in the currently-running job.  To create caches that outlive a job, and may be seen by other users, use the &lt;I&gt;Scope&lt;/I&gt; parameter.&lt;/li&gt;
&lt;li&gt;Caches can be used with the &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt; component to add properties to a separate data stream.  To improve the performance of the join, the cache can be indexed during creation by using the &lt;i&gt;Create Index for Join&lt;/i&gt; parameter.&lt;/li&gt;
&lt;li&gt;A password may be assigned to a new cache to control read and write access to the content.&lt;/p&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To retrieve data from a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9099-05B44C3D08E6}&apos;)&quot;&gt;Cache Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To join against a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache, use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>165</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Cache Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>ReferenceClass</sci:value>
								<sci:value>BalancedErrorRateTraining</sci:value>
								<sci:value>KappaTraining</sci:value>
								<sci:value>SensitivityTraining</sci:value>
								<sci:value>SpecificityTraining</sci:value>
								<sci:value>Ntraining</sci:value>
								<sci:value>Iteration</sci:value>
								<sci:value>ROCTest</sci:value>
								<sci:value>BalancedErrorRateTest</sci:value>
								<sci:value>KappaTest</sci:value>
								<sci:value>SensitivityTest</sci:value>
								<sci:value>SpecificityTest</sci:value>
								<sci:value>Ntest</sci:value>
								<sci:value>ConfusionTraining</sci:value>
								<sci:value>ConfusionTest</sci:value>
								<sci:value>ROCTraining</sci:value>
								<sci:value>MeanROCTest</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -2076</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>156</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.SeparateValues.1">
						<sci:component name="Unmerge Data" version="2">
							<sci:arg name="PropertyNames" type="PropertyNameType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;The names of the one or more properties to separate and return as separate data records.  If no property names are given, then all properties with
multiple values will be unmerged. If multiple properties are unmerged, the number of unmerged records is the number of values of a property with the maximum number of values.</sci:help>
							</sci:arg>
							<sci:arg name="Additional Options" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Large Data Records</sci:member>
								<sci:member>Unmerge ByteArrayValues</sci:member>
							</sci:arg>
							<sci:arg name="Large Data Records" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each of your records are particularly large, setting this parameter to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Unmerge ByteArrayValues" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>ByteArrayValues are property representations of binary data.  Although they are technically arrays of bytes and could be unmerged, in most cases these properties should be treated as a single value rather than an array of bytes.  This parameter is available to restore the previous odd behavior, if desired.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:08:33 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unmerge Data</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Unmerge Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>GENERATORNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{5E28C170-2FEC-4A3C-90A6-2DCEAA330E9D}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -2076</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Separates data records containing array properties into individual records with one array value per record</sci:value>
								<sci:value>&lt;p&gt;Each incoming data record with more than one value for the property or properties specified by &lt;i&gt;PropertyNames&lt;/i&gt; is duplicated for each of the values.  For example, an input data record with three values will generate three output data records.  Each output record will contain one of the values for the &lt;i&gt;PropertyNames&lt;/i&gt; property, and all other properties will be identical.&lt;/p&gt;
&lt;p&gt;&lt;i&gt;Large Data Records&lt;/i&gt;: When individual data records are very large as may be the case with Images, Sequence Analysis or Gene Expression Data, or Text Analytics annotations, this component can easily run out of memory on 32-bit systems.  If each data record is particularly large, setting &lt;i&gt;Large Data Records&lt;/i&gt; to true will significantly reduce the memory usage of the component but with the tradeoff of slower performance.&lt;/p&gt;


&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no property names are given, then all properties with multiple values are unmerged.  In this case, unexpected occurrences of arrays in a property will cause unintentional unmerge operations.  Try to specify a value for &lt;i&gt;PropertyNames&lt;/i&gt; if possible.&lt;/li&gt;
&lt;li&gt;If multiple unmerge properties are specified, the number of data records that result from unmerging a given incoming data record is equal to the number of values of the unmerge property that has the most values.  That is, if two unmerge properties, &quot;A&quot; and &quot;B&quot; are specified where A has 5 values and B has 7 values, then 7 data records will result.  The first 5 records will contain, in order, the 5 values of A.  For the last two records, A will be undefined.  All other properties will be duplicated on each record.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records containing the separated values for the property or properties specified.</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>157</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Unmerge Data</sci:value>
							</sci:arg>
						</sci:component>
						<sci:proplist>
							<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
						</sci:proplist>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Expand(&apos;;&apos;, FPRateTest);
Expand(&apos;;&apos;, TPRateTest);
</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -2076</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>158</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAI+A1RoZSBsb2NhdGlvbiB0byB3aGljaCB0byB3cml0ZSB0aGUgZGF0YS4gQ2FuIGJlIGEgZmlsZSwgYSBuZXR3b3JrIHJlc291cmNlLCBhIGdsb2JhbCBwcm9wZXJ0eSwgb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eS4KPHVsPgo8dWw+CjxsaT5Gb3IgYSBmaWxlLCBlbnRlciBhIHBhdGguPC9saT4KPGxpPkZvciBhIG5ldHdvcmsgcmVzb3VyY2UsIGVudGVyIGEgbmV0d29yayBVUkwgaW4gdGhlIGZvcm0gPGI+cHJvdG9jb2w6Ly9zZXJ2ZXI6cG9ydC8uLi48L2I+LiAoSWYgcG9ydCBpcyBvbWl0dGVkLCBhIGRlZmF1bHQgaXMgdXNlZC4pIFByb3RvY29scyBzdXBwb3J0ZWQgYXJlOgoJPHVsPgoJPGxpPmh0dHAsIGh0dHBzPC9saT4KCTxsaT5mdHA8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPGxpPkZvciBhIGdsb2JhbCBwcm9wZXJ0eSwgZW50ZXIgImdsb2JhbDovL3Byb3BlcnR5LW5hbWUiLjwvbGk+CjxsaT5Gb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eSwgZW50ZXIgInByb3BlcnR5Oi8vcHJvcGVydHktbmFtZSIgYW5kIGFkZCBhbiBvdXRwdXQgcG9ydC48L2xpPgo8L3VsPgo8cD4KPGI+Tm90ZTo8L2I+CjwvcD4KPHVsPgo8bGk+V2hlbiB0aGUgZGVzdGluYXRpb24gaXMgYSBmaWxlIG9yIG5ldHdvcmsgcmVzb3VyY2UsIGJlIHN1cmUgdG8gc3BlY2lmeSBhbiBleHRlbnNpb24gc3VjaCBhcyAudHh0IG9yIC54bHMuIFRvIHNhdmUgaW4gY29tcHJlc3NlZCAoemlwcGVkKSBmb3JtYXQsIGFkZCB0aGUgZXh0ZW5zaW9uIC5neiBvciAuemlwIHRvIHRoZSBmaWxlbmFtZS48L2xpPgo8L3VsPgoBE0Rlc3RpbmF0aW9uVVJMVHlwZQAMAAAAAAEAAQAEAPwAAAAAAAAAAAAwRGVzdGluYXRpb24DzFPPuwFAcHVibGljOi9DbGluaWMxOTIwL1Jlc3VsdHMvJChtb2RlbG5hbWUpX3ZhbGlkYXRpb25fUk9DX2RhdGEuY3N2AA==</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">DestinationURLType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>&apos;public:/Clinic1920/Results/&apos;+@modelname+&apos;_validation_ROC_data.csv&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write Model ROC Validation Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -2076</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>159</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Excel Reader" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
								<sci:member>Keep Properties</sci:member>
								<sci:member>Maximum</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>HasColumnNames</sci:member>
								<sci:member>Column Name Lines</sci:member>
								<sci:value>job:/trainingData.csv</sci:value>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>SheetTag</sci:member>
								<sci:member>SheetName</sci:member>
								<sci:legalval selected="true">AllSheets</sci:legalval>
								<sci:legalval>ActiveSheet</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
							</sci:arg>
							<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SheetName</sci:legalval>
								<sci:legalval>SheetNumber</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>AllLines</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>TrimWhitespace</sci:member>
								<sci:member>CommentLines</sci:member>
								<sci:member>DateFormat</sci:member>
								<sci:member>PreserveExcelFormats</sci:member>
								<sci:member>Reduced Memory Usage</sci:member>
								<sci:member>Extract Comments</sci:member>
								<sci:member>Cells can contain Arrays</sci:member>
								<sci:member>Array Element Delimiter</sci:member>
								<sci:member>Read Background Color</sci:member>
								<sci:member>Treat empty cells as non-existant</sci:member>
							</sci:arg>
							<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
							</sci:arg>
							<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
								<sci:legalval selected="true">Text</sci:legalval>
								<sci:legalval>DateTime</sci:legalval>
							</sci:arg>
							<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Extract Comments</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
								<sci:value>merge_tagname</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
								<sci:legalval/>
								<sci:legalval>1</sci:legalval>
								<sci:legalval selected="true">2</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Cells can contain Arrays</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Array Element Delimiter</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
								<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
								<sci:legalval selected="true">\n</sci:legalval>
								<sci:legalval>;</sci:legalval>
								<sci:legalval>,</sci:legalval>
								<sci:legalval>:</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
								<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Read Background Color</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>Treat empty cells as non-existant</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -2256</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
								<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1778</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Make Shortcut by Default</sci:legalval>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read Training Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>160</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{0F89F29F-CC66-4EE9-818B-87B113C5508C}</sci:value>
								<sci:value>1</sci:value>
								<sci:value>-1</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Subprotocol" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.
&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;
Note: In an expression inside the subprotocol you can identify the category property name as:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;parentproperty(&apos;RunToCompletion Categorize Using&apos;)&lt;/code&gt;
&lt;p&gt;
And so to access the value of this property on the current data record, use:
&lt;/p&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;property(parentproperty(&apos;RunToCompletion Categorize Using&apos;))&lt;/code&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
								<sci:value>Account=</sci:value>
								<sci:value>Maximum Execution Time=</sci:value>
								<sci:value>Parallel Environment=</sci:value>
								<sci:value>Number of Cores=</sci:value>
								<sci:value>Other=</sci:value>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Train Model</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>SUBPROTOCOLNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -2256</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
								<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>20.1.0.2181</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>90</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/coreutils</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>161</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="LGFB_CV" version="2">
									<sci:arg name="LearnedPropertyName" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" ishidden="true" base64="UI1">Al1HAAK7AE5hbWUgb2YgdGhlIG1vZGVsIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgTGVhcm5lZFByb3BlcnRpZXMgZm9sZGVyIG9uIHlvdXIgdXNlciB0YWIuICBUaGlzIGlzIGFsc28gdGhlIGJhc2UgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IGNhbiBiZSBjYWxjdWxhdGVkIGJ5IHRoYXQgY29tcG9uZW50LixTdHJpbmdUeXBlAAwAAAABAQAAARxUaGlzIHBhcmFtZXRlciBpcyByZXF1aXJlZC4EAPwAAAAAAAAAAAABFExlYXJuZWRQcm9wZXJ0eU5hbWUDzFPPuwQA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType" ishidden="true">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" ishidden="true" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType" ishidden="true">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
										<sci:value>modelname</sci:value>
									</sci:arg>
									<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the dependent (Y) property to be learned</sci:help>
										<sci:member>Preferred Value</sci:member>
										<sci:member>ROC Score Type</sci:member>
										<sci:member>Optimize Cutoff</sci:member>
										<sci:value>Dev</sci:value>
									</sci:arg>
									<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>In the binary Bayesian case (in which &lt;i&gt;Learner&lt;/i&gt; is &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;), specifies the &quot;good&quot; class. In the multi-class case (in which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies the &quot;positive&quot; class for the purpose of calculating ROC scores, false negatives, false positives, and so on.
&lt;p&gt;
If blank, the preferred class is taken to be the first in alphabetical order.</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ROC Score Type" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>For the multi-class case only (for which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies how the ROC area-under-the-curve (AUC) scores are to be computed. Options are:
&lt;ul&gt;
&lt;li&gt;Preferred Only: Computes only the ROC score for the &lt;i&gt;Preferred Value&lt;/i&gt; versus not-&lt;i&gt;Preferred Value&lt;/i&gt; distinction, using the model output score for the &lt;i&gt;Preferred Value&lt;/i&gt; class.
&lt;li&gt;One-versus-Rest: For each class (each distinct value of the &lt;i&gt;Name&lt;/i&gt; property), computes a ROC score for the in-class verus not-in-class distinction, using the model output score for that class. The reported ROC score is the mean of all such partial ROC scores.
&lt;li&gt;One-versus-One: For each pair of classes, A and B, data not belonging to either class are excluded. Then two partial ROC scores are computed for the A-versus-B distinction: one using the model output score for class A, the other using the model output score for class B. The reported ROC score is the mean of all such partial ROC scores. This is the most computationally expensive option.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For a description of the &quot;one-versus-one&quot; method of computing ROC scores for multi-class problems see: D.J. Hand and R.J. Till, &quot;A Simple Generalization of the Area Under the ROC Curve for Multiple Class Classification Problems,&quot; &lt;i&gt;Machine Learning&lt;/i&gt;, &lt;b&gt;45&lt;/b&gt;, 171 (2001). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.springerlink.com/content/nn141j42838n7u21/fulltext.pdf&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">Preferred Only</sci:legalval>
										<sci:legalval>One-versus-Rest</sci:legalval>
										<sci:legalval>One-versus-One</sci:legalval>
									</sci:arg>
									<sci:arg name="Optimize Cutoff" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For those model types that support override of the default cutoff score used to divide classes, specifies that the learner will optimize this value based on the validation model predictions (e.g., the cross-validated predictions). Cutoff optimization is supported for the Cross-validation and Bootstrap validation types only.</sci:help>
										<sci:enabledscript>setdisableddetails(&apos;Cutoff optimization not supported for learner &quot;&apos; . Parameter(&apos;Learner&apos;) . &apos;&quot;&apos;);
#cutoffLearners := tolower(&apos;Learn Good From Bad,Learn Good Molecules,Learn RP Tree Model,Learn RP Forest Model,Learn R Linear Discriminant Analysis Model,Learn R Forest Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Support Vector Machine Model,Learn R XGBoost Model,Learn R Logistic Regression Model&apos;);

expand(&apos;,&apos;, #cutoffLearners);
#learner := tolower(Parameter(&apos;Learner&apos;));

contains(#cutoffLearners, #learner);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Input string properties with any of the following values (independent of case) are treated as Boolean: &quot;True&quot;, &quot;False&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. If you wish such properties to be treated as strings instead, you should modify the values with a prefix or suffix. E.g., change &quot;T&quot; to &quot;T.&quot; or &quot;TT&quot;.
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
										<sci:member>PredefinedSet</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>IgnoreProperties</sci:member>
										<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval>PredefinedSet</sci:legalval>
										<sci:legalval>UserSet</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval selected="true">ALogP</sci:legalval>
										<sci:legalval selected="true">Molecular_Weight</sci:legalval>
										<sci:legalval selected="true">Num_H_Donors</sci:legalval>
										<sci:legalval selected="true">Num_H_Acceptors</sci:legalval>
										<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
										<sci:legalval>Num_Atoms</sci:legalval>
										<sci:legalval>Num_Rings</sci:legalval>
										<sci:legalval>Num_AromaticRings</sci:legalval>
										<sci:legalval>Num_Fragments</sci:legalval>
										<sci:legalval>NPlusO_Count</sci:legalval>
										<sci:legalval>Molecular_Solubility</sci:legalval>
										<sci:legalval>Molecular_SurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSASA</sci:legalval>
										<sci:legalval>AlogP_Count</sci:legalval>
										<sci:legalval>FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval selected="true">FCFP_6</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
										<sci:legalval>Estate_Keys</sci:legalval>
										<sci:legalval>Estate_Counts</sci:legalval>
										<sci:legalval>MDLPublicKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
										<sci:value>pdb_code, DI</sci:value>
									</sci:arg>
									<sci:arg name="Model Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the &lt;i&gt;Learner&lt;/i&gt; is configured to create a Regression model of a numeric Y property, or a Classification model of a categorical Y property.</sci:help>
										<sci:legalval selected="true">Classification</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>Name of learner to be used to build validated models. See the help for the corresponding component for more information on the learner. See also the help for the parameters inside this one.
</sci:help>
										<sci:member>Learner Multiselect Learn Options</sci:member>
										<sci:member>Learner (Group) Additional Options</sci:member>
										<sci:legalval selected="true">Learn Good From Bad</sci:legalval>
									</sci:arg>
									<sci:arg name="Output Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the format of the data records sent out the Pass port after the model is built. Options are:
&lt;ul&gt;
&lt;li&gt;Raw: all data are output as properties in raw form. Plot and importance data are output as contracted semicolon-delimited arrays. For plotting and further analysis, you may need to unmerge data records and expand these arrays.
&lt;li&gt;Report: A Reporting object summarizing the results is output. The format is an HTML tabbed report. This can be displayed directly in the &lt;a href=&quot;javascript:DoLink(&apos;{0952D9DF-F95C-4D43-826F-C70450811DD8}&apos;)&quot;&gt;HTML Report Viewer&lt;/a&gt; or can be embedded within another report.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Raw</sci:legalval>
										<sci:legalval>Report</sci:legalval>
									</sci:arg>
									<sci:arg name="Validation Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the type of model validation to perform. Options are:
&lt;ul&gt;
&lt;li&gt;None: No validation is done. This option is useful if you wish to perform parameter tuning using the root-mean-square (RMS) error for the training data as the basis for selecting the best among different combinations of learner parameter settings. Note that this approach provides no protection against overfitting. Only one iteration is done for this case. (The value of &lt;i&gt;Iterations&lt;/i&gt; is ignored.)
&lt;li&gt;Bootstrap: For each iteration, a bootstrap sample is drawn from the original data; a model is fitted to the sample; and predictions are made for the data records excluded from the sample. A bootstrap sample from N input data records consists of N records randomly selected &quot;with replacement,&quot; meaning that duplicates are allowed. On average, about 63% of the records are included in the sample at least once, and 37% are excluded.
&lt;li&gt;Cross-Validation: The input data records are divided into some number of subsets. For each subset, a model is build from all other data records, and predictions are made for that subset. This process is repeated until all subsets are covered. See &lt;i&gt;Cross-Validation Type&lt;/i&gt; for the different types of cross-validation that you can perform.
&lt;li&gt;Y Scrambling: For each iteration, the set of Y (independent property) values for the input data set is randomly reordered and a model is built from this artificial data set. By contrast to the other validation methods, small Qsquared (relative to Rsquared) and large ValidationRMSE (relative to RMSE) values are &quot;good&quot; in this case, because they indicate that the model of the unscrambled data is not simply fitting noise in the data (i.e., overfitting).</sci:help>
										<sci:member>Iterations</sci:member>
										<sci:member>Estimate Variable Importance</sci:member>
										<sci:member>Cross-Validation Type</sci:member>
										<sci:member>Random Seed</sci:member>
										<sci:member>Output Plot Data</sci:member>
										<sci:member>Scratch Folder</sci:member>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Bootstrap</sci:legalval>
										<sci:legalval selected="true">Cross-Validation</sci:legalval>
										<sci:legalval>Y Scrambling</sci:legalval>
									</sci:arg>
									<sci:arg name="Iterations" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of times to repeat the validation scheme. Multiple iterations make sense only for those validation schemes that contain an element of randomness&amp;mdash;specifically k-fold cross validation, bootstrapping, and Y-scrambling. For other validation schemes (e.g., leave-one-out cross-validation), only one iteration is performed irrespective of the value specified here, because the results would be the same each time.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to a value other than None.&apos;);
parameter(&apos;Validation Type&apos;) ne &apos;None&apos;</sci:enabledscript>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Estimate Variable Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to compute the importance of variables using a permutation approach. (Variables are not necessarily the same as descriptors. E.g., in this context, fingerprints are descriptors, but fingerprint features are variables.)
&lt;p&gt;
The importance is estimated by the following procedure:
&lt;ol&gt;
&lt;li&gt;A model is built as usual using the cross-validation or bootstrap sample, or if &lt;i&gt;Validation Method&lt;/i&gt; is &quot;None&quot;, using all training data. (Importance estimation does not apply for the &quot;Y Scrambling&quot; method.)
&lt;li&gt;Predictions are made for the left-out data (cross-validation and bootstrap options) or the training data (&quot;None&quot; option).
&lt;li&gt;For each variable in turn, all values of that variable are randomly permuted and predictions are made from the data with the permuted values.
&lt;li&gt;The root-mean-square (RMS) difference in the predicted response and the difference in the RMS error relative to the unpermuted data are computed.
&lt;li&gt;The larger these differences are, the greater the presumed importance of the variable. 
&lt;/ol&gt;
&lt;p&gt;
Outputs from an importance calculation are as follows.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Variable Name&lt;/b&gt;: Name of variable.
&lt;li&gt;&lt;b&gt;Variable SMILES&lt;/b&gt;: (only for molecular fingerprint data) SMILES string representing the structural feature corresponding to a variable representing a molecular fingerprint bit.
&lt;li&gt;&lt;b&gt;Variable Importance (ROC AUC Change)&lt;/b&gt;: Variable importance calculated as the change in the ROC AUC score from when the variable values are randomly permuted. (Note that this value can be negative, indicating that permuting the values actually improved the ROC score. The magnitude of the value in such a case should be small, indicating an unimportant variable. Large negative values might indicate overfitting.)
&lt;/ul&gt;
The above values are output as contracted arrays (with &quot;;&quot; as the delimiter) for each iteration of validation. The arrays should be expanded and unmerged in order to sort or plot the values. You can also use &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt; to convert the &lt;b&gt;Variable SMILES&lt;/b&gt; property to a molecular structure.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For scalar properties, a variable is the same as a descriptor.
&lt;li&gt;For array properties, each element of the array is treated as a separate variable.
&lt;li&gt;For fingerprint properties, each distinct fingerprint feature is treated as a separate variable. The value of &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; specifies the minimum number of data records on which a feature must be present in order for its importance to be estimated. 
&lt;li&gt;Permutation importance measures have been extensively studied for forest models, but less so for other model types. In data sets containing variables of different types (e.g., categorical and continuous), the measures may be biased. Also, for forest models, the importance tends to be overestimated for variables that are correlated with other variables in the data. For details, see the following: C. Strobl et al., &quot;Bias in random forest variable importance measures: Illustrations, sources and a solution&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2007, &lt;b&gt;8&lt;/b&gt;:25 (doi:10.1186/1471-2105-8-25), and C. Strobl et al., &quot;Conditional variable importance for random forests&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2008, &lt;b&gt;9&lt;/b&gt;:307 (doi:10.1186/1471-2105-9-307).
&lt;/ul&gt;</sci:help>
										<sci:member>Min Fingerprint Feature Count</sci:member>
										<sci:member>Whole Descriptor Importance</sci:member>
										<sci:enabledscript>parameter(&apos;Validation Type&apos;) ne &apos;Y Scrambling&apos;</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Min Fingerprint Feature Count" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a fingerprint property, specifies the minimum number of times a feature (bit) must be present in the input data for the importance to be calculated for that feature. Very rare features are unlikely to have a high importance ranking, and ignoring them in the importance calculation can decrease the calculation time.
&lt;p&gt;
The same is true for extremely common features. Thus, any feature present in &lt;b&gt;more&lt;/b&gt; than N - &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; data records is also ignored, where N is the total number of input data records.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">sqrt(N)</sci:legalval>
										<sci:legalval>1</sci:legalval>
										<sci:legalval>2</sci:legalval>
										<sci:legalval>4</sci:legalval>
										<sci:legalval>8</sci:legalval>
										<sci:legalval>16</sci:legalval>
										<sci:legalval>32</sci:legalval>
										<sci:legalval>64</sci:legalval>
										<sci:legalval>128</sci:legalval>
										<sci:legalval>256</sci:legalval>
									</sci:arg>
									<sci:arg name="Whole Descriptor Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For array and fingerprint properties, specifies whether to calculate the importance of the descriptor as a whole, in addition to the importance for the individual elements or features of the descriptor.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Cross-Validation Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Indicates the method of dividing the original data into subsets for cross-validation. Options are:
&lt;ul&gt;
&lt;li&gt;Random: Performs k-fold cross-validation in which each data record is randomly assigned to one of k subsets of equal size (plus or minus one record), with the value of k given by &lt;i&gt;Number of Folds&lt;/i&gt;.
&lt;li&gt;Stratified Random: Like Random except that each distinct class of data records is divided into k folds which are then combined into k overall folds.
&lt;li&gt;Random Subset: Creates a random subset containing a fraction &lt;i&gt;Training Fraction&lt;/i&gt; of the input data, builds a model from these data, and applies the model to the remaining data.
&lt;li&gt;Leave-One-Out: Each data record is assigned to its own subset. Equivalent to N-fold cross-validation, where N is the number of data records. &lt;b&gt;Note that for a large input data set, this option is extremely slow.&lt;/b&gt; Because there is only one way to divide N data records into N subsets, only 1 iteration is performed for this option.
&lt;li&gt;Preselected: The value of the property named by &lt;i&gt;Subset Property&lt;/i&gt; identifies the subset to which each data record belongs. This option is useful if you wish to use a method such as clustering for dividing the data into subsets.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Property</sci:member>
										<sci:member>Number of Folds</sci:member>
										<sci:member>Training Fraction</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to Cross-Validation.&apos;);
parameter(&apos;Validation Type&apos;) eq &apos;Cross-Validation&apos;</sci:enabledscript>
										<sci:legalval>Random</sci:legalval>
										<sci:legalval selected="true">Stratified Random</sci:legalval>
										<sci:legalval>Random Subset</sci:legalval>
										<sci:legalval>Leave-One-Out</sci:legalval>
										<sci:legalval>Preselected</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Preselected, specifies the name of the property whose value indicates the subset to which each data record belongs.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Preselected.&apos;);
Parameter(&apos;Cross-Validation Type&apos;) eq &apos;Preselected&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Number of Folds" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Random, indicates the number of equal-sized subsets into which the data set is to be divided for cross-validation.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Random or Stratified Random.&apos;);
parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random&apos; or parameter(&apos;Cross-Validation Type&apos;) eq &apos;Stratified Random&apos;</sci:enabledscript>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Training Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Fraction of data to put into the training set for the Random Subset &lt;i&gt;Cross-Validation Type&lt;/i&gt;.</sci:help>
										<sci:enabledscript>parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random Subset&apos;</sci:enabledscript>
										<sci:value>0.7</sci:value>
									</sci:arg>
									<sci:arg name="Random Seed" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Seed value for random number generator used in resampling and other calculations</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Output Plot Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>For binary classification only, specifies whether to output data that can be used to generate ROC plots. If True, then the following two additional properties are added to the output data record for each parameter set:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FPRateTest:&lt;/b&gt; Values representing the false positive rate for each point on the ROC plot for a given validation iteration. (ROC plot X axis.)
&lt;li&gt;&lt;b&gt;TPRateTest:&lt;/b&gt; Values representing the true positive rate for each point on the ROC plot for a given validation iteration. (ROC plot Y axis.)
&lt;/ul&gt;
These properties contain arrays of semicolon-separated values. There is one array element for each validation iteration. Each array element can be expanded into its own array for plotting by using the PilotScript expand() function.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Scratch Folder" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Location of XMLDB folder into which temporary models and learners will be written</sci:help>
										<sci:value>$(UserName)/TempModels</sci:value>
									</sci:arg>
									<sci:arg name="Build Extended Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether, in addition to the final model built with untagged data, you wish to build an &quot;extended&quot; model using both untagged and tagged data. For model testing purposes, you may wish to initially hold out a portion of all available data, but to include this portion when building the model you use for making predictions. If &lt;i&gt;Build Extended Model&lt;/i&gt; is true, two final models are produced: one with the name specified by &lt;i&gt;LearnedPropertyName&lt;/i&gt;, the other with the suffix &quot;Ext&quot; appended to the name.
&lt;p&gt;
Use &lt;i&gt;Test for Extra Data&lt;/i&gt; to specify a PilotScript expression that evaluates to False for data records to be included in both models, and True for data records to be included only in the extended model.</sci:help>
										<sci:member>Test for Extra Data</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Test for Extra Data" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>PilotScript expression which evaluates to False for training data records to be used in the model evaluation statistics and to build the model named by &lt;i&gt;LearnedPropertyName&lt;/i&gt;. The expression should evaluate to True for &quot;extra&quot; data records to be included in an additional model of the same name but with the suffix &quot;Ext&quot;.</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Extended Model&apos;) = True</sci:enabledscript>
										<sci:value>isExtra is defined</sci:value>
									</sci:arg>
									<sci:arg name="Build Ensemble Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specified whether to build a &quot;bagged&quot; (bootstrap-aggregated) ensemble model as the final model after any parameter optimization.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Ensemble models are not supported for &lt;a href=&quot;javascript:DoLink(&apos;{4B37A4B3-BAEF-4000-96D0-031FF49A87C7}&apos;)&quot;&gt;Learn R Logistic Regression Model&lt;/a&gt; because logistic regression models do not output a class prediction, but only a score.
&lt;/ul&gt;</sci:help>
										<sci:member>Ensemble Size</sci:member>
										<sci:member>Sampling Method</sci:member>
										<sci:member>Resample Descriptors</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Ensemble Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of sub-models in ensemble</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Sampling Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the resampling method to use in order to generate data for the sub-models of the ensemble from the original training data. Options are:
&lt;ul&gt;
&lt;li&gt;Bootstrap: For each sub-model, generates a random bootstrap sample of the same size as the input training set.
&lt;li&gt;Random Subsets: For each sub-model, generates a random subset containing a fraction of the training data specified by &lt;i&gt;Subset Fraction&lt;/i&gt;.
&lt;li&gt;Non-overlapping Subsets: Divides the input data into &lt;i&gt;Ensemble Size&lt;/i&gt; random disjoint subsets and builds a sub-model for each subset.
&lt;li&gt;None: Does not resample the data. Builds each sub-model from the entire training set. &lt;i&gt;Use this option only if the learner for the sub-models has a stochastic element or does its own resampling. Otherwise, each sub-model will be identical&lt;/i&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Fraction</sci:member>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval selected="true">Bootstrap</sci:legalval>
										<sci:legalval>Random Subsets</sci:legalval>
										<sci:legalval>Non-overlapping Subsets</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Sampling Method&lt;/i&gt; is &quot;Random Subsets&quot;, specifies the fraction of data to include in each subset. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>Parameter(&apos;Sampling Method&apos;) eq &apos;Random Subsets&apos;</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Resample Descriptors" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to resample the descriptors used to build the model so that each sub-model is given a different random subset of all of the descriptors. This increases the cross-model variance and may improve the predictive performance of the ensemble model or the performance of a quality model of the ensemble.</sci:help>
										<sci:member>Descriptor Fraction</sci:member>
										<sci:enabledscript>parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Descriptor Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Resample Descriptors&lt;/i&gt; is True, specifies the fraction of descriptors to include for each sub-model. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>parameter(&apos;Resample Descriptors&apos;)</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options</sci:value>
												<sci:value>Use Parallel Processing</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
If set to True, each iteration of modeling building out of &lt;i&gt;Number of Iterations&lt;/i&gt; is run in a separate parallel process, or if the number of learner parameter combinations exceeds the number of iterations, each parameter combination is run in a separate process. In addition, if &lt;i&gt;Build Ensemble Model&lt;/i&gt; is True, each sub-model of the ensemble is built in a separate process. Running in parallel can decrease the calculation time on multi-core, cluster, or grid servers.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Limitations:&lt;/b&gt; Paths to job and user folders on the primary compute node must be visible from all other compute nodes, and all compute nodes must share a single component database (XMLDB).
&lt;/p&gt;
&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances.  As a rough guide, performance can be improved when each individual model building task requires at least 10 seconds to execute.
&lt;/p&gt;
&lt;p&gt;
Note that it is an internal subprotocol in which the models are built rather than this component that actually runs in parallel.
&lt;/p&gt;
&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Use Parallel Processing Server</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server</sci:value>
												<sci:value>Use Parallel Processing Server</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Use Parallel Processing Server Processes</sci:member>
										<sci:member>Use Parallel Processing Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Processes</sci:value>
												<sci:value>Use Parallel Processing Server Processes</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Use Parallel Processing Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Use Parallel Processing Server Run On Grid Queue Name</sci:member>
										<sci:member>Use Parallel Processing Server Run on Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Queue Name</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid Queue Name</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run on Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Grid Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;)</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
										<sci:value>Cache0,DesignFile,results,finalresults,PredictionCache,ensembleStatsCache,SubsetKeys</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>n,ntot,Bayesian,NumClasses,PartialROCs,PartialROCsTraining,AllClasses,PreferredClass,Impute,Binary,PreferredScoreSuffix,ScoreSuffixes,OutputOptions,PointInfoText,VarNames,VarValues,FixedNames,FixedValues,NumFFDesignPts,PPparamSettingIndex,XVSetIDNUm,bestIndex,ConfusionTraining,ConfusionTest,oobIndices,WhenFinishedFinal,BuildDAModelFinal,ValJobID,LearnerPath,DataCache,ExtDataCache,GotExtraData,gotResults,EnsembleFolder,AllDataCache,IsNative,ADModelGUID,BaggedModelGUIDs,BaggedModelIDs,outputLegalVals,ensembleModelName,MulticatBayesian,LPropName,LPropNameExt,ModelPath,DestFolder,PreferredScorePropertyAD,ScorePropertiesAD,binaryROC,ROCScoreIB,ConfusionMatrixIBtable,PartialROCIBtable,ROCScoreOOB,ConfusionMatrixOOBtable,PartialROCOOBtable,NativeLearner,AllDescriptors,ScalarDescriptors,ArrayDescriptors,ArrayDescriptorLengths,FingerprintDescriptors,FoldedFingerprintLength,FingerprintBitHash,ComputeDecisionValues,ComputeProbabilities,ParallelIterations,ParallelDesignPoints,OptimizeCutoff,MeanBestCutoff,Cutoffs,CutoffCounts,NumVariables,ImportanceVarNames,FPImportanceHash,ImportanceVarSMILES,FPisCount,ADModelParams,ADParamInfo,ADParamHelp,ADParamValues,ADParamLegalValues,BaggedModelParams,BaggedParamInfo,BaggedParamHelp,BaggedParamValues,BaggedParamLegalValues,NumTrueScalarDescriptors,CreateProxy,ADProxyGUID,BaggedProxyGUIDs,BaggedProxyIDs,FinalDestinationFolder,startTime,elapsedTime,Numeric Distance Function,Fingerprint Distance Function,Additional Properties,Cost Matrix,NumberOfBins,DestinationFolder,Create Proxy Component,Post-Processing Script</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Multiselect Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. 

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.

&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.

&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.

&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.

&lt;li&gt;Do Not Coerce to Boolean: Retain property values such as the following as strings rather than coercing them to Boolean values: &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. 

&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.

&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.

&lt;li&gt;If you select the &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; option and wish to track the features of a fingerprint property in addition to categorical property values, then perform the following steps: Right-click the model component and select &quot;Edit...&quot;. Add a new parameter named &quot;Model Domain Fingerprint&quot;. A message alerts you that a duplicate parameter was found. Click the Yes button to re-use the parameter. Click OK on the dialog. Then enter the name of your fingerprint property as the value of &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Numeric Distance Function</sci:member>
										<sci:member>Learner Fingerprint Distance Function</sci:member>
										<sci:member>Learner Additional Properties</sci:member>
										<sci:member>Learner Cost Matrix</sci:member>
										<sci:legalval>Save Training Properties</sci:legalval>
										<sci:legalval>Encrypt Data</sci:legalval>
										<sci:legalval>Track Property Ranges</sci:legalval>
										<sci:legalval>Perform OPS Analysis</sci:legalval>
										<sci:legalval selected="true">Validate Models</sci:legalval>
										<sci:legalval selected="true">Remove Uninformative Bins</sci:legalval>
										<sci:legalval>Ignore Uninformative Bins</sci:legalval>
										<sci:legalval selected="true">Equipopulate Bins</sci:legalval>
										<sci:legalval>Do Not Coerce to Boolean</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Multiselect Numeric Scaling</sci:member>
										<sci:legalval selected="true">Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
										<sci:legalval>Mahalanobis</sci:legalval>
										<sci:legalval>One Minus Correlation</sci:legalval>
										<sci:legalval>One Minus Squared Correlation</sci:legalval>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval>Tanimoto</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Multiselect Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
										<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
										<sci:legalval>Correct for Missing Values</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval selected="true">Tanimoto</sci:legalval>
										<sci:legalval>Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Additional Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Learner Cost Matrix" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Optional cost matrix for determining the Best Split. It is a comma-separated list of 4 values, in order: TP (weight for true positives), FN (weight for false negatives), FP (weight for false positives), and TN (weight for true negatives).

If not provided, a matrix is used that minimizes the the sum of the percent misclassified for category members and for category nonmembers: [0, 1, #P/#N, 0], where #P is the number of positive samples, and #N is the number of negative samples. </sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Learner DestinationFolder</sci:member>
										<sci:member>Learner Create Proxy Component</sci:member>
										<sci:member>Learner Post-Processing Script</sci:member>
										<sci:member>Learner NumberOfBins</sci:member>
									</sci:arg>
									<sci:arg name="Learner NumberOfBins" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Learner DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The folder into which the model should be registered</sci:help>
										<sci:value>Protocols/Clinic1920/Models/</sci:value>
									</sci:arg>
									<sci:arg name="Learner Create Proxy Component" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies whether to create a proxy component for the model (with the name &lt;i&gt;LearnedPropertyName&lt;i&gt;_proxy). For very large models, this allows pooled Pipeline Pilot server processes to hold the model in memory between runs. After the first run, this eliminates the overhead of loading the model when making predictions, which can dramatically increase the prediction speed.
&lt;p&gt;
To use the proxy component, first run a single prediction in a named pool using the actual model component (see the protocol-level __PoolID implementation parameter). You can do this directly, or have a protocol which does this run in the background at Pipeline Pilot startup time. Then use the proxy component for subsequent predictions. 
&lt;p&gt;
If &lt;i&gt;Create Proxy Component&lt;/i&gt; is True, then the default value of &lt;i&gt;Use Memory Cache&lt;/i&gt; on the model component is also set to True.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Post-Processing Script" type="ExpressionType" required="false" visibility="visible" multi="false">
										<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Sat Mar  7 14:33:01 2020</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>LGFB_CV</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>LEARNNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{5A2B2016-5F59-4C60-9956-D265E9618970}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -95</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds, validates, and tunes a classification model or ensemble of models for a categorical response property</sci:value>
										<sci:value>The available methods are cross-validation (random k-fold, leave-one-out, or specified subsets), bootstrap sampling, and Y-scrambling. The validation models and a final all-data model are built using the learner specified by &lt;i&gt;Learner&lt;/i&gt;. You may optionally build an ensemble model using bootstrap aggregation. (To use a different learner, run &lt;a href=&quot;javascript:DoLink(&apos;{1FD83ABD-D6E8-4B1D-895B-BEEFB000B17E}&apos;)&quot;&gt;Create Validation Learner&lt;/a&gt; with the desired value of the &lt;i&gt;Learner&lt;/i&gt; parameter.) Tuning of the parameters under &lt;i&gt;Learner&lt;/i&gt; is done if you provide multiple values for any of these, except for those prefixed by &quot;Multiselect&quot;, which are designed to allow multiple simultaneous values.
&lt;p&gt;
To evaluate the model performance, the component performs validation as specified by &lt;i&gt;Validation Type&lt;/i&gt;.  It then builds a final model from all of the original data, using the learner parameter settings that give the largest average test ROC score. If &lt;i&gt;Validation Type&lt;/i&gt; is set to &quot;None&quot; or &quot;Y Scrambling&quot; then the parameter settings with the largest training data ROC score are used instead.
&lt;p&gt;
Output properties are as follows:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ParameterSetIndex&lt;/b&gt;: Unique index for a specific combination of learner parameter settings. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;li&gt;(Learner parameter values): One property whose name is the same as each learner parameter which varies (i.e., each parameter for which you provide more than one value).
&lt;li&gt;&lt;b&gt;ReferenceClass&lt;/b&gt;: (Binary models or models with &lt;i&gt;ROC Score Type&lt;/i&gt; set to &quot;Preferred Only&quot;) Name of the &quot;preferred class&quot; for the purpose of computing ROC scores and confusion matrices. Samples in the class are considered &quot;positive&quot;; samples not in the class are considered &quot;negative&quot;.
&lt;li&gt;&lt;b&gt;ConfusionTraining&lt;/b&gt;: Confusion matrix for the training data, using a model built from the original, unmodified data set. This is provided  for models that make class predictions, as opposed to those that only output a score that can be used for ranking. The model score cutoff to distinguish between classes is the default used by the model; no attempt is made to optimize the cutoff.
&lt;li&gt;&lt;b&gt;ConfusionTest&lt;/b&gt;: Confusion matrix for the test data, using results accumulated from all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;Classes&lt;/b&gt;: (Multi-class models with &lt;i&gt;ROC Score Type&lt;/i&gt; not set to &quot;Preferred Only&quot;) Semicolon-delimited list of names of all classes.
&lt;li&gt;&lt;b&gt;PartialROCTraining&lt;/b&gt;: (Multi-class models) Using a model built from the original, unmodified data set and applied to the same data, a  matrix of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types. For each element of the matrix, the score for &quot;Class1&quot; (the row) is used to distinguish between it and all other classes (one-versus-rest) or between it and &quot;Class2&quot; (one-versus-one).
&lt;li&gt;&lt;b&gt;ROCTraining&lt;/b&gt;: The overall ROC score for the training data, using a model built from the original, unmodified data set. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;Iteration&lt;/b&gt;: Array of iteration numbers for validation methods involving random selection, repeated multiple times. (Only present when more than one iteration is performed.)
&lt;li&gt;&lt;b&gt;PartialROCTest&lt;/b&gt;: (Multi-class models) For the test data from each iteration, a  semicolon-delimited list of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types.
&lt;li&gt;&lt;b&gt;ROCTest&lt;/b&gt;: The overall ROC score for the test data for each iteration. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;MeanPartialROCTest&lt;/b&gt;: (Multi-class models) Matrix containing the means of the PartialROCTest scores over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;MeanROCTest&lt;/b&gt;: Mean of the ROCTest score over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;KappaTest&lt;/b&gt;: Kappa value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SensitivityTest&lt;/b&gt;: Sensitivity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SpecificityTest&lt;/b&gt;: Specificity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;BestParamSet&lt;/b&gt;: A Boolean property whose value is True for the &quot;best&quot; set of parameter values (as determined by the appropriate ROC score value), or false otherwise. This property is omitted if there is only one set of parameter values. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The number of validation models and thus the time it takes to run the analysis can vary greatly depending on the analysis method, the number of iterations, and the number of distinct parameter settings. E.g., for a data set containing 200 samples, leave-one-out cross-validation with 4 distinct sets of learner parameter values takes roughly 80 times the amount of time required for 10 iterations of bootstrap validation with a single set of parameter values, which in turn takes roughly 10 times the amount of time required to build a single model from all the data.
&lt;li&gt;The following learner components have some level of cross-validation (CV) and/or parameter tuning built in:
&lt;ul&gt;
&lt;li&gt;Learn Good from Bad
&lt;li&gt;Learn Good Molecules
&lt;li&gt;Learn Cross-validated RP Tree Model
&lt;li&gt;Learn R Linear Discriminant Analysis Model
&lt;li&gt;Learn R Logistic Regression Model
&lt;li&gt;Learn R Neural Net Model
&lt;li&gt;Learn R Support Vector Machine Model
&lt;li&gt;Learn R XGBoost Model
&lt;/ul&gt;
The built-in validation in these learners is generally faster than what is provided here, though it is not as flexible in that only a single iteration of k-fold or leave-one-out CV is supported, and only some parameters can be tuned.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To display ROC plots for test data and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2208</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>clinic1920</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>11</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Protocols\Clinic1920\Learners\LGFB_CV</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@learnername EQ &apos;Bayes&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -275</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Checkpoint Identifier</sci:help>
										<sci:value>{96155BBF-207D-4A3A-8E8C-FB37E0016B01}</sci:value>
										<sci:value>1</sci:value>
										<sci:value>-1</sci:value>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="RPForest_CV" version="2">
									<sci:arg name="LearnedPropertyName" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAK7AE5hbWUgb2YgdGhlIG1vZGVsIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgTGVhcm5lZFByb3BlcnRpZXMgZm9sZGVyIG9uIHlvdXIgdXNlciB0YWIuICBUaGlzIGlzIGFsc28gdGhlIGJhc2UgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IGNhbiBiZSBjYWxjdWxhdGVkIGJ5IHRoYXQgY29tcG9uZW50LixTdHJpbmdUeXBlAAwAAAABAQABAAQA/AAAAAAAAAAAAAEUTGVhcm5lZFByb3BlcnR5TmFtZQPMU8+7LEBtb2RlbG5hbWUA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
										<sci:value>modelname</sci:value>
									</sci:arg>
									<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of the dependent (Y) property to be learned</sci:help>
										<sci:member>Preferred Value</sci:member>
										<sci:member>ROC Score Type</sci:member>
										<sci:member>Optimize Cutoff</sci:member>
										<sci:value>Dev</sci:value>
									</sci:arg>
									<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>In the binary Bayesian case (in which &lt;i&gt;Learner&lt;/i&gt; is &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;), specifies the &quot;good&quot; class. In the multi-class case (in which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies the &quot;positive&quot; class for the purpose of calculating ROC scores, false negatives, false positives, and so on.
&lt;p&gt;
If blank, the preferred class is taken to be the first in alphabetical order.</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ROC Score Type" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>For the multi-class case only (for which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies how the ROC area-under-the-curve (AUC) scores are to be computed. Options are:
&lt;ul&gt;
&lt;li&gt;Preferred Only: Computes only the ROC score for the &lt;i&gt;Preferred Value&lt;/i&gt; versus not-&lt;i&gt;Preferred Value&lt;/i&gt; distinction, using the model output score for the &lt;i&gt;Preferred Value&lt;/i&gt; class.
&lt;li&gt;One-versus-Rest: For each class (each distinct value of the &lt;i&gt;Name&lt;/i&gt; property), computes a ROC score for the in-class verus not-in-class distinction, using the model output score for that class. The reported ROC score is the mean of all such partial ROC scores.
&lt;li&gt;One-versus-One: For each pair of classes, A and B, data not belonging to either class are excluded. Then two partial ROC scores are computed for the A-versus-B distinction: one using the model output score for class A, the other using the model output score for class B. The reported ROC score is the mean of all such partial ROC scores. This is the most computationally expensive option.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For a description of the &quot;one-versus-one&quot; method of computing ROC scores for multi-class problems see: D.J. Hand and R.J. Till, &quot;A Simple Generalization of the Area Under the ROC Curve for Multiple Class Classification Problems,&quot; &lt;i&gt;Machine Learning&lt;/i&gt;, &lt;b&gt;45&lt;/b&gt;, 171 (2001). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.springerlink.com/content/nn141j42838n7u21/fulltext.pdf&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">Preferred Only</sci:legalval>
										<sci:legalval>One-versus-Rest</sci:legalval>
										<sci:legalval>One-versus-One</sci:legalval>
									</sci:arg>
									<sci:arg name="Optimize Cutoff" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For those model types that support override of the default cutoff score used to divide classes, specifies that the learner will optimize this value based on the validation model predictions (e.g., the cross-validated predictions). Cutoff optimization is supported for the Cross-validation and Bootstrap validation types only.</sci:help>
										<sci:enabledscript>setdisableddetails(&apos;Cutoff optimization not supported for learner &quot;&apos; . Parameter(&apos;Learner&apos;) . &apos;&quot;&apos;);
#cutoffLearners := tolower(&apos;Learn Good From Bad,Learn Good Molecules,Learn RP Tree Model,Learn RP Forest Model,Learn R Linear Discriminant Analysis Model,Learn R Forest Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Support Vector Machine Model,Learn R XGBoost Model,Learn R Logistic Regression Model&apos;);

expand(&apos;,&apos;, #cutoffLearners);
#learner := tolower(Parameter(&apos;Learner&apos;));

contains(#cutoffLearners, #learner);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Input string properties with any of the following values (independent of case) are treated as Boolean: &quot;True&quot;, &quot;False&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. If you wish such properties to be treated as strings instead, you should modify the values with a prefix or suffix. E.g., change &quot;T&quot; to &quot;T.&quot; or &quot;TT&quot;.
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
										<sci:member>PredefinedSet</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>IgnoreProperties</sci:member>
										<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval>PredefinedSet</sci:legalval>
										<sci:legalval>UserSet</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval selected="true">ALogP</sci:legalval>
										<sci:legalval selected="true">Molecular_Weight</sci:legalval>
										<sci:legalval selected="true">Num_H_Donors</sci:legalval>
										<sci:legalval selected="true">Num_H_Acceptors</sci:legalval>
										<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
										<sci:legalval>Num_Atoms</sci:legalval>
										<sci:legalval>Num_Rings</sci:legalval>
										<sci:legalval>Num_AromaticRings</sci:legalval>
										<sci:legalval>Num_Fragments</sci:legalval>
										<sci:legalval>NPlusO_Count</sci:legalval>
										<sci:legalval>Molecular_Solubility</sci:legalval>
										<sci:legalval>Molecular_SurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSASA</sci:legalval>
										<sci:legalval>AlogP_Count</sci:legalval>
										<sci:legalval>FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval selected="true">FCFP_6</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
										<sci:legalval>Estate_Keys</sci:legalval>
										<sci:legalval>Estate_Counts</sci:legalval>
										<sci:legalval>MDLPublicKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
										<sci:value>pdb_code, DI</sci:value>
									</sci:arg>
									<sci:arg name="Model Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the &lt;i&gt;Learner&lt;/i&gt; is configured to create a Regression model of a numeric Y property, or a Classification model of a categorical Y property.</sci:help>
										<sci:legalval selected="true">Classification</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>Name of learner to be used to build validated models. See the help for the corresponding component for more information on the learner. See also the help for the parameters inside this one.
</sci:help>
										<sci:member>Learner (Group) Tree Options</sci:member>
										<sci:member>Learner (Group) Forest Options</sci:member>
										<sci:member>Learner (Group) Advanced Tree Options</sci:member>
										<sci:member>Learner Multiselect Learn Options</sci:member>
										<sci:member>Learner (Group) Additional Options</sci:member>
										<sci:legalval selected="true">Learn RP Forest Model</sci:legalval>
									</sci:arg>
									<sci:arg name="Output Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the format of the data records sent out the Pass port after the model is built. Options are:
&lt;ul&gt;
&lt;li&gt;Raw: all data are output as properties in raw form. Plot and importance data are output as contracted semicolon-delimited arrays. For plotting and further analysis, you may need to unmerge data records and expand these arrays.
&lt;li&gt;Report: A Reporting object summarizing the results is output. The format is an HTML tabbed report. This can be displayed directly in the &lt;a href=&quot;javascript:DoLink(&apos;{0952D9DF-F95C-4D43-826F-C70450811DD8}&apos;)&quot;&gt;HTML Report Viewer&lt;/a&gt; or can be embedded within another report.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Raw</sci:legalval>
										<sci:legalval>Report</sci:legalval>
									</sci:arg>
									<sci:arg name="Validation Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the type of model validation to perform. Options are:
&lt;ul&gt;
&lt;li&gt;None: No validation is done. This option is useful if you wish to perform parameter tuning using the root-mean-square (RMS) error for the training data as the basis for selecting the best among different combinations of learner parameter settings. Note that this approach provides no protection against overfitting. Only one iteration is done for this case. (The value of &lt;i&gt;Iterations&lt;/i&gt; is ignored.)
&lt;li&gt;Bootstrap: For each iteration, a bootstrap sample is drawn from the original data; a model is fitted to the sample; and predictions are made for the data records excluded from the sample. A bootstrap sample from N input data records consists of N records randomly selected &quot;with replacement,&quot; meaning that duplicates are allowed. On average, about 63% of the records are included in the sample at least once, and 37% are excluded.
&lt;li&gt;Cross-Validation: The input data records are divided into some number of subsets. For each subset, a model is build from all other data records, and predictions are made for that subset. This process is repeated until all subsets are covered. See &lt;i&gt;Cross-Validation Type&lt;/i&gt; for the different types of cross-validation that you can perform.
&lt;li&gt;Y Scrambling: For each iteration, the set of Y (independent property) values for the input data set is randomly reordered and a model is built from this artificial data set. By contrast to the other validation methods, small Qsquared (relative to Rsquared) and large ValidationRMSE (relative to RMSE) values are &quot;good&quot; in this case, because they indicate that the model of the unscrambled data is not simply fitting noise in the data (i.e., overfitting).</sci:help>
										<sci:member>Iterations</sci:member>
										<sci:member>Estimate Variable Importance</sci:member>
										<sci:member>Cross-Validation Type</sci:member>
										<sci:member>Random Seed</sci:member>
										<sci:member>Output Plot Data</sci:member>
										<sci:member>Scratch Folder</sci:member>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Bootstrap</sci:legalval>
										<sci:legalval selected="true">Cross-Validation</sci:legalval>
										<sci:legalval>Y Scrambling</sci:legalval>
									</sci:arg>
									<sci:arg name="Iterations" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of times to repeat the validation scheme. Multiple iterations make sense only for those validation schemes that contain an element of randomness&amp;mdash;specifically k-fold cross validation, bootstrapping, and Y-scrambling. For other validation schemes (e.g., leave-one-out cross-validation), only one iteration is performed irrespective of the value specified here, because the results would be the same each time.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to a value other than None.&apos;);
parameter(&apos;Validation Type&apos;) ne &apos;None&apos;</sci:enabledscript>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Estimate Variable Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to compute the importance of variables using a permutation approach. (Variables are not necessarily the same as descriptors. E.g., in this context, fingerprints are descriptors, but fingerprint features are variables.)
&lt;p&gt;
The importance is estimated by the following procedure:
&lt;ol&gt;
&lt;li&gt;A model is built as usual using the cross-validation or bootstrap sample, or if &lt;i&gt;Validation Method&lt;/i&gt; is &quot;None&quot;, using all training data. (Importance estimation does not apply for the &quot;Y Scrambling&quot; method.)
&lt;li&gt;Predictions are made for the left-out data (cross-validation and bootstrap options) or the training data (&quot;None&quot; option).
&lt;li&gt;For each variable in turn, all values of that variable are randomly permuted and predictions are made from the data with the permuted values.
&lt;li&gt;The root-mean-square (RMS) difference in the predicted response and the difference in the RMS error relative to the unpermuted data are computed.
&lt;li&gt;The larger these differences are, the greater the presumed importance of the variable. 
&lt;/ol&gt;
&lt;p&gt;
Outputs from an importance calculation are as follows.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Variable Name&lt;/b&gt;: Name of variable.
&lt;li&gt;&lt;b&gt;Variable SMILES&lt;/b&gt;: (only for molecular fingerprint data) SMILES string representing the structural feature corresponding to a variable representing a molecular fingerprint bit.
&lt;li&gt;&lt;b&gt;Variable Importance (ROC AUC Change)&lt;/b&gt;: Variable importance calculated as the change in the ROC AUC score from when the variable values are randomly permuted. (Note that this value can be negative, indicating that permuting the values actually improved the ROC score. The magnitude of the value in such a case should be small, indicating an unimportant variable. Large negative values might indicate overfitting.)
&lt;/ul&gt;
The above values are output as contracted arrays (with &quot;;&quot; as the delimiter) for each iteration of validation. The arrays should be expanded and unmerged in order to sort or plot the values. You can also use &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt; to convert the &lt;b&gt;Variable SMILES&lt;/b&gt; property to a molecular structure.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For scalar properties, a variable is the same as a descriptor.
&lt;li&gt;For array properties, each element of the array is treated as a separate variable.
&lt;li&gt;For fingerprint properties, each distinct fingerprint feature is treated as a separate variable. The value of &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; specifies the minimum number of data records on which a feature must be present in order for its importance to be estimated. 
&lt;li&gt;Permutation importance measures have been extensively studied for forest models, but less so for other model types. In data sets containing variables of different types (e.g., categorical and continuous), the measures may be biased. Also, for forest models, the importance tends to be overestimated for variables that are correlated with other variables in the data. For details, see the following: C. Strobl et al., &quot;Bias in random forest variable importance measures: Illustrations, sources and a solution&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2007, &lt;b&gt;8&lt;/b&gt;:25 (doi:10.1186/1471-2105-8-25), and C. Strobl et al., &quot;Conditional variable importance for random forests&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2008, &lt;b&gt;9&lt;/b&gt;:307 (doi:10.1186/1471-2105-9-307).
&lt;/ul&gt;</sci:help>
										<sci:member>Min Fingerprint Feature Count</sci:member>
										<sci:member>Whole Descriptor Importance</sci:member>
										<sci:enabledscript>parameter(&apos;Validation Type&apos;) ne &apos;Y Scrambling&apos;</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Min Fingerprint Feature Count" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a fingerprint property, specifies the minimum number of times a feature (bit) must be present in the input data for the importance to be calculated for that feature. Very rare features are unlikely to have a high importance ranking, and ignoring them in the importance calculation can decrease the calculation time.
&lt;p&gt;
The same is true for extremely common features. Thus, any feature present in &lt;b&gt;more&lt;/b&gt; than N - &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; data records is also ignored, where N is the total number of input data records.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">sqrt(N)</sci:legalval>
										<sci:legalval>1</sci:legalval>
										<sci:legalval>2</sci:legalval>
										<sci:legalval>4</sci:legalval>
										<sci:legalval>8</sci:legalval>
										<sci:legalval>16</sci:legalval>
										<sci:legalval>32</sci:legalval>
										<sci:legalval>64</sci:legalval>
										<sci:legalval>128</sci:legalval>
										<sci:legalval>256</sci:legalval>
									</sci:arg>
									<sci:arg name="Whole Descriptor Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For array and fingerprint properties, specifies whether to calculate the importance of the descriptor as a whole, in addition to the importance for the individual elements or features of the descriptor.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Cross-Validation Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Indicates the method of dividing the original data into subsets for cross-validation. Options are:
&lt;ul&gt;
&lt;li&gt;Random: Performs k-fold cross-validation in which each data record is randomly assigned to one of k subsets of equal size (plus or minus one record), with the value of k given by &lt;i&gt;Number of Folds&lt;/i&gt;.
&lt;li&gt;Stratified Random: Like Random except that each distinct class of data records is divided into k folds which are then combined into k overall folds.
&lt;li&gt;Random Subset: Creates a random subset containing a fraction &lt;i&gt;Training Fraction&lt;/i&gt; of the input data, builds a model from these data, and applies the model to the remaining data.
&lt;li&gt;Leave-One-Out: Each data record is assigned to its own subset. Equivalent to N-fold cross-validation, where N is the number of data records. &lt;b&gt;Note that for a large input data set, this option is extremely slow.&lt;/b&gt; Because there is only one way to divide N data records into N subsets, only 1 iteration is performed for this option.
&lt;li&gt;Preselected: The value of the property named by &lt;i&gt;Subset Property&lt;/i&gt; identifies the subset to which each data record belongs. This option is useful if you wish to use a method such as clustering for dividing the data into subsets.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Property</sci:member>
										<sci:member>Number of Folds</sci:member>
										<sci:member>Training Fraction</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to Cross-Validation.&apos;);
parameter(&apos;Validation Type&apos;) eq &apos;Cross-Validation&apos;</sci:enabledscript>
										<sci:legalval>Random</sci:legalval>
										<sci:legalval selected="true">Stratified Random</sci:legalval>
										<sci:legalval>Random Subset</sci:legalval>
										<sci:legalval>Leave-One-Out</sci:legalval>
										<sci:legalval>Preselected</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Preselected, specifies the name of the property whose value indicates the subset to which each data record belongs.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Preselected.&apos;);
Parameter(&apos;Cross-Validation Type&apos;) eq &apos;Preselected&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Number of Folds" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Random, indicates the number of equal-sized subsets into which the data set is to be divided for cross-validation.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Random or Stratified Random.&apos;);
parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random&apos; or parameter(&apos;Cross-Validation Type&apos;) eq &apos;Stratified Random&apos;</sci:enabledscript>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Training Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Fraction of data to put into the training set for the Random Subset &lt;i&gt;Cross-Validation Type&lt;/i&gt;.</sci:help>
										<sci:enabledscript>parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random Subset&apos;</sci:enabledscript>
										<sci:value>0.7</sci:value>
									</sci:arg>
									<sci:arg name="Random Seed" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Seed value for random number generator used in resampling and other calculations</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Output Plot Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>For binary classification only, specifies whether to output data that can be used to generate ROC plots. If True, then the following two additional properties are added to the output data record for each parameter set:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FPRateTest:&lt;/b&gt; Values representing the false positive rate for each point on the ROC plot for a given validation iteration. (ROC plot X axis.)
&lt;li&gt;&lt;b&gt;TPRateTest:&lt;/b&gt; Values representing the true positive rate for each point on the ROC plot for a given validation iteration. (ROC plot Y axis.)
&lt;/ul&gt;
These properties contain arrays of semicolon-separated values. There is one array element for each validation iteration. Each array element can be expanded into its own array for plotting by using the PilotScript expand() function.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Scratch Folder" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Location of XMLDB folder into which temporary models and learners will be written</sci:help>
										<sci:value>$(UserName)/TempModels</sci:value>
									</sci:arg>
									<sci:arg name="Build Extended Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether, in addition to the final model built with untagged data, you wish to build an &quot;extended&quot; model using both untagged and tagged data. For model testing purposes, you may wish to initially hold out a portion of all available data, but to include this portion when building the model you use for making predictions. If &lt;i&gt;Build Extended Model&lt;/i&gt; is true, two final models are produced: one with the name specified by &lt;i&gt;LearnedPropertyName&lt;/i&gt;, the other with the suffix &quot;Ext&quot; appended to the name.
&lt;p&gt;
Use &lt;i&gt;Test for Extra Data&lt;/i&gt; to specify a PilotScript expression that evaluates to False for data records to be included in both models, and True for data records to be included only in the extended model.</sci:help>
										<sci:member>Test for Extra Data</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Test for Extra Data" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>PilotScript expression which evaluates to False for training data records to be used in the model evaluation statistics and to build the model named by &lt;i&gt;LearnedPropertyName&lt;/i&gt;. The expression should evaluate to True for &quot;extra&quot; data records to be included in an additional model of the same name but with the suffix &quot;Ext&quot;.</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Extended Model&apos;) = True</sci:enabledscript>
										<sci:value>isExtra is defined</sci:value>
									</sci:arg>
									<sci:arg name="Build Ensemble Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specified whether to build a &quot;bagged&quot; (bootstrap-aggregated) ensemble model as the final model after any parameter optimization.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Ensemble models are not supported for &lt;a href=&quot;javascript:DoLink(&apos;{4B37A4B3-BAEF-4000-96D0-031FF49A87C7}&apos;)&quot;&gt;Learn R Logistic Regression Model&lt;/a&gt; because logistic regression models do not output a class prediction, but only a score.
&lt;/ul&gt;</sci:help>
										<sci:member>Ensemble Size</sci:member>
										<sci:member>Sampling Method</sci:member>
										<sci:member>Resample Descriptors</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Ensemble Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of sub-models in ensemble</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Sampling Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the resampling method to use in order to generate data for the sub-models of the ensemble from the original training data. Options are:
&lt;ul&gt;
&lt;li&gt;Bootstrap: For each sub-model, generates a random bootstrap sample of the same size as the input training set.
&lt;li&gt;Random Subsets: For each sub-model, generates a random subset containing a fraction of the training data specified by &lt;i&gt;Subset Fraction&lt;/i&gt;.
&lt;li&gt;Non-overlapping Subsets: Divides the input data into &lt;i&gt;Ensemble Size&lt;/i&gt; random disjoint subsets and builds a sub-model for each subset.
&lt;li&gt;None: Does not resample the data. Builds each sub-model from the entire training set. &lt;i&gt;Use this option only if the learner for the sub-models has a stochastic element or does its own resampling. Otherwise, each sub-model will be identical&lt;/i&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Fraction</sci:member>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval selected="true">Bootstrap</sci:legalval>
										<sci:legalval>Random Subsets</sci:legalval>
										<sci:legalval>Non-overlapping Subsets</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Sampling Method&lt;/i&gt; is &quot;Random Subsets&quot;, specifies the fraction of data to include in each subset. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>Parameter(&apos;Sampling Method&apos;) eq &apos;Random Subsets&apos;</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Resample Descriptors" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to resample the descriptors used to build the model so that each sub-model is given a different random subset of all of the descriptors. This increases the cross-model variance and may improve the predictive performance of the ensemble model or the performance of a quality model of the ensemble.</sci:help>
										<sci:member>Descriptor Fraction</sci:member>
										<sci:enabledscript>parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Descriptor Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Resample Descriptors&lt;/i&gt; is True, specifies the fraction of descriptors to include for each sub-model. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>parameter(&apos;Resample Descriptors&apos;)</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options</sci:value>
												<sci:value>Use Parallel Processing</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
If set to True, each iteration of modeling building out of &lt;i&gt;Number of Iterations&lt;/i&gt; is run in a separate parallel process, or if the number of learner parameter combinations exceeds the number of iterations, each parameter combination is run in a separate process. In addition, if &lt;i&gt;Build Ensemble Model&lt;/i&gt; is True, each sub-model of the ensemble is built in a separate process. Running in parallel can decrease the calculation time on multi-core, cluster, or grid servers.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Limitations:&lt;/b&gt; Paths to job and user folders on the primary compute node must be visible from all other compute nodes, and all compute nodes must share a single component database (XMLDB).
&lt;/p&gt;
&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances.  As a rough guide, performance can be improved when each individual model building task requires at least 10 seconds to execute.
&lt;/p&gt;
&lt;p&gt;
Note that it is an internal subprotocol in which the models are built rather than this component that actually runs in parallel.
&lt;/p&gt;
&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Use Parallel Processing Server</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server</sci:value>
												<sci:value>Use Parallel Processing Server</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Use Parallel Processing Server Processes</sci:member>
										<sci:member>Use Parallel Processing Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Processes</sci:value>
												<sci:value>Use Parallel Processing Server Processes</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Use Parallel Processing Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Use Parallel Processing Server Run On Grid Queue Name</sci:member>
										<sci:member>Use Parallel Processing Server Run on Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Queue Name</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid Queue Name</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run on Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Grid Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;)</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
										<sci:value>Cache0,DesignFile,results,finalresults,PredictionCache,ensembleStatsCache,SubsetKeys</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>n,ntot,Bayesian,NumClasses,PartialROCs,PartialROCsTraining,AllClasses,PreferredClass,Impute,Binary,PreferredScoreSuffix,ScoreSuffixes,OutputOptions,PointInfoText,VarNames,VarValues,FixedNames,FixedValues,NumFFDesignPts,PPparamSettingIndex,XVSetIDNUm,bestIndex,ConfusionTraining,ConfusionTest,oobIndices,WhenFinishedFinal,BuildDAModelFinal,ValJobID,LearnerPath,DataCache,ExtDataCache,GotExtraData,gotResults,EnsembleFolder,AllDataCache,IsNative,ADModelGUID,BaggedModelGUIDs,BaggedModelIDs,outputLegalVals,ensembleModelName,MulticatBayesian,LPropName,LPropNameExt,ModelPath,DestFolder,PreferredScorePropertyAD,ScorePropertiesAD,binaryROC,ROCScoreIB,ConfusionMatrixIBtable,PartialROCIBtable,ROCScoreOOB,ConfusionMatrixOOBtable,PartialROCOOBtable,NativeLearner,AllDescriptors,ScalarDescriptors,ArrayDescriptors,ArrayDescriptorLengths,FingerprintDescriptors,FoldedFingerprintLength,FingerprintBitHash,ComputeDecisionValues,ComputeProbabilities,ParallelIterations,ParallelDesignPoints,OptimizeCutoff,MeanBestCutoff,Cutoffs,CutoffCounts,NumVariables,ImportanceVarNames,FPImportanceHash,ImportanceVarSMILES,FPisCount,ADModelParams,ADParamInfo,ADParamHelp,ADParamValues,ADParamLegalValues,BaggedModelParams,BaggedParamInfo,BaggedParamHelp,BaggedParamValues,BaggedParamLegalValues,NumTrueScalarDescriptors,CreateProxy,ADProxyGUID,BaggedProxyGUIDs,BaggedProxyIDs,FinalDestinationFolder,startTime,elapsedTime,Minimum Samples Per Node,Min Samples Is,Maximum Tree Depth,Split Method,Weighting Method,Number of Trees,Ensemble Method,Equalize Class Sizes,Optimize Cutoff,Preferred Class,Number of Descriptors,Number of Descriptors Fraction,Number of Descriptors Fixed Number,Maximum Knots Per Property,Maximum Lookahead Depth,Number of Lookahead Alternatives,Maximum Generic Depth,Generic Node Weighting,Minimum Yes or No Answers,Numeric Distance Function,Fingerprint Distance Function,Model Domain Fingerprint,Additional Properties,Random Seed,When Finished,Trees to Display,Compact Format,Destination Folder,Create Proxy Component,Node Pool Size,Num Records Before Caching</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner (Group) Tree Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Options governing the building of individual trees in the model</sci:help>
										<sci:member>Learner Minimum Samples Per Node</sci:member>
										<sci:member>Learner Maximum Tree Depth</sci:member>
										<sci:member>Learner Split Method</sci:member>
										<sci:member>Learner Weighting Method</sci:member>
									</sci:arg>
									<sci:arg name="Learner Minimum Samples Per Node" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The minimum number of samples that must be present in a new node for the node to be added to the tree. If blank, then an appropriate default value is used according to the values of &lt;i&gt;Model Type&lt;/i&gt; and &lt;i&gt;Min Samples Is&lt;/i&gt;. These default values are 1 for a classification model, 2 for a regression model with &lt;i&gt;Min Samples Is&lt;/i&gt; set to &quot;Absolute Minimum&quot;, and 5 for a regression model with &lt;i&gt;Min Samples Is&lt;/i&gt; set to &quot;Minimum to Split&quot;.</sci:help>
										<sci:member>Learner Min Samples Is</sci:member>
									</sci:arg>
									<sci:arg name="Learner Min Samples Is" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies how to interpret the value of &lt;i&gt;Minimum Samples Per Node&lt;/i&gt;. Options are:
&lt;ul&gt;
&lt;li&gt;Absolute Minimum: No node in a tree may contain fewer than &lt;i&gt;Minimum Samples Per Node&lt;/i&gt; samples. Thus, the only nodes eligible for splitting are those that contain at least twice this number.
&lt;li&gt;Minimum to Split: Only nodes containing &lt;b&gt;more&lt;/b&gt; than &lt;i&gt;Minimum Samples Per Node&lt;/i&gt; are considered for splitting. However, either child node may contain as few as 1 sample. This intepretation is the same as that used by &lt;a href=&quot;javascript:DoLink(&apos;{2F4B051F-A537-4FA5-83A7-DB28523419EC}&apos;)&quot;&gt;Learn R Forest Model&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Absolute Minimum</sci:legalval>
										<sci:legalval>Minimum to Split</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Maximum Tree Depth" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAJzAVRoZSBtYXhpbXVtIG51bWJlciBvZiBsZXZlbHMgaW4gYSB0cmVlLiAgTGFyZ2VyIHZhbHVlcyB0ZW5kIHRvIGluY3JlYXNlIGFjY3VyYWN5IG9uIHRoZSB0cmFpbmluZyBkYXRhIGFuZCBkZWNyZWFzZSB0aGUgdGltZSByZXF1aXJlZCB0byBidWlsZCB0aGUgbW9kZWwsIGJ1dCBhdCB0aGUgcmlzayBvZiBvdmVyLWZpdHRpbmcuICBTbWFsbGVyIHZhbHVlcyB0ZW5kIHRvIGluY3JlYXNlIHRoZSBhcHBsaWNhYmlsaXR5IG9mIGEgdHJlZSB0byBuZXcgZGF0YSBzZXRzLCBidXQgYXQgdGhlIHJpc2sgb2YgZGVjcmVhc2VkIGFjY3VyYWN5IGFuZCBvZiBmYWlsaW5nIHRvIGlkZW50aWZ5IGltcG9ydGFudCBmZWF0dXJlcyBpbiB0aGUgdHJhaW5pbmcgZGF0YS4sU3RyaW5nVHlwZQAIAAAAAQEAAQAEAPwAAAAAAAAAAAABG0xlYXJuZXIgTWF4aW11bSBUcmVlIERlcHRoA8xTz7soQG1heGRlcHRoAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>The maximum number of levels in a tree.  Larger values tend to increase accuracy on the training data and decrease the time required to build the model, but at the risk of over-fitting.  Smaller values tend to increase the applicability of a tree to new data sets, but at the risk of decreased accuracy and of failing to identify important features in the training data.</sci:help>
										<sci:value>maxdepth</sci:value>
									</sci:arg>
									<sci:arg name="Learner Split Method" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Method to be used for ranking the desirability of splits in the data.  Options are:
&lt;ul&gt;
&lt;li&gt;Gini: Uses the Gini index as a measure of the increase in node purity as the result of a split.  Node purity is the degree to which a node contains members of only one class (i.e., category), as opposed to multiple classes.  Splits that result in purer nodes are more desirable.
&lt;li&gt;Entropy: Uses the decrease in entropy as a measure of node purity as the result of a split.  
&lt;li&gt;Twoing: Measures the degree to which a split results in two subsets of equal size while nevertheless separating different classes into separate nodes.  This option is most useful for data sets with multiple (4 or more) classes.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Gini</sci:legalval>
										<sci:legalval>Entropy</sci:legalval>
										<sci:legalval>Twoing</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Weighting Method" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the scheme to use in order to determine the relative importance of a sample in determining the predicted class for each node in the tree.  Options are:
&lt;ul&gt;
&lt;li&gt;Uniform: Each sample is weighted equally.  The class for a node is simply the class represented by the greatest number of samples in the node.  This is an appropriate option for balanced data sets&amp;mdash;i.e., data sets in which the numbers of samples in each class is approximately the same.  (For forest models, this is also the appropriate option for unbalanced data if you have set &lt;i&gt;Equalize Class Sizes&lt;/i&gt; to True.)
&lt;li&gt;By Class: Each class is weighted equally.  The class for a node is the class with the greatest weighted sum of samples in the node.  This option is appropriate for unbalanced data sets, especially if the most-desirable class has far fewer samples than other classes. &lt;br&gt; Example: A data set contains 100 members of class A and 200 members of class B.  If &quot;By Class&quot; is specified, then each A sample is assigned a weight of 1.5 and each B sample a weight of 0.75.  A node containing 10 A samples and 12 B samples has a predicted class of A because the weighted sum for class A (10&amp;times;1.5 = 15) exceeds the weighted sum for class B (12&amp;times;0.75 = 9).
&lt;/ul&gt;</sci:help>
										<sci:legalval>Uniform</sci:legalval>
										<sci:legalval selected="true">By Class</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner (Group) Forest Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Options governing the building of forest (i.e., multi-tree) models</sci:help>
										<sci:member>Learner Number of Trees</sci:member>
										<sci:member>Learner Number of Descriptors</sci:member>
										<sci:member>Learner Ensemble Method</sci:member>
										<sci:member>Learner Equalize Class Sizes</sci:member>
										<sci:member>Learner Optimize Cutoff</sci:member>
									</sci:arg>
									<sci:arg name="Learner Number of Trees" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAIdAVRvdGFsIG51bWJlciBvZiB0cmVlcyBpbiB0aGUgZm9yZXN0IG1vZGVsLiBJZiBzZXQgdG8gIkRlZmF1bHQiIHRoZW4gNTAwIHRyZWVzIGFyZSBidWlsdCBpZiA8aT5Nb2RlbCBUeXBlPC9pPiBpcyBDbGFzc2lmaWNhdGlvbiwgd2hpbGUgMTAwIGFyZSBidWlsdCBpZiA8aT5Nb2RlbCBUeXBlPC9pPiBpcyBSZWdyZXNzaW9uLiBJZiBzZXQgdG8gMSwgdGhlbiBhIHNpbmdsZSB0cmVlIG1vZGVsIGlzIGJ1aWx0LCBhbmQgdGhlIHJlbWFpbmluZyA8aT5Gb3Jlc3QgT3B0aW9uczwvaT4gYXJlIGlnbm9yZWQuLFN0cmluZ1R5cGUACAAAAAEBAAEABAD8AAAAAAAAAAAAARhMZWFybmVyIE51bWJlciBvZiBUcmVlcwPMU8+7IERlZmF1bHQA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Total number of trees in the forest model. If set to &quot;Default&quot; then 500 trees are built if &lt;i&gt;Model Type&lt;/i&gt; is Classification, while 100 are built if &lt;i&gt;Model Type&lt;/i&gt; is Regression. If set to 1, then a single tree model is built, and the remaining &lt;i&gt;Forest Options&lt;/i&gt; are ignored.</sci:help>
										<sci:value>numtrees</sci:value>
									</sci:arg>
									<sci:arg name="Learner Ensemble Method" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Method to use in constructing forest.  Options are:
&lt;ul&gt;
&lt;li&gt;Bagging: Short for &quot;Bootstrap AGgregation&quot;.  For each tree, a bootstrap sample of the original data is taken, and this sample is used to grow the tree.  A bootstrap sample is a data set of the same size as the original one, but in which the same data record can be included multiple times.  Excluding duplicates, a bootstrap sample on average contains about 63% of the original data records.  Data excluded from the sample are called out-of-bag (OOB) data and can be used in model validation.
&lt;li&gt;Bagging with Duplicates Removed: Similar to Bagging except that duplicate data records are removed from each bootstrap sample.  This may reduce bias.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For information on bias in bootstrap sampling generally, see &lt;a href=&quot;javascript:DoLink(&apos;http://people.csail.mit.edu/tommi/papers/SteJaa-nips03.pdf&apos;)&quot;&gt;H. Steck and T.S. Jaakkola, &quot;Bias-Corrected Bootstrap and Model Uncertainty&quot;&lt;/a&gt;.
&lt;li&gt;For information on bias in forest models, see &lt;a href=&quot;javascript:DoLink(&apos;http://www.biomedcentral.com/1471-2105/8/25&apos;)&quot;&gt;C. Strobl et al., &quot;Bias in random forest variable importance measures: Illustrations, sources and a solution&quot;&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Bagging</sci:legalval>
										<sci:legalval>Bagging with Duplicates Removed</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Equalize Class Sizes" type="BoolType" required="false" visibility="visible" multi="true">
										<sci:help>For the Bagging &lt;i&gt;Ensemble Method&lt;/i&gt;, specifies whether to ensure that the number of samples for each class is equal in the data set used to train each tree.  For forest models created from unbalanced training sets, this is generally a better alternative to the &quot;By Class&quot; &lt;i&gt;Weighting Method&lt;/i&gt;, as it has the effect of both increasing the predictive accuracy and decreasing the time required for model building.
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
&lt;p&gt;
Suppose the input data contains 50 members of class A and 500 members of class B.  If &lt;i&gt;Equalize Class Sizes&lt;/i&gt; is set to True, then the data set used for each tree in the forest is a separate random sample containing 50 class A members and 50 class B members.  As in the usual bootstrap sample, the sampling is done &quot;with replacement&quot;&amp;mdash;i.e., duplicates are permitted for both the A and B class members.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Optimize Cutoff" type="BoolType" required="false" visibility="visible" multi="true">
										<sci:help>For a classification model, specifies whether to use out-of-bag (OOB) data to optimize the probability score cutoff value that determines the predicted class for the model. By default (with no optimization), the cutoff is 1/&lt;i&gt;nclasses&lt;/i&gt; where &lt;i&gt;nclasses&lt;/i&gt; is the number of distinct classes in the input data. E.g., for binary data, the cutoff is 0.5.
&lt;p&gt;
The default cutoff does not always give the best predictions, especially when the training data are imbalanced. In such cases, setting &lt;i&gt;Optimized Cutoff&lt;/i&gt; to True may yield better results.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The optimized cutoff is applied to the &lt;i&gt;Preferred Class&lt;/i&gt; that you specify (or the first class found in the input data if you do not specify a &lt;i&gt;Preferred Class&lt;/i&gt; value or specify a value not found in the data). If the predicted score for this class is greater than or equal to the cutoff, the predicted class is the &lt;i&gt;Preferred Class&lt;/i&gt;. Otherwise, the predicted class is whichever other class has the greatest score.
&lt;li&gt;The cutoff is optimized by minimizing the balanced error rate (BER), which is the mean fraction misclassified for members of &lt;i&gt;Preferred Class&lt;/i&gt; and nonmembers of &lt;i&gt;Preferred Class&lt;/i&gt;.
&lt;li&gt;Multi-class data are treated as binary for the purpose of cutoff optimization. That is, each sample belongs to either the  &quot;preferred&quot; or &quot;non-preferred&quot; class, and the cutoff is applied to the &lt;i&gt;Preferred Class&lt;/i&gt; score to minimize the binary BER.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Preferred Class</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Preferred Class" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Name of the class whose cutoff is to be optimized when &lt;i&gt;Optimize Cutoff&lt;/i&gt; is True. If blank, or if the class cannot be found in the input data, then the class of the first input data record is used.</sci:help>
									</sci:arg>
									<sci:arg name="Learner Number of Descriptors" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the number of descriptor properties to consider for use as a split criterion within each tree.  For options other than All, a separate random subset of the properties is selected at each node for which a split is possible.  Options are:
&lt;ul&gt;
&lt;li&gt;All: all properties are considered as possible split criteria.
&lt;li&gt;Sqrt(D): if the number of descriptors is D, then the number of descriptors considered at each node is the square root of D.
&lt;li&gt;Log2(D): the number of descriptors considered at each node is the base-2 logarithm of D.
&lt;li&gt;Fraction: a given proportion of descriptors, specified by &lt;i&gt;Fraction&lt;/i&gt;, is considered at each node.
&lt;li&gt;Fixed Number: a fixed number of descriptors, specified by &lt;i&gt;Fixed Number&lt;/i&gt;, is considered at each node.
&lt;li&gt;Default: the default for a forest of random trees of the specified &lt;i&gt;Model Type&lt;/i&gt;. This is Sqrt(D) for a classification model, and Fraction with a &lt;i&gt;Fraction&lt;/i&gt; of 1/3 for a regression model.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For fingerprint properties, each distinct fingerprint feature is considered a separate descriptor when counting the number of descriptors and selecting descriptor subsets.
&lt;li&gt;A forest model built with an &lt;i&gt;Ensemble Method&lt;/i&gt; of Bagging and any of the above options other than All is a &quot;random forest&quot; model as defined by Breiman and Cutler.  See &lt;a href=&quot;javascript:DoLink(&apos;http://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm&apos;)&quot;&gt;http://www.stat.berkeley.edu/~breiman/RandomForests/cc_home.htm&lt;/a&gt;.  (Random Forests(TM) is a trademark of Leo Breiman and Adele Cutler.)
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Number of Descriptors Fixed Number</sci:member>
										<sci:member>Learner Number of Descriptors Fraction</sci:member>
										<sci:legalval>All</sci:legalval>
										<sci:legalval>Sqrt(D)</sci:legalval>
										<sci:legalval>Log2(D)</sci:legalval>
										<sci:legalval>Fraction</sci:legalval>
										<sci:legalval>Fixed Number</sci:legalval>
										<sci:legalval selected="true">Default</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Number of Descriptors Fraction" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The fraction (between 0 and 1) of descriptors to consider at each potential split point when &lt;i&gt;Number of Descriptors&lt;/i&gt; is set to Fraction.
</sci:help>
									</sci:arg>
									<sci:arg name="Learner Number of Descriptors Fixed Number" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The number of descriptors to consider at each potential split point when &lt;i&gt;Number of Descriptors&lt;/i&gt; is set to &quot;Fixed Number&quot;.
</sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Advanced Tree Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>More complex and less commonly used options governing the building of individual trees in the model</sci:help>
										<sci:member>Learner Maximum Knots Per Property</sci:member>
										<sci:member>Learner Maximum Lookahead Depth</sci:member>
										<sci:member>Learner Maximum Generic Depth</sci:member>
										<sci:member>Learner Minimum Yes or No Answers</sci:member>
									</sci:arg>
									<sci:arg name="Learner Maximum Knots Per Property" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies the maximum number of potential splitting values for each numerical property in the training data.  Larger values increase the model building time, but may also increase the model accuracy.
&lt;p&gt;
(For a property, X, a  splitting value, S, is a value of X used to split the data in a tree node such that samples with X&amp;nbsp;&amp;le;&amp;nbsp;S go to one child node, and samples with X&amp;nbsp;&amp;gt;&amp;nbsp;S go to the other child node.)</sci:help>
										<sci:value>50</sci:value>
									</sci:arg>
									<sci:arg name="Learner Maximum Lookahead Depth" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Maximum depth to which lookahead splits will be considered.
&lt;p&gt;
Normally, a node is split by a single criterion (or not at all).  In the lookahead case, multiple alternative splits are considered.  The idea is that the &quot;best&quot; split criterion considering only the data in the current node might not be the best when considering the splits available to the child nodes.  Lookahead allows alternative pathways to be explored, until the tree reaches &lt;i&gt;Maximum Lookahead Depth&lt;/i&gt;.  (Due to the computer memory and time consumed by the resulting &quot;combinatorial explosion&quot;, this value should be kept fairly small.)
&lt;p&gt;
The number of alternative splits at each point is given by &lt;i&gt;Number of Lookahead Alternatives&lt;/i&gt;. After the tree is grown, the single best split is selected for each node based on the overall misclassification error.</sci:help>
										<sci:member>Learner Number of Lookahead Alternatives</sci:member>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Learner Number of Lookahead Alternatives" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If &lt;i&gt;Maximum Lookahead Depth&lt;/i&gt; is greater than zero, the number of alternative splits to consider at each node above this depth</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Learner Maximum Generic Depth" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>In a tree model with multiple values for &lt;i&gt;Name&lt;/i&gt; (i.e., a multiple dependent variable, or multi-Y, model), the maximum depth for a &quot;generic&quot; node.  A generic node is one whose split criterion considers  all dependent (Y) variables.  (This is by contrast with a &quot;specific&quot; node, for which a split criterion considers only a single dependent variable.)
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on multi-Y tree models, see T.P. Stockfisch, &quot;Partially Unified Multiple Property Recursive Partitioning (PUMP-RP): A New Method for Predicting and Understanding Drug Selectivity,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;43&lt;/b&gt;, 1608-1613 (2003).
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Generic Node Weighting</sci:member>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Learner Generic Node Weighting" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Generality parameter (&amp;beta;) for a multi-Y tree.  (Applies only to single-tree models.) Gives the weight to assign a generic (multi-Y) node when minimizing the following function during tree pruning:
&lt;p&gt;
R = R&lt;sub&gt;0&lt;/sub&gt; + &amp;alpha;*(N&lt;sub&gt;leaves&lt;/sub&gt; - &amp;beta;*N&lt;sub&gt;generic&lt;/sub&gt;)
&lt;p&gt;
where R&lt;sub&gt;0&lt;/sub&gt; is the misclassification error against the training data for the pruned tree; &amp;alpha; is the complexity penalty factor; N&lt;sub&gt;leaves&lt;/sub&gt; is the number of leaf nodes in the tree, and N&lt;sub&gt;generic&lt;/sub&gt; is the number of generic nodes in the tree.
&lt;p&gt;
The greater the value of of &lt;i&gt;Generic Node Weighting&lt;/i&gt;, the more that generic nodes are favored in the tree over specific (single-Y) nodes. However, the predictive accuracy of the tree is likely to decrease as a result.  Thus, the value represents a tradeoff between generality and accuracy in the pruned trees.</sci:help>
										<sci:value>1.5</sci:value>
									</sci:arg>
									<sci:arg name="Learner Minimum Yes or No Answers" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>For each potential node splitting question, specifies the minimum number of training samples for which the answer must be &quot;yes&quot; or must be &quot;no&quot;. For example suppose &lt;i&gt;Minimum Yes or No Answers&lt;/i&gt; is 10 and there are 200 training records. If the question &quot;size = &apos;large&apos;&quot; has 192 &quot;yes&quot; answers and 8 &quot;no&quot; answers, the question will be rejected.
&lt;p&gt;
Use of a value greater than 1 can reduce the time required to build a model without reducing prediction quality much or at all, especially when the input data contain contain fingerprint properties or sparse features.</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Learner Multiselect Learn Options" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. If you wish to also track structural features of molecular data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking.

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Do Not Coerce to Boolean: Retain property values such as the following as strings rather than coercing them to Boolean values: &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. 

&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Model Domain Fingerprint</sci:member>
										<sci:member>Learner Additional Properties</sci:member>
										<sci:member>Learner Numeric Distance Function</sci:member>
										<sci:member>Learner Fingerprint Distance Function</sci:member>
										<sci:legalval>Save Training Properties</sci:legalval>
										<sci:legalval>Encrypt Data</sci:legalval>
										<sci:legalval>Track Property Ranges</sci:legalval>
										<sci:legalval>Perform OPS Analysis</sci:legalval>
										<sci:legalval>Do Not Coerce to Boolean</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Multiselect Numeric Scaling</sci:member>
										<sci:legalval selected="true">Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
										<sci:legalval>Mahalanobis</sci:legalval>
										<sci:legalval>One Minus Correlation</sci:legalval>
										<sci:legalval>One Minus Squared Correlation</sci:legalval>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval>Tanimoto</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Multiselect Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
										<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
										<sci:legalval>Correct for Missing Values</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval selected="true">Tanimoto</sci:legalval>
										<sci:legalval>Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.
&lt;p&gt;
Select None if you do not wish to track fingerprint features.</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>FCFP_0</sci:legalval>
										<sci:legalval selected="true">FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval>FCFP_6</sci:legalval>
										<sci:legalval>ECFP_0</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Additional Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Learner Random Seed</sci:member>
										<sci:member>Learner When Finished</sci:member>
										<sci:member>Learner Destination Folder</sci:member>
										<sci:member>Learner Create Proxy Component</sci:member>
										<sci:member>Learner Num Records Before Caching</sci:member>
										<sci:member>Learner Node Pool Size</sci:member>
									</sci:arg>
									<sci:arg name="Learner Random Seed" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Seed for random number generator</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Learner When Finished" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Action to take after the model has been built.  Options are:
&lt;ul&gt;
&lt;li&gt;Show Model: Show an SVG representation of the tree model in a browser.
&lt;li&gt;Nothing: Take no action.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Trees to Display</sci:member>
										<sci:member>Learner Compact Format</sci:member>
										<sci:legalval>Show Model</sci:legalval>
										<sci:legalval selected="true">Nothing</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Trees to Display" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Comma-separated list of tree numbers or ranges of tree numbers to display in the Tree Model Viewer.  E.g.:&lt;p&gt; 
&lt;code&gt;1,2-4,7&lt;/code&gt;</sci:help>
										<sci:value>1-10</sci:value>
									</sci:arg>
									<sci:arg name="Learner Compact Format" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies whether to use a more-compact format for the tree display, allowing more of the tree to fit on a single screen.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Destination Folder" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
										<sci:value>Protocols/Clinic1920/Models/</sci:value>
									</sci:arg>
									<sci:arg name="Learner Create Proxy Component" type="BoolType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies whether to create a proxy component for the model (with the name &lt;i&gt;LearnedPropertyName&lt;i&gt;_proxy). For very large models, this allows pooled Pipeline Pilot server processes to hold the model in memory between runs. After the first run, this eliminates the overhead of loading the model when making predictions, which can dramatically increase the prediction speed.
&lt;p&gt;
To use the proxy component, first run a single prediction in a named pool using the actual model component (see the protocol-level __PoolID implementation parameter). You can do this directly, or have a protocol which does this run in the background at Pipeline Pilot startup time. Then use the proxy component for subsequent predictions. 
&lt;p&gt;
If &lt;i&gt;Create Proxy Component&lt;/i&gt; is True, then the default value of &lt;i&gt;Use Memory Cache&lt;/i&gt; on the model component is also set to True.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Node Pool Size" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Total number of nodes supported by the tree memory pool. If your server has a large amount of memory, you can support construction of larger, more complex trees by increasing the value of &lt;i&gt;Node Pool Size&lt;/i&gt;. Try this if you get an error message stating, &quot;Too many nodes in tree.&quot;</sci:help>
										<sci:value>500000</sci:value>
									</sci:arg>
									<sci:arg name="Learner Num Records Before Caching" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Number of data records in training set above which the training set is cached to disk. This caching can prevent the server process from running out of memory, but can also increase the time required to build the model. 
&lt;p&gt;
If your server has a large amount of memory, you can increase performance for large data sets by increasing the value to a number greater than the number of training set records.  If your server has a small amount of memory or the training set has a large number of properties (e.g., 1000 or more), you may need to reduce the value in order to successfully build a model.</sci:help>
										<sci:value>1000000</sci:value>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Sat Feb  1 15:18:05 2020</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>RPForest_CV</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>LEARNNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{32144F32-ABB9-4F4E-AE47-7D0418F2011C}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -275</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds, validates, and tunes a classification model or ensemble of models for a categorical response property</sci:value>
										<sci:value>The available methods are cross-validation (random k-fold, leave-one-out, or specified subsets), bootstrap sampling, and Y-scrambling. The validation models and a final all-data model are built using the learner specified by &lt;i&gt;Learner&lt;/i&gt;. You may optionally build an ensemble model using bootstrap aggregation. (To use a different learner, run &lt;a href=&quot;javascript:DoLink(&apos;{1FD83ABD-D6E8-4B1D-895B-BEEFB000B17E}&apos;)&quot;&gt;Create Validation Learner&lt;/a&gt; with the desired value of the &lt;i&gt;Learner&lt;/i&gt; parameter.) Tuning of the parameters under &lt;i&gt;Learner&lt;/i&gt; is done if you provide multiple values for any of these, except for those prefixed by &quot;Multiselect&quot;, which are designed to allow multiple simultaneous values.
&lt;p&gt;
To evaluate the model performance, the component performs validation as specified by &lt;i&gt;Validation Type&lt;/i&gt;.  It then builds a final model from all of the original data, using the learner parameter settings that give the largest average test ROC score. If &lt;i&gt;Validation Type&lt;/i&gt; is set to &quot;None&quot; or &quot;Y Scrambling&quot; then the parameter settings with the largest training data ROC score are used instead.
&lt;p&gt;
Output properties are as follows:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ParameterSetIndex&lt;/b&gt;: Unique index for a specific combination of learner parameter settings. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;li&gt;(Learner parameter values): One property whose name is the same as each learner parameter which varies (i.e., each parameter for which you provide more than one value).
&lt;li&gt;&lt;b&gt;ReferenceClass&lt;/b&gt;: (Binary models or models with &lt;i&gt;ROC Score Type&lt;/i&gt; set to &quot;Preferred Only&quot;) Name of the &quot;preferred class&quot; for the purpose of computing ROC scores and confusion matrices. Samples in the class are considered &quot;positive&quot;; samples not in the class are considered &quot;negative&quot;.
&lt;li&gt;&lt;b&gt;ConfusionTraining&lt;/b&gt;: Confusion matrix for the training data, using a model built from the original, unmodified data set. This is provided  for models that make class predictions, as opposed to those that only output a score that can be used for ranking. The model score cutoff to distinguish between classes is the default used by the model; no attempt is made to optimize the cutoff.
&lt;li&gt;&lt;b&gt;ConfusionTest&lt;/b&gt;: Confusion matrix for the test data, using results accumulated from all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;Classes&lt;/b&gt;: (Multi-class models with &lt;i&gt;ROC Score Type&lt;/i&gt; not set to &quot;Preferred Only&quot;) Semicolon-delimited list of names of all classes.
&lt;li&gt;&lt;b&gt;PartialROCTraining&lt;/b&gt;: (Multi-class models) Using a model built from the original, unmodified data set and applied to the same data, a  matrix of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types. For each element of the matrix, the score for &quot;Class1&quot; (the row) is used to distinguish between it and all other classes (one-versus-rest) or between it and &quot;Class2&quot; (one-versus-one).
&lt;li&gt;&lt;b&gt;ROCTraining&lt;/b&gt;: The overall ROC score for the training data, using a model built from the original, unmodified data set. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;Iteration&lt;/b&gt;: Array of iteration numbers for validation methods involving random selection, repeated multiple times. (Only present when more than one iteration is performed.)
&lt;li&gt;&lt;b&gt;PartialROCTest&lt;/b&gt;: (Multi-class models) For the test data from each iteration, a  semicolon-delimited list of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types.
&lt;li&gt;&lt;b&gt;ROCTest&lt;/b&gt;: The overall ROC score for the test data for each iteration. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;MeanPartialROCTest&lt;/b&gt;: (Multi-class models) Matrix containing the means of the PartialROCTest scores over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;MeanROCTest&lt;/b&gt;: Mean of the ROCTest score over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;KappaTest&lt;/b&gt;: Kappa value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SensitivityTest&lt;/b&gt;: Sensitivity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SpecificityTest&lt;/b&gt;: Specificity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;BestParamSet&lt;/b&gt;: A Boolean property whose value is True for the &quot;best&quot; set of parameter values (as determined by the appropriate ROC score value), or false otherwise. This property is omitted if there is only one set of parameter values. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The number of validation models and thus the time it takes to run the analysis can vary greatly depending on the analysis method, the number of iterations, and the number of distinct parameter settings. E.g., for a data set containing 200 samples, leave-one-out cross-validation with 4 distinct sets of learner parameter values takes roughly 80 times the amount of time required for 10 iterations of bootstrap validation with a single set of parameter values, which in turn takes roughly 10 times the amount of time required to build a single model from all the data.
&lt;li&gt;The following learner components have some level of cross-validation (CV) and/or parameter tuning built in:
&lt;ul&gt;
&lt;li&gt;Learn Good from Bad
&lt;li&gt;Learn Good Molecules
&lt;li&gt;Learn Cross-validated RP Tree Model
&lt;li&gt;Learn R Linear Discriminant Analysis Model
&lt;li&gt;Learn R Logistic Regression Model
&lt;li&gt;Learn R Neural Net Model
&lt;li&gt;Learn R Support Vector Machine Model
&lt;li&gt;Learn R XGBoost Model
&lt;/ul&gt;
The built-in validation in these learners is generally faster than what is provided here, though it is not as flexible in that only a single iteration of k-fold or leave-one-out CV is supported, and only some parameters can be tuned.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To display ROC plots for test data and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2208</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>clinic1920</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Protocols\Clinic1920\Learners\RPForest_CV</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@learnername EQ &apos;RF&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="SVM_CV" version="2">
									<sci:arg name="LearnedPropertyName" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAK7AE5hbWUgb2YgdGhlIG1vZGVsIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgTGVhcm5lZFByb3BlcnRpZXMgZm9sZGVyIG9uIHlvdXIgdXNlciB0YWIuICBUaGlzIGlzIGFsc28gdGhlIGJhc2UgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IGNhbiBiZSBjYWxjdWxhdGVkIGJ5IHRoYXQgY29tcG9uZW50LixTdHJpbmdUeXBlAAwAAAABAQABAAQA/AAAAAAAAAAAAAEUTGVhcm5lZFByb3BlcnR5TmFtZQPMU8+7LEBtb2RlbG5hbWUA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
										<sci:value>modelname</sci:value>
									</sci:arg>
									<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>Name of the dependent (Y) property to be learned</sci:help>
										<sci:member>Preferred Value</sci:member>
										<sci:member>ROC Score Type</sci:member>
										<sci:member>Optimize Cutoff</sci:member>
										<sci:value>Dev</sci:value>
									</sci:arg>
									<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>In the binary Bayesian case (in which &lt;i&gt;Learner&lt;/i&gt; is &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;), specifies the &quot;good&quot; class. In the multi-class case (in which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies the &quot;positive&quot; class for the purpose of calculating ROC scores, false negatives, false positives, and so on.
&lt;p&gt;
If blank, the preferred class is taken to be the first in alphabetical order.</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ROC Score Type" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>For the multi-class case only (for which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies how the ROC area-under-the-curve (AUC) scores are to be computed. Options are:
&lt;ul&gt;
&lt;li&gt;Preferred Only: Computes only the ROC score for the &lt;i&gt;Preferred Value&lt;/i&gt; versus not-&lt;i&gt;Preferred Value&lt;/i&gt; distinction, using the model output score for the &lt;i&gt;Preferred Value&lt;/i&gt; class.
&lt;li&gt;One-versus-Rest: For each class (each distinct value of the &lt;i&gt;Name&lt;/i&gt; property), computes a ROC score for the in-class verus not-in-class distinction, using the model output score for that class. The reported ROC score is the mean of all such partial ROC scores.
&lt;li&gt;One-versus-One: For each pair of classes, A and B, data not belonging to either class are excluded. Then two partial ROC scores are computed for the A-versus-B distinction: one using the model output score for class A, the other using the model output score for class B. The reported ROC score is the mean of all such partial ROC scores. This is the most computationally expensive option.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For a description of the &quot;one-versus-one&quot; method of computing ROC scores for multi-class problems see: D.J. Hand and R.J. Till, &quot;A Simple Generalization of the Area Under the ROC Curve for Multiple Class Classification Problems,&quot; &lt;i&gt;Machine Learning&lt;/i&gt;, &lt;b&gt;45&lt;/b&gt;, 171 (2001). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.springerlink.com/content/nn141j42838n7u21/fulltext.pdf&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">Preferred Only</sci:legalval>
										<sci:legalval>One-versus-Rest</sci:legalval>
										<sci:legalval>One-versus-One</sci:legalval>
									</sci:arg>
									<sci:arg name="Optimize Cutoff" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For those model types that support override of the default cutoff score used to divide classes, specifies that the learner will optimize this value based on the validation model predictions (e.g., the cross-validated predictions). Cutoff optimization is supported for the Cross-validation and Bootstrap validation types only.</sci:help>
										<sci:enabledscript>setdisableddetails(&apos;Cutoff optimization not supported for learner &quot;&apos; . Parameter(&apos;Learner&apos;) . &apos;&quot;&apos;);
#cutoffLearners := tolower(&apos;Learn Good From Bad,Learn Good Molecules,Learn RP Tree Model,Learn RP Forest Model,Learn R Linear Discriminant Analysis Model,Learn R Forest Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Support Vector Machine Model,Learn R XGBoost Model,Learn R Logistic Regression Model&apos;);

expand(&apos;,&apos;, #cutoffLearners);
#learner := tolower(Parameter(&apos;Learner&apos;));

contains(#cutoffLearners, #learner);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Input string properties with any of the following values (independent of case) are treated as Boolean: &quot;True&quot;, &quot;False&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. If you wish such properties to be treated as strings instead, you should modify the values with a prefix or suffix. E.g., change &quot;T&quot; to &quot;T.&quot; or &quot;TT&quot;.
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
										<sci:member>PredefinedSet</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>IgnoreProperties</sci:member>
										<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval>PredefinedSet</sci:legalval>
										<sci:legalval>UserSet</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval selected="true">ALogP</sci:legalval>
										<sci:legalval selected="true">Molecular_Weight</sci:legalval>
										<sci:legalval selected="true">Num_H_Donors</sci:legalval>
										<sci:legalval selected="true">Num_H_Acceptors</sci:legalval>
										<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
										<sci:legalval>Num_Atoms</sci:legalval>
										<sci:legalval>Num_Rings</sci:legalval>
										<sci:legalval>Num_AromaticRings</sci:legalval>
										<sci:legalval>Num_Fragments</sci:legalval>
										<sci:legalval>NPlusO_Count</sci:legalval>
										<sci:legalval>Molecular_Solubility</sci:legalval>
										<sci:legalval>Molecular_SurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSASA</sci:legalval>
										<sci:legalval>AlogP_Count</sci:legalval>
										<sci:legalval>FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval selected="true">FCFP_6</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
										<sci:legalval>Estate_Keys</sci:legalval>
										<sci:legalval>Estate_Counts</sci:legalval>
										<sci:legalval>MDLPublicKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
									</sci:arg>
									<sci:arg name="Model Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the &lt;i&gt;Learner&lt;/i&gt; is configured to create a Regression model of a numeric Y property, or a Classification model of a categorical Y property.</sci:help>
										<sci:legalval selected="true">Classification</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Name of learner to be used to build validated models. See the help for the corresponding component for more information on the learner. See also the help for the parameters inside this one.
</sci:help>
										<sci:member>Learner Gamma</sci:member>
										<sci:member>Learner Cost</sci:member>
										<sci:member>Learner (Group) SVM Options</sci:member>
										<sci:member>Learner Multiselect Learn Options</sci:member>
										<sci:member>Learner (Group) Additional Options</sci:member>
										<sci:legalval selected="true">Learn R Support Vector Machine Model</sci:legalval>
									</sci:arg>
									<sci:arg name="Output Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the format of the data records sent out the Pass port after the model is built. Options are:
&lt;ul&gt;
&lt;li&gt;Raw: all data are output as properties in raw form. Plot and importance data are output as contracted semicolon-delimited arrays. For plotting and further analysis, you may need to unmerge data records and expand these arrays.
&lt;li&gt;Report: A Reporting object summarizing the results is output. The format is an HTML tabbed report. This can be displayed directly in the &lt;a href=&quot;javascript:DoLink(&apos;{0952D9DF-F95C-4D43-826F-C70450811DD8}&apos;)&quot;&gt;HTML Report Viewer&lt;/a&gt; or can be embedded within another report.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Raw</sci:legalval>
										<sci:legalval>Report</sci:legalval>
									</sci:arg>
									<sci:arg name="Validation Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Specifies the type of model validation to perform. Options are:
&lt;ul&gt;
&lt;li&gt;None: No validation is done. This option is useful if you wish to perform parameter tuning using the root-mean-square (RMS) error for the training data as the basis for selecting the best among different combinations of learner parameter settings. Note that this approach provides no protection against overfitting. Only one iteration is done for this case. (The value of &lt;i&gt;Iterations&lt;/i&gt; is ignored.)
&lt;li&gt;Bootstrap: For each iteration, a bootstrap sample is drawn from the original data; a model is fitted to the sample; and predictions are made for the data records excluded from the sample. A bootstrap sample from N input data records consists of N records randomly selected &quot;with replacement,&quot; meaning that duplicates are allowed. On average, about 63% of the records are included in the sample at least once, and 37% are excluded.
&lt;li&gt;Cross-Validation: The input data records are divided into some number of subsets. For each subset, a model is build from all other data records, and predictions are made for that subset. This process is repeated until all subsets are covered. See &lt;i&gt;Cross-Validation Type&lt;/i&gt; for the different types of cross-validation that you can perform.
&lt;li&gt;Y Scrambling: For each iteration, the set of Y (independent property) values for the input data set is randomly reordered and a model is built from this artificial data set. By contrast to the other validation methods, small Qsquared (relative to Rsquared) and large ValidationRMSE (relative to RMSE) values are &quot;good&quot; in this case, because they indicate that the model of the unscrambled data is not simply fitting noise in the data (i.e., overfitting).</sci:help>
										<sci:member>Iterations</sci:member>
										<sci:member>Estimate Variable Importance</sci:member>
										<sci:member>Cross-Validation Type</sci:member>
										<sci:member>Random Seed</sci:member>
										<sci:member>Output Plot Data</sci:member>
										<sci:member>Scratch Folder</sci:member>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Bootstrap</sci:legalval>
										<sci:legalval selected="true">Cross-Validation</sci:legalval>
										<sci:legalval>Y Scrambling</sci:legalval>
									</sci:arg>
									<sci:arg name="Iterations" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of times to repeat the validation scheme. Multiple iterations make sense only for those validation schemes that contain an element of randomness&amp;mdash;specifically k-fold cross validation, bootstrapping, and Y-scrambling. For other validation schemes (e.g., leave-one-out cross-validation), only one iteration is performed irrespective of the value specified here, because the results would be the same each time.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to a value other than None.&apos;);
parameter(&apos;Validation Type&apos;) ne &apos;None&apos;</sci:enabledscript>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Estimate Variable Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to compute the importance of variables using a permutation approach. (Variables are not necessarily the same as descriptors. E.g., in this context, fingerprints are descriptors, but fingerprint features are variables.)
&lt;p&gt;
The importance is estimated by the following procedure:
&lt;ol&gt;
&lt;li&gt;A model is built as usual using the cross-validation or bootstrap sample, or if &lt;i&gt;Validation Method&lt;/i&gt; is &quot;None&quot;, using all training data. (Importance estimation does not apply for the &quot;Y Scrambling&quot; method.)
&lt;li&gt;Predictions are made for the left-out data (cross-validation and bootstrap options) or the training data (&quot;None&quot; option).
&lt;li&gt;For each variable in turn, all values of that variable are randomly permuted and predictions are made from the data with the permuted values.
&lt;li&gt;The root-mean-square (RMS) difference in the predicted response and the difference in the RMS error relative to the unpermuted data are computed.
&lt;li&gt;The larger these differences are, the greater the presumed importance of the variable. 
&lt;/ol&gt;
&lt;p&gt;
Outputs from an importance calculation are as follows.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Variable Name&lt;/b&gt;: Name of variable.
&lt;li&gt;&lt;b&gt;Variable SMILES&lt;/b&gt;: (only for molecular fingerprint data) SMILES string representing the structural feature corresponding to a variable representing a molecular fingerprint bit.
&lt;li&gt;&lt;b&gt;Variable Importance (ROC AUC Change)&lt;/b&gt;: Variable importance calculated as the change in the ROC AUC score from when the variable values are randomly permuted. (Note that this value can be negative, indicating that permuting the values actually improved the ROC score. The magnitude of the value in such a case should be small, indicating an unimportant variable. Large negative values might indicate overfitting.)
&lt;/ul&gt;
The above values are output as contracted arrays (with &quot;;&quot; as the delimiter) for each iteration of validation. The arrays should be expanded and unmerged in order to sort or plot the values. You can also use &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt; to convert the &lt;b&gt;Variable SMILES&lt;/b&gt; property to a molecular structure.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For scalar properties, a variable is the same as a descriptor.
&lt;li&gt;For array properties, each element of the array is treated as a separate variable.
&lt;li&gt;For fingerprint properties, each distinct fingerprint feature is treated as a separate variable. The value of &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; specifies the minimum number of data records on which a feature must be present in order for its importance to be estimated. 
&lt;li&gt;Permutation importance measures have been extensively studied for forest models, but less so for other model types. In data sets containing variables of different types (e.g., categorical and continuous), the measures may be biased. Also, for forest models, the importance tends to be overestimated for variables that are correlated with other variables in the data. For details, see the following: C. Strobl et al., &quot;Bias in random forest variable importance measures: Illustrations, sources and a solution&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2007, &lt;b&gt;8&lt;/b&gt;:25 (doi:10.1186/1471-2105-8-25), and C. Strobl et al., &quot;Conditional variable importance for random forests&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2008, &lt;b&gt;9&lt;/b&gt;:307 (doi:10.1186/1471-2105-9-307).
&lt;/ul&gt;</sci:help>
										<sci:member>Min Fingerprint Feature Count</sci:member>
										<sci:member>Whole Descriptor Importance</sci:member>
										<sci:enabledscript>parameter(&apos;Validation Type&apos;) ne &apos;Y Scrambling&apos;</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Min Fingerprint Feature Count" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a fingerprint property, specifies the minimum number of times a feature (bit) must be present in the input data for the importance to be calculated for that feature. Very rare features are unlikely to have a high importance ranking, and ignoring them in the importance calculation can decrease the calculation time.
&lt;p&gt;
The same is true for extremely common features. Thus, any feature present in &lt;b&gt;more&lt;/b&gt; than N - &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; data records is also ignored, where N is the total number of input data records.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">sqrt(N)</sci:legalval>
										<sci:legalval>1</sci:legalval>
										<sci:legalval>2</sci:legalval>
										<sci:legalval>4</sci:legalval>
										<sci:legalval>8</sci:legalval>
										<sci:legalval>16</sci:legalval>
										<sci:legalval>32</sci:legalval>
										<sci:legalval>64</sci:legalval>
										<sci:legalval>128</sci:legalval>
										<sci:legalval>256</sci:legalval>
									</sci:arg>
									<sci:arg name="Whole Descriptor Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For array and fingerprint properties, specifies whether to calculate the importance of the descriptor as a whole, in addition to the importance for the individual elements or features of the descriptor.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Cross-Validation Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Indicates the method of dividing the original data into subsets for cross-validation. Options are:
&lt;ul&gt;
&lt;li&gt;Random: Performs k-fold cross-validation in which each data record is randomly assigned to one of k subsets of equal size (plus or minus one record), with the value of k given by &lt;i&gt;Number of Folds&lt;/i&gt;.
&lt;li&gt;Stratified Random: Like Random except that each distinct class of data records is divided into k folds which are then combined into k overall folds.
&lt;li&gt;Random Subset: Creates a random subset containing a fraction &lt;i&gt;Training Fraction&lt;/i&gt; of the input data, builds a model from these data, and applies the model to the remaining data.
&lt;li&gt;Leave-One-Out: Each data record is assigned to its own subset. Equivalent to N-fold cross-validation, where N is the number of data records. &lt;b&gt;Note that for a large input data set, this option is extremely slow.&lt;/b&gt; Because there is only one way to divide N data records into N subsets, only 1 iteration is performed for this option.
&lt;li&gt;Preselected: The value of the property named by &lt;i&gt;Subset Property&lt;/i&gt; identifies the subset to which each data record belongs. This option is useful if you wish to use a method such as clustering for dividing the data into subsets.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Property</sci:member>
										<sci:member>Number of Folds</sci:member>
										<sci:member>Training Fraction</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to Cross-Validation.&apos;);
parameter(&apos;Validation Type&apos;) eq &apos;Cross-Validation&apos;</sci:enabledscript>
										<sci:legalval>Random</sci:legalval>
										<sci:legalval selected="true">Stratified Random</sci:legalval>
										<sci:legalval>Random Subset</sci:legalval>
										<sci:legalval>Leave-One-Out</sci:legalval>
										<sci:legalval>Preselected</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Preselected, specifies the name of the property whose value indicates the subset to which each data record belongs.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Preselected.&apos;);
Parameter(&apos;Cross-Validation Type&apos;) eq &apos;Preselected&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Number of Folds" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Random, indicates the number of equal-sized subsets into which the data set is to be divided for cross-validation.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Random or Stratified Random.&apos;);
parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random&apos; or parameter(&apos;Cross-Validation Type&apos;) eq &apos;Stratified Random&apos;</sci:enabledscript>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Training Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Fraction of data to put into the training set for the Random Subset &lt;i&gt;Cross-Validation Type&lt;/i&gt;.</sci:help>
										<sci:enabledscript>parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random Subset&apos;</sci:enabledscript>
										<sci:value>0.7</sci:value>
									</sci:arg>
									<sci:arg name="Random Seed" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Seed value for random number generator used in resampling and other calculations</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Output Plot Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>For binary classification only, specifies whether to output data that can be used to generate ROC plots. If True, then the following two additional properties are added to the output data record for each parameter set:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FPRateTest:&lt;/b&gt; Values representing the false positive rate for each point on the ROC plot for a given validation iteration. (ROC plot X axis.)
&lt;li&gt;&lt;b&gt;TPRateTest:&lt;/b&gt; Values representing the true positive rate for each point on the ROC plot for a given validation iteration. (ROC plot Y axis.)
&lt;/ul&gt;
These properties contain arrays of semicolon-separated values. There is one array element for each validation iteration. Each array element can be expanded into its own array for plotting by using the PilotScript expand() function.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Scratch Folder" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Location of XMLDB folder into which temporary models and learners will be written</sci:help>
										<sci:value>$(UserName)/TempModels</sci:value>
									</sci:arg>
									<sci:arg name="Build Extended Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether, in addition to the final model built with untagged data, you wish to build an &quot;extended&quot; model using both untagged and tagged data. For model testing purposes, you may wish to initially hold out a portion of all available data, but to include this portion when building the model you use for making predictions. If &lt;i&gt;Build Extended Model&lt;/i&gt; is true, two final models are produced: one with the name specified by &lt;i&gt;LearnedPropertyName&lt;/i&gt;, the other with the suffix &quot;Ext&quot; appended to the name.
&lt;p&gt;
Use &lt;i&gt;Test for Extra Data&lt;/i&gt; to specify a PilotScript expression that evaluates to False for data records to be included in both models, and True for data records to be included only in the extended model.</sci:help>
										<sci:member>Test for Extra Data</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Test for Extra Data" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>PilotScript expression which evaluates to False for training data records to be used in the model evaluation statistics and to build the model named by &lt;i&gt;LearnedPropertyName&lt;/i&gt;. The expression should evaluate to True for &quot;extra&quot; data records to be included in an additional model of the same name but with the suffix &quot;Ext&quot;.</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Extended Model&apos;) = True</sci:enabledscript>
										<sci:value>isExtra is defined</sci:value>
									</sci:arg>
									<sci:arg name="Build Ensemble Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specified whether to build a &quot;bagged&quot; (bootstrap-aggregated) ensemble model as the final model after any parameter optimization.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Ensemble models are not supported for &lt;a href=&quot;javascript:DoLink(&apos;{4B37A4B3-BAEF-4000-96D0-031FF49A87C7}&apos;)&quot;&gt;Learn R Logistic Regression Model&lt;/a&gt; because logistic regression models do not output a class prediction, but only a score.
&lt;/ul&gt;</sci:help>
										<sci:member>Ensemble Size</sci:member>
										<sci:member>Sampling Method</sci:member>
										<sci:member>Resample Descriptors</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Ensemble Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of sub-models in ensemble</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Sampling Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the resampling method to use in order to generate data for the sub-models of the ensemble from the original training data. Options are:
&lt;ul&gt;
&lt;li&gt;Bootstrap: For each sub-model, generates a random bootstrap sample of the same size as the input training set.
&lt;li&gt;Random Subsets: For each sub-model, generates a random subset containing a fraction of the training data specified by &lt;i&gt;Subset Fraction&lt;/i&gt;.
&lt;li&gt;Non-overlapping Subsets: Divides the input data into &lt;i&gt;Ensemble Size&lt;/i&gt; random disjoint subsets and builds a sub-model for each subset.
&lt;li&gt;None: Does not resample the data. Builds each sub-model from the entire training set. &lt;i&gt;Use this option only if the learner for the sub-models has a stochastic element or does its own resampling. Otherwise, each sub-model will be identical&lt;/i&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Fraction</sci:member>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval selected="true">Bootstrap</sci:legalval>
										<sci:legalval>Random Subsets</sci:legalval>
										<sci:legalval>Non-overlapping Subsets</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Sampling Method&lt;/i&gt; is &quot;Random Subsets&quot;, specifies the fraction of data to include in each subset. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>Parameter(&apos;Sampling Method&apos;) eq &apos;Random Subsets&apos;</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Resample Descriptors" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to resample the descriptors used to build the model so that each sub-model is given a different random subset of all of the descriptors. This increases the cross-model variance and may improve the predictive performance of the ensemble model or the performance of a quality model of the ensemble.</sci:help>
										<sci:member>Descriptor Fraction</sci:member>
										<sci:enabledscript>parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Descriptor Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Resample Descriptors&lt;/i&gt; is True, specifies the fraction of descriptors to include for each sub-model. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>parameter(&apos;Resample Descriptors&apos;)</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options</sci:value>
												<sci:value>Use Parallel Processing</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
If set to True, each iteration of modeling building out of &lt;i&gt;Number of Iterations&lt;/i&gt; is run in a separate parallel process, or if the number of learner parameter combinations exceeds the number of iterations, each parameter combination is run in a separate process. In addition, if &lt;i&gt;Build Ensemble Model&lt;/i&gt; is True, each sub-model of the ensemble is built in a separate process. Running in parallel can decrease the calculation time on multi-core, cluster, or grid servers.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Limitations:&lt;/b&gt; Paths to job and user folders on the primary compute node must be visible from all other compute nodes, and all compute nodes must share a single component database (XMLDB).
&lt;/p&gt;
&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances.  As a rough guide, performance can be improved when each individual model building task requires at least 10 seconds to execute.
&lt;/p&gt;
&lt;p&gt;
Note that it is an internal subprotocol in which the models are built rather than this component that actually runs in parallel.
&lt;/p&gt;
&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Use Parallel Processing Server</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server</sci:value>
												<sci:value>Use Parallel Processing Server</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Use Parallel Processing Server Processes</sci:member>
										<sci:member>Use Parallel Processing Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Processes</sci:value>
												<sci:value>Use Parallel Processing Server Processes</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Use Parallel Processing Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Use Parallel Processing Server Run On Grid Queue Name</sci:member>
										<sci:member>Use Parallel Processing Server Run on Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Queue Name</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid Queue Name</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run on Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Grid Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;)</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
										<sci:value>Cache0,DesignFile,results,finalresults,PredictionCache,ensembleStatsCache,SubsetKeys</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>n,ntot,Bayesian,NumClasses,PartialROCs,PartialROCsTraining,AllClasses,PreferredClass,Impute,Binary,PreferredScoreSuffix,ScoreSuffixes,OutputOptions,PointInfoText,VarNames,VarValues,FixedNames,FixedValues,NumFFDesignPts,PPparamSettingIndex,XVSetIDNUm,bestIndex,ConfusionTraining,ConfusionTest,oobIndices,WhenFinishedFinal,BuildDAModelFinal,ValJobID,LearnerPath,DataCache,ExtDataCache,GotExtraData,gotResults,EnsembleFolder,AllDataCache,IsNative,ADModelGUID,BaggedModelGUIDs,BaggedModelIDs,outputLegalVals,ensembleModelName,MulticatBayesian,LPropName,LPropNameExt,ModelPath,DestFolder,PreferredScorePropertyAD,ScorePropertiesAD,binaryROC,ROCScoreIB,ConfusionMatrixIBtable,PartialROCIBtable,ROCScoreOOB,ConfusionMatrixOOBtable,PartialROCOOBtable,NativeLearner,AllDescriptors,ScalarDescriptors,ArrayDescriptors,ArrayDescriptorLengths,FingerprintDescriptors,FoldedFingerprintLength,FingerprintBitHash,ComputeDecisionValues,ComputeProbabilities,ParallelIterations,ParallelDesignPoints,OptimizeCutoff,MeanBestCutoff,Cutoffs,CutoffCounts,NumVariables,ImportanceVarNames,FPImportanceHash,ImportanceVarSMILES,FPisCount,ADModelParams,ADParamInfo,ADParamHelp,ADParamValues,ADParamLegalValues,BaggedModelParams,BaggedParamInfo,BaggedParamHelp,BaggedParamValues,BaggedParamLegalValues,NumTrueScalarDescriptors,CreateProxy,ADProxyGUID,BaggedProxyGUIDs,BaggedProxyIDs,FinalDestinationFolder,startTime,elapsedTime,Gamma,Cost,Weighting Method,Type,Epsilon,Nu,Kernel,Degree,Coef0,Seed,Numeric Distance Function,Fingerprint Distance Function,Model Domain Fingerprint,Additional Properties,Convert Fingerprints To,Fixed Length,Destination Folder</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Gamma" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAKwAlBhcmFtZXRlciBuZWRlZCBmb3IgYWxsIGtlcm5lbCB0eXBlcyBvdGhlciB0aGFuIExpbmVhciAoc2VlIEFkdmFuY2VkIE9wdGlvbnMpLiBUeXBpY2FsbHksIHRoaXMgcGFyYW1ldGVyIG11c3QgYmUgdHVuZWQgaW4gb3JkZXIgdG8gZ2V0IHRoZSBiZXN0IG1vZGVsLgoKVGhlIGRlZmF1bHQgaXMgb25lIG92ZXIgdGhlIG51bWJlciBvZiBkZXNjcmlwdG9yIHByb3BlcnRpZXMsIG54LiAgQSBzaW5nbGUgdmFsdWUsIGEgY29tbWEtc2VwYXJhdGVkIGxpc3Qgb2YgdmFsdWVzLCBvciBhbnkgUiBleHByZXNzaW9uIGdlbmVyYXRpbmcgYSB2ZWN0b3Igb2YgdmFsdWVzIG1heSBiZSBzcGVjaWZpZWQuICBJZiBtdWx0aXBsZSB2YWx1ZXMgYXJlIGdpdmVuLCBhIG1vZGVsIHdpbGwgYmUgYnVpbHQgZm9yIGVhY2ggdmFsdWUuICBJZiBDcm9zc1ZhbGlkYXRlIGlzIHNldCB0byBUcnVlLCBjcm9zcy12YWxpZGF0aW9uIHdpbGwgYmUgcGVyZm9ybWVkIGZvciBlYWNoIHZhbHVlLCBhbmQgdGhlIHZhbHVlIGdpdmluZyB0aGUgYmVzdCBjcm9zcy12YWxpZGF0aW9uIHNjb3JlIHdpbGwgYmUgdXNlZCB0byBidWlsZCB0aGUgZmluYWwgbW9kZWwgZnJvbSBhbGwgdGhlIGRhdGEuCgpJbiBzcGVjaWZ5aW5nIHZhbHVlcywgeW91IG1heSB1c2UgbnggdG8gaW5kaWNhdGUgdGhlIG51bWJlciBvZiBkZXNjcmlwdG9yIHByb3BlcnRpZXMuCixTdHJpbmdUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADhMZWFybmVyIEdhbW1hA8xTz7scQGdhbW1hAA==</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Parameter neded for all kernel types other than Linear (see Advanced Options). Typically, this parameter must be tuned in order to get the best model.

The default is one over the number of descriptor properties, nx.  A single value, a comma-separated list of values, or any R expression generating a vector of values may be specified.  If multiple values are given, a model will be built for each value.  If CrossValidate is set to True, cross-validation will be performed for each value, and the value giving the best cross-validation score will be used to build the final model from all the data.

In specifying values, you may use nx to indicate the number of descriptor properties.
</sci:help>
										<sci:value>gamma</sci:value>
									</sci:arg>
									<sci:arg name="Learner Cost" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAALwAUNvc3QgYXNzb2NpYXRlZCB3aXRoIHRyYWluaW5nIHNldCBlcnJvcnMuIFR5cGljYWxseSwgdGhpcyBwYXJhbWV0ZXIgbXVzdCBiZSB0dW5lZCBpbiBvcmRlciB0byBnZXQgdGhlIGJlc3QgbW9kZWwuCgpBIHNpbmdsZSB2YWx1ZSwgYSBjb21tYS1zZXBhcmF0ZWQgbGlzdCBvZiB2YWx1ZXMsIG9yIGFueSBSIGV4cHJlc3Npb24gZ2VuZXJhdGluZyBhIHZlY3RvciBvZiB2YWx1ZXMgbWF5IGJlIHNwZWNpZmllZC4gSWYgbXVsdGlwbGUgdmFsdWVzIGFyZSBnaXZlbiwgYSBtb2RlbCB3aWxsIGJlIGJ1aWx0IGZvciBlYWNoIHZhbHVlLiBJZiBDcm9zc1ZhbGlkYXRlIGlzIHNldCB0byBUcnVlLCBjcm9zcy12YWxpZGF0aW9uIHdpbGwgYmUgcGVyZm9ybWVkIGZvciBlYWNoIHZhbHVlLCBhbmQgdGhlIHZhbHVlIGdpdmluZyB0aGUgYmVzdCBjcm9zcy12YWxpZGF0aW9uIHNjb3JlIHdpbGwgYmUgdXNlZCB0byBidWlsZCB0aGUgZmluYWwgbW9kZWwgZnJvbSBhbGwgdGhlIGRhdGEuCixTdHJpbmdUeXBlAAgAAAABAQABAAQA/AAAAAAAAAAAADRMZWFybmVyIENvc3QDzFPPuxAxLjAA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Cost associated with training set errors. Typically, this parameter must be tuned in order to get the best model.

A single value, a comma-separated list of values, or any R expression generating a vector of values may be specified. If multiple values are given, a model will be built for each value. If CrossValidate is set to True, cross-validation will be performed for each value, and the value giving the best cross-validation score will be used to build the final model from all the data.
</sci:help>
										<sci:value>cost</sci:value>
									</sci:arg>
									<sci:arg name="Learner (Group) SVM Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Options for alternative support vector machine and kernel types</sci:help>
										<sci:member>Learner Seed</sci:member>
										<sci:member>Learner Epsilon</sci:member>
										<sci:member>Learner Type</sci:member>
										<sci:member>Learner Kernel</sci:member>
										<sci:member>Learner Nu</sci:member>
										<sci:member>Learner Degree</sci:member>
										<sci:member>Learner Coef0</sci:member>
										<sci:member>Learner Weighting Method</sci:member>
									</sci:arg>
									<sci:arg name="Learner Weighting Method" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the scheme to use in order to determine the relative importance of a sample when building the SVM model.  Options are:
&lt;ul&gt;
&lt;li&gt;Uniform: Each sample is weighted equally.
&lt;li&gt;By Class: Each class is weighted equally. This option is appropriate for unbalanced data sets, especially if the most-desirable class has far fewer samples than other classes. &lt;br&gt; Example: A data set contains 100 members of class A and 200 members of class B.  If &quot;By Class&quot; is specified, then each A sample is assigned a weight of 1.0 and each B sample a weight of 0.5.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Uniform</sci:legalval>
										<sci:legalval>By Class</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Type" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Type of SVM to learn.  For fitting a continuous property, the default is epsilon-regression. For a categorical property, the default is C-classification.   This parameter may be used to override the default.  In brief, the methods are as follows:
&lt;ul&gt;
&lt;li&gt; epsilon-regression (default for Continuous): A regression technique which ensures that training set residuals do not exceed Epsilon, increasing the number of support as needed to maintain this error rate.  A value of the Epsilon parameter that is too small may cause overfitting in this case.
&lt;li&gt; nu-regression: A regression approach in which the parameter Nu sets an upper bound for the training set error and a lower bound for the fraction of records that become support vectors.
&lt;li&gt; C-classification (default for Categorical): attempts to build a maximum-margin classifier while minimizing the number of classification errors.  The Cost parameter governs the cost of misclassification errors for the training set.  A greater value of Cost reduces the number of errors, but may lead to overfitting.
&lt;li&gt; nu-classification: An alternative classification approach in which the parameter Nu sets an upper bound for the training set error and a lower bound for the fraction of records that become support vectors.
&lt;li&gt; one-classification: A novelty-detection classification method.
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">Default</sci:legalval>
										<sci:legalval>nu-regression</sci:legalval>
										<sci:legalval>nu-classification</sci:legalval>
										<sci:legalval>one-classification</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Epsilon" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Epsilon for SVM models.
 See R help for &apos;svm&apos; function for more details.</sci:help>
										<sci:value>0.1</sci:value>
									</sci:arg>
									<sci:arg name="Learner Nu" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Parameter needed for nu-classification, nu-regression, and one-classification. Sets the upper bound on the training error and the lower bound on the fraction of data points to become support vectors.</sci:help>
										<sci:value>0.01</sci:value>
									</sci:arg>
									<sci:arg name="Learner Kernel" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Kernel function to be used for mapping input space to feature space. The specific kernel functions k(x, x&apos;) are:
&lt;ul&gt;
&lt;li&gt; Linear: x&apos;x
&lt;li&gt; Polynomial: (Gamma * x&apos;x + Coef0)^Degree
&lt;li&gt; Radial: exp(-Gamma * |x&apos; - x|^2)
&lt;li&gt; Sigmoid: tanh(Gamma * x&apos;x + Coef0)
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Linear</sci:legalval>
										<sci:legalval>Polynomial</sci:legalval>
										<sci:legalval selected="true">Radial</sci:legalval>
										<sci:legalval>Sigmoid</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Degree" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Degree of polynomial when the Kernel parameter is set to Polynomial.</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Learner Coef0" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Constant term in kernels of Polynomial or Sigmoid type.</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Learner Seed" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Seed for random number generator</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Learner Multiselect Learn Options" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking.

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;
</sci:help>
										<sci:member>Learner Model Domain Fingerprint</sci:member>
										<sci:member>Learner Additional Properties</sci:member>
										<sci:member>Learner Numeric Distance Function</sci:member>
										<sci:member>Learner Fingerprint Distance Function</sci:member>
										<sci:legalval>Save Training Properties</sci:legalval>
										<sci:legalval>Track Property Ranges</sci:legalval>
										<sci:legalval>Perform OPS Analysis</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Multiselect Numeric Scaling</sci:member>
										<sci:legalval selected="true">Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
										<sci:legalval>Mahalanobis</sci:legalval>
										<sci:legalval>One Minus Correlation</sci:legalval>
										<sci:legalval>One Minus Squared Correlation</sci:legalval>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval>Tanimoto</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Multiselect Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
										<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
										<sci:legalval>Correct for Missing Values</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval selected="true">Tanimoto</sci:legalval>
										<sci:legalval>Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.
&lt;p&gt;
Select None if you do not wish to track fingerprint features.</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>FCFP_0</sci:legalval>
										<sci:legalval selected="true">FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval>FCFP_6</sci:legalval>
										<sci:legalval>ECFP_0</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Additional Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Learner Destination Folder</sci:member>
										<sci:member>Learner Convert Fingerprints To</sci:member>
									</sci:arg>
									<sci:arg name="Learner Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the format into which fingerprints are to be transformed in order to be compatible with the R data frame format.  Options are:
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed-Length Array of Bits: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or 1.  For each &quot;on&quot; bit B in the original fingerprint, the array element whose index is B modulo L is set to 1, where L is the fixed length.
&lt;li&gt;Fixed-Length Array of Counts: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or greater.  For each &quot;on&quot; bit B in the original fingerprint, the value of the array element whose index is B modulo L is incremented by 1.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Fixed Length</sci:member>
										<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
										<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fixed Length" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
										<sci:value>128</sci:value>
									</sci:arg>
									<sci:arg name="Learner Destination Folder" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
										<sci:value>$(Username)/LearnedProperties/R Models</sci:value>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Feb 10 13:46:58 2020</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>SVM_CV</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>LEARNNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{D48DD261-4D20-4180-BBD0-65E5375F70A9}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -455</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds, validates, and tunes a classification model or ensemble of models for a categorical response property</sci:value>
										<sci:value>The available methods are cross-validation (random k-fold, leave-one-out, or specified subsets), bootstrap sampling, and Y-scrambling. The validation models and a final all-data model are built using the learner specified by &lt;i&gt;Learner&lt;/i&gt;. You may optionally build an ensemble model using bootstrap aggregation. (To use a different learner, run &lt;a href=&quot;javascript:DoLink(&apos;{1FD83ABD-D6E8-4B1D-895B-BEEFB000B17E}&apos;)&quot;&gt;Create Validation Learner&lt;/a&gt; with the desired value of the &lt;i&gt;Learner&lt;/i&gt; parameter.) Tuning of the parameters under &lt;i&gt;Learner&lt;/i&gt; is done if you provide multiple values for any of these, except for those prefixed by &quot;Multiselect&quot;, which are designed to allow multiple simultaneous values.
&lt;p&gt;
To evaluate the model performance, the component performs validation as specified by &lt;i&gt;Validation Type&lt;/i&gt;.  It then builds a final model from all of the original data, using the learner parameter settings that give the largest average test ROC score. If &lt;i&gt;Validation Type&lt;/i&gt; is set to &quot;None&quot; or &quot;Y Scrambling&quot; then the parameter settings with the largest training data ROC score are used instead.
&lt;p&gt;
Output properties are as follows:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ParameterSetIndex&lt;/b&gt;: Unique index for a specific combination of learner parameter settings. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;li&gt;(Learner parameter values): One property whose name is the same as each learner parameter which varies (i.e., each parameter for which you provide more than one value).
&lt;li&gt;&lt;b&gt;ReferenceClass&lt;/b&gt;: (Binary models or models with &lt;i&gt;ROC Score Type&lt;/i&gt; set to &quot;Preferred Only&quot;) Name of the &quot;preferred class&quot; for the purpose of computing ROC scores and confusion matrices. Samples in the class are considered &quot;positive&quot;; samples not in the class are considered &quot;negative&quot;.
&lt;li&gt;&lt;b&gt;ConfusionTraining&lt;/b&gt;: Confusion matrix for the training data, using a model built from the original, unmodified data set. This is provided  for models that make class predictions, as opposed to those that only output a score that can be used for ranking. The model score cutoff to distinguish between classes is the default used by the model; no attempt is made to optimize the cutoff.
&lt;li&gt;&lt;b&gt;ConfusionTest&lt;/b&gt;: Confusion matrix for the test data, using results accumulated from all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;Classes&lt;/b&gt;: (Multi-class models with &lt;i&gt;ROC Score Type&lt;/i&gt; not set to &quot;Preferred Only&quot;) Semicolon-delimited list of names of all classes.
&lt;li&gt;&lt;b&gt;PartialROCTraining&lt;/b&gt;: (Multi-class models) Using a model built from the original, unmodified data set and applied to the same data, a  matrix of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types. For each element of the matrix, the score for &quot;Class1&quot; (the row) is used to distinguish between it and all other classes (one-versus-rest) or between it and &quot;Class2&quot; (one-versus-one).
&lt;li&gt;&lt;b&gt;ROCTraining&lt;/b&gt;: The overall ROC score for the training data, using a model built from the original, unmodified data set. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;Iteration&lt;/b&gt;: Array of iteration numbers for validation methods involving random selection, repeated multiple times. (Only present when more than one iteration is performed.)
&lt;li&gt;&lt;b&gt;PartialROCTest&lt;/b&gt;: (Multi-class models) For the test data from each iteration, a  semicolon-delimited list of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types.
&lt;li&gt;&lt;b&gt;ROCTest&lt;/b&gt;: The overall ROC score for the test data for each iteration. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;MeanPartialROCTest&lt;/b&gt;: (Multi-class models) Matrix containing the means of the PartialROCTest scores over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;MeanROCTest&lt;/b&gt;: Mean of the ROCTest score over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;KappaTest&lt;/b&gt;: Kappa value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SensitivityTest&lt;/b&gt;: Sensitivity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SpecificityTest&lt;/b&gt;: Specificity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;BestParamSet&lt;/b&gt;: A Boolean property whose value is True for the &quot;best&quot; set of parameter values (as determined by the appropriate ROC score value), or false otherwise. This property is omitted if there is only one set of parameter values. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The number of validation models and thus the time it takes to run the analysis can vary greatly depending on the analysis method, the number of iterations, and the number of distinct parameter settings. E.g., for a data set containing 200 samples, leave-one-out cross-validation with 4 distinct sets of learner parameter values takes roughly 80 times the amount of time required for 10 iterations of bootstrap validation with a single set of parameter values, which in turn takes roughly 10 times the amount of time required to build a single model from all the data.
&lt;li&gt;The following learner components have some level of cross-validation (CV) and/or parameter tuning built in:
&lt;ul&gt;
&lt;li&gt;Learn Good from Bad
&lt;li&gt;Learn Good Molecules
&lt;li&gt;Learn Cross-validated RP Tree Model
&lt;li&gt;Learn R Linear Discriminant Analysis Model
&lt;li&gt;Learn R Logistic Regression Model
&lt;li&gt;Learn R Neural Net Model
&lt;li&gt;Learn R Support Vector Machine Model
&lt;li&gt;Learn R XGBoost Model
&lt;/ul&gt;
The built-in validation in these learners is generally faster than what is provided here, though it is not as flexible in that only a single iteration of k-fold or leave-one-out CV is supported, and only some parameters can be tuned.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To display ROC plots for test data and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2208</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>rache</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Protocols\Clinic1920\Learners\SVM_CV</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@learnername EQ &apos;SVM&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -635</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@learnername EQ &apos;LogReg&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FILTERNODE</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -815</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="LogReg_CV" version="2">
									<sci:arg name="LearnedPropertyName" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAK7AE5hbWUgb2YgdGhlIG1vZGVsIGNvbXBvbmVudCB0aGF0IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgTGVhcm5lZFByb3BlcnRpZXMgZm9sZGVyIG9uIHlvdXIgdXNlciB0YWIuICBUaGlzIGlzIGFsc28gdGhlIGJhc2UgbmFtZSBvZiB0aGUgcHJvcGVydGllcyB0aGF0IGNhbiBiZSBjYWxjdWxhdGVkIGJ5IHRoYXQgY29tcG9uZW50LixTdHJpbmdUeXBlAAwAAAABAQABAAQA/AAAAAAAAAAAAAEUTGVhcm5lZFByb3BlcnR5TmFtZQPMU8+7LEBtb2RlbG5hbWUA</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
										<sci:value>modelname</sci:value>
									</sci:arg>
									<sci:arg name="Name" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
										<sci:help>Name of the dependent (Y) property to be learned</sci:help>
										<sci:member>Preferred Value</sci:member>
										<sci:member>ROC Score Type</sci:member>
										<sci:member>Optimize Cutoff</sci:member>
										<sci:value>Dev</sci:value>
									</sci:arg>
									<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>In the binary Bayesian case (in which &lt;i&gt;Learner&lt;/i&gt; is &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;), specifies the &quot;good&quot; class. In the multi-class case (in which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies the &quot;positive&quot; class for the purpose of calculating ROC scores, false negatives, false positives, and so on.
&lt;p&gt;
If blank, the preferred class is taken to be the first in alphabetical order.</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ROC Score Type" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>For the multi-class case only (for which the &lt;i&gt;Name&lt;/i&gt; property has more than two distinct values), specifies how the ROC area-under-the-curve (AUC) scores are to be computed. Options are:
&lt;ul&gt;
&lt;li&gt;Preferred Only: Computes only the ROC score for the &lt;i&gt;Preferred Value&lt;/i&gt; versus not-&lt;i&gt;Preferred Value&lt;/i&gt; distinction, using the model output score for the &lt;i&gt;Preferred Value&lt;/i&gt; class.
&lt;li&gt;One-versus-Rest: For each class (each distinct value of the &lt;i&gt;Name&lt;/i&gt; property), computes a ROC score for the in-class verus not-in-class distinction, using the model output score for that class. The reported ROC score is the mean of all such partial ROC scores.
&lt;li&gt;One-versus-One: For each pair of classes, A and B, data not belonging to either class are excluded. Then two partial ROC scores are computed for the A-versus-B distinction: one using the model output score for class A, the other using the model output score for class B. The reported ROC score is the mean of all such partial ROC scores. This is the most computationally expensive option.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For a description of the &quot;one-versus-one&quot; method of computing ROC scores for multi-class problems see: D.J. Hand and R.J. Till, &quot;A Simple Generalization of the Area Under the ROC Curve for Multiple Class Classification Problems,&quot; &lt;i&gt;Machine Learning&lt;/i&gt;, &lt;b&gt;45&lt;/b&gt;, 171 (2001). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.springerlink.com/content/nn141j42838n7u21/fulltext.pdf&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;
</sci:help>
										<sci:legalval selected="true">Preferred Only</sci:legalval>
										<sci:legalval>One-versus-Rest</sci:legalval>
										<sci:legalval>One-versus-One</sci:legalval>
									</sci:arg>
									<sci:arg name="Optimize Cutoff" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For those model types that support override of the default cutoff score used to divide classes, specifies that the learner will optimize this value based on the validation model predictions (e.g., the cross-validated predictions). Cutoff optimization is supported for the Cross-validation and Bootstrap validation types only.</sci:help>
										<sci:enabledscript>setdisableddetails(&apos;Cutoff optimization not supported for learner &quot;&apos; . Parameter(&apos;Learner&apos;) . &apos;&quot;&apos;);
#cutoffLearners := tolower(&apos;Learn Good From Bad,Learn Good Molecules,Learn RP Tree Model,Learn RP Forest Model,Learn R Linear Discriminant Analysis Model,Learn R Forest Model,Learn R Neural Net Model,Learn R Deep Neural Net Model,Learn R Support Vector Machine Model,Learn R XGBoost Model,Learn R Logistic Regression Model&apos;);

expand(&apos;,&apos;, #cutoffLearners);
#learner := tolower(Parameter(&apos;Learner&apos;));

contains(#cutoffLearners, #learner);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;PredefinedSet: Uses the properties specified by &lt;i&gt;PredefinedSet&lt;/i&gt;.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Input string properties with any of the following values (independent of case) are treated as Boolean: &quot;True&quot;, &quot;False&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. If you wish such properties to be treated as strings instead, you should modify the values with a prefix or suffix. E.g., change &quot;T&quot; to &quot;T.&quot; or &quot;TT&quot;.
&lt;li&gt;For any array property used in model building, each array member is treated as a separate variable.
&lt;/ul&gt;</sci:help>
										<sci:member>PredefinedSet</sci:member>
										<sci:member>UserSet</sci:member>
										<sci:member>IgnoreProperties</sci:member>
										<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
										<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
										<sci:legalval>PredefinedSet</sci:legalval>
										<sci:legalval>UserSet</sci:legalval>
									</sci:arg>
									<sci:arg name="PredefinedSet" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>A list of molecular properties to use in building the model when &lt;i&gt;UseProperties&lt;/i&gt; is set to PredefinedSet</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to PredefinedSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;PredefinedSet&apos;</sci:enabledscript>
										<sci:legalval selected="true">ALogP</sci:legalval>
										<sci:legalval selected="true">Molecular_Weight</sci:legalval>
										<sci:legalval selected="true">Num_H_Donors</sci:legalval>
										<sci:legalval selected="true">Num_H_Acceptors</sci:legalval>
										<sci:legalval selected="true">Num_RotatableBonds</sci:legalval>
										<sci:legalval>Num_Atoms</sci:legalval>
										<sci:legalval>Num_Rings</sci:legalval>
										<sci:legalval>Num_AromaticRings</sci:legalval>
										<sci:legalval>Num_Fragments</sci:legalval>
										<sci:legalval>NPlusO_Count</sci:legalval>
										<sci:legalval>Molecular_Solubility</sci:legalval>
										<sci:legalval>Molecular_SurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSurfaceArea</sci:legalval>
										<sci:legalval>Molecular_PolarSASA</sci:legalval>
										<sci:legalval>AlogP_Count</sci:legalval>
										<sci:legalval>FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval selected="true">FCFP_6</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
										<sci:legalval>Estate_Keys</sci:legalval>
										<sci:legalval>Estate_Counts</sci:legalval>
										<sci:legalval>MDLPublicKeys</sci:legalval>
									</sci:arg>
									<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
									</sci:arg>
									<sci:arg name="Model Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies whether the &lt;i&gt;Learner&lt;/i&gt; is configured to create a Regression model of a numeric Y property, or a Classification model of a categorical Y property.</sci:help>
										<sci:legalval selected="true">Classification</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner" type="StringType" required="true" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Name of learner to be used to build validated models. See the help for the corresponding component for more information on the learner. See also the help for the parameters inside this one.
</sci:help>
										<sci:member>Learner ResponseType</sci:member>
										<sci:member>Learner NumTrialsProperty</sci:member>
										<sci:member>Learner (Group) Formula Options</sci:member>
										<sci:member>Learner Multiselect Learn Options</sci:member>
										<sci:member>Learner (Group) Additional Options</sci:member>
										<sci:legalval selected="true">Learn R Logistic Regression Model</sci:legalval>
									</sci:arg>
									<sci:arg name="Output Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the format of the data records sent out the Pass port after the model is built. Options are:
&lt;ul&gt;
&lt;li&gt;Raw: all data are output as properties in raw form. Plot and importance data are output as contracted semicolon-delimited arrays. For plotting and further analysis, you may need to unmerge data records and expand these arrays.
&lt;li&gt;Report: A Reporting object summarizing the results is output. The format is an HTML tabbed report. This can be displayed directly in the &lt;a href=&quot;javascript:DoLink(&apos;{0952D9DF-F95C-4D43-826F-C70450811DD8}&apos;)&quot;&gt;HTML Report Viewer&lt;/a&gt; or can be embedded within another report.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Raw</sci:legalval>
										<sci:legalval>Report</sci:legalval>
									</sci:arg>
									<sci:arg name="Validation Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
										<sci:help>Specifies the type of model validation to perform. Options are:
&lt;ul&gt;
&lt;li&gt;None: No validation is done. This option is useful if you wish to perform parameter tuning using the root-mean-square (RMS) error for the training data as the basis for selecting the best among different combinations of learner parameter settings. Note that this approach provides no protection against overfitting. Only one iteration is done for this case. (The value of &lt;i&gt;Iterations&lt;/i&gt; is ignored.)
&lt;li&gt;Bootstrap: For each iteration, a bootstrap sample is drawn from the original data; a model is fitted to the sample; and predictions are made for the data records excluded from the sample. A bootstrap sample from N input data records consists of N records randomly selected &quot;with replacement,&quot; meaning that duplicates are allowed. On average, about 63% of the records are included in the sample at least once, and 37% are excluded.
&lt;li&gt;Cross-Validation: The input data records are divided into some number of subsets. For each subset, a model is build from all other data records, and predictions are made for that subset. This process is repeated until all subsets are covered. See &lt;i&gt;Cross-Validation Type&lt;/i&gt; for the different types of cross-validation that you can perform.
&lt;li&gt;Y Scrambling: For each iteration, the set of Y (independent property) values for the input data set is randomly reordered and a model is built from this artificial data set. By contrast to the other validation methods, small Qsquared (relative to Rsquared) and large ValidationRMSE (relative to RMSE) values are &quot;good&quot; in this case, because they indicate that the model of the unscrambled data is not simply fitting noise in the data (i.e., overfitting).</sci:help>
										<sci:member>Iterations</sci:member>
										<sci:member>Estimate Variable Importance</sci:member>
										<sci:member>Cross-Validation Type</sci:member>
										<sci:member>Random Seed</sci:member>
										<sci:member>Output Plot Data</sci:member>
										<sci:member>Scratch Folder</sci:member>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>Bootstrap</sci:legalval>
										<sci:legalval selected="true">Cross-Validation</sci:legalval>
										<sci:legalval>Y Scrambling</sci:legalval>
									</sci:arg>
									<sci:arg name="Iterations" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of times to repeat the validation scheme. Multiple iterations make sense only for those validation schemes that contain an element of randomness&amp;mdash;specifically k-fold cross validation, bootstrapping, and Y-scrambling. For other validation schemes (e.g., leave-one-out cross-validation), only one iteration is performed irrespective of the value specified here, because the results would be the same each time.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to a value other than None.&apos;);
parameter(&apos;Validation Type&apos;) ne &apos;None&apos;</sci:enabledscript>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Estimate Variable Importance" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to compute the importance of variables using a permutation approach. (Variables are not necessarily the same as descriptors. E.g., in this context, fingerprints are descriptors, but fingerprint features are variables.)
&lt;p&gt;
The importance is estimated by the following procedure:
&lt;ol&gt;
&lt;li&gt;A model is built as usual using the cross-validation or bootstrap sample, or if &lt;i&gt;Validation Method&lt;/i&gt; is &quot;None&quot;, using all training data. (Importance estimation does not apply for the &quot;Y Scrambling&quot; method.)
&lt;li&gt;Predictions are made for the left-out data (cross-validation and bootstrap options) or the training data (&quot;None&quot; option).
&lt;li&gt;For each variable in turn, all values of that variable are randomly permuted and predictions are made from the data with the permuted values.
&lt;li&gt;The root-mean-square (RMS) difference in the predicted response and the difference in the RMS error relative to the unpermuted data are computed.
&lt;li&gt;The larger these differences are, the greater the presumed importance of the variable. 
&lt;/ol&gt;
&lt;p&gt;
Outputs from an importance calculation are as follows.
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Variable Name&lt;/b&gt;: Name of variable.
&lt;li&gt;&lt;b&gt;Variable SMILES&lt;/b&gt;: (only for molecular fingerprint data) SMILES string representing the structural feature corresponding to a variable representing a molecular fingerprint bit.
&lt;li&gt;&lt;b&gt;Variable Importance (ROC AUC Change)&lt;/b&gt;: Variable importance calculated as the change in the ROC AUC score from when the variable values are randomly permuted. (Note that this value can be negative, indicating that permuting the values actually improved the ROC score. The magnitude of the value in such a case should be small, indicating an unimportant variable. Large negative values might indicate overfitting.)
&lt;/ul&gt;
The above values are output as contracted arrays (with &quot;;&quot; as the delimiter) for each iteration of validation. The arrays should be expanded and unmerged in order to sort or plot the values. You can also use &lt;a href=&quot;javascript:DoLink(&apos;{AC8262DA-E648-4D24-9CD1-D731A8F53F9D}&apos;)&quot;&gt;Molecule from SMILES&lt;/a&gt; to convert the &lt;b&gt;Variable SMILES&lt;/b&gt; property to a molecular structure.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For scalar properties, a variable is the same as a descriptor.
&lt;li&gt;For array properties, each element of the array is treated as a separate variable.
&lt;li&gt;For fingerprint properties, each distinct fingerprint feature is treated as a separate variable. The value of &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; specifies the minimum number of data records on which a feature must be present in order for its importance to be estimated. 
&lt;li&gt;Permutation importance measures have been extensively studied for forest models, but less so for other model types. In data sets containing variables of different types (e.g., categorical and continuous), the measures may be biased. Also, for forest models, the importance tends to be overestimated for variables that are correlated with other variables in the data. For details, see the following: C. Strobl et al., &quot;Bias in random forest variable importance measures: Illustrations, sources and a solution&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2007, &lt;b&gt;8&lt;/b&gt;:25 (doi:10.1186/1471-2105-8-25), and C. Strobl et al., &quot;Conditional variable importance for random forests&quot;, &lt;i&gt;BMC Bioinformatics&lt;/i&gt; 2008, &lt;b&gt;9&lt;/b&gt;:307 (doi:10.1186/1471-2105-9-307).
&lt;/ul&gt;</sci:help>
										<sci:member>Min Fingerprint Feature Count</sci:member>
										<sci:member>Whole Descriptor Importance</sci:member>
										<sci:enabledscript>parameter(&apos;Validation Type&apos;) ne &apos;Y Scrambling&apos;</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Min Fingerprint Feature Count" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a fingerprint property, specifies the minimum number of times a feature (bit) must be present in the input data for the importance to be calculated for that feature. Very rare features are unlikely to have a high importance ranking, and ignoring them in the importance calculation can decrease the calculation time.
&lt;p&gt;
The same is true for extremely common features. Thus, any feature present in &lt;b&gt;more&lt;/b&gt; than N - &lt;i&gt;Min Fingerprint Feature Count&lt;/i&gt; data records is also ignored, where N is the total number of input data records.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">sqrt(N)</sci:legalval>
										<sci:legalval>1</sci:legalval>
										<sci:legalval>2</sci:legalval>
										<sci:legalval>4</sci:legalval>
										<sci:legalval>8</sci:legalval>
										<sci:legalval>16</sci:legalval>
										<sci:legalval>32</sci:legalval>
										<sci:legalval>64</sci:legalval>
										<sci:legalval>128</sci:legalval>
										<sci:legalval>256</sci:legalval>
									</sci:arg>
									<sci:arg name="Whole Descriptor Importance" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>For array and fingerprint properties, specifies whether to calculate the importance of the descriptor as a whole, in addition to the importance for the individual elements or features of the descriptor.</sci:help>
										<sci:enabledscript>parameter(&apos;Estimate Variable Importance&apos;)</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Cross-Validation Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Indicates the method of dividing the original data into subsets for cross-validation. Options are:
&lt;ul&gt;
&lt;li&gt;Random: Performs k-fold cross-validation in which each data record is randomly assigned to one of k subsets of equal size (plus or minus one record), with the value of k given by &lt;i&gt;Number of Folds&lt;/i&gt;.
&lt;li&gt;Stratified Random: Like Random except that each distinct class of data records is divided into k folds which are then combined into k overall folds.
&lt;li&gt;Random Subset: Creates a random subset containing a fraction &lt;i&gt;Training Fraction&lt;/i&gt; of the input data, builds a model from these data, and applies the model to the remaining data.
&lt;li&gt;Leave-One-Out: Each data record is assigned to its own subset. Equivalent to N-fold cross-validation, where N is the number of data records. &lt;b&gt;Note that for a large input data set, this option is extremely slow.&lt;/b&gt; Because there is only one way to divide N data records into N subsets, only 1 iteration is performed for this option.
&lt;li&gt;Preselected: The value of the property named by &lt;i&gt;Subset Property&lt;/i&gt; identifies the subset to which each data record belongs. This option is useful if you wish to use a method such as clustering for dividing the data into subsets.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Property</sci:member>
										<sci:member>Number of Folds</sci:member>
										<sci:member>Training Fraction</sci:member>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Validation Type to Cross-Validation.&apos;);
parameter(&apos;Validation Type&apos;) eq &apos;Cross-Validation&apos;</sci:enabledscript>
										<sci:legalval>Random</sci:legalval>
										<sci:legalval selected="true">Stratified Random</sci:legalval>
										<sci:legalval>Random Subset</sci:legalval>
										<sci:legalval>Leave-One-Out</sci:legalval>
										<sci:legalval>Preselected</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Property" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Preselected, specifies the name of the property whose value indicates the subset to which each data record belongs.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Preselected.&apos;);
Parameter(&apos;Cross-Validation Type&apos;) eq &apos;Preselected&apos;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Number of Folds" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>For a &lt;i&gt;Cross-Validation Type&lt;/i&gt; of Random, indicates the number of equal-sized subsets into which the data set is to be divided for cross-validation.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&apos;To enable, set Cross-Validation Type to Random or Stratified Random.&apos;);
parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random&apos; or parameter(&apos;Cross-Validation Type&apos;) eq &apos;Stratified Random&apos;</sci:enabledscript>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Training Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Fraction of data to put into the training set for the Random Subset &lt;i&gt;Cross-Validation Type&lt;/i&gt;.</sci:help>
										<sci:enabledscript>parameter(&apos;Cross-Validation Type&apos;) eq &apos;Random Subset&apos;</sci:enabledscript>
										<sci:value>0.7</sci:value>
									</sci:arg>
									<sci:arg name="Random Seed" type="LongType" required="false" visibility="visible" multi="false">
										<sci:help>Seed value for random number generator used in resampling and other calculations</sci:help>
										<sci:value>12345</sci:value>
									</sci:arg>
									<sci:arg name="Output Plot Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
										<sci:help>For binary classification only, specifies whether to output data that can be used to generate ROC plots. If True, then the following two additional properties are added to the output data record for each parameter set:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FPRateTest:&lt;/b&gt; Values representing the false positive rate for each point on the ROC plot for a given validation iteration. (ROC plot X axis.)
&lt;li&gt;&lt;b&gt;TPRateTest:&lt;/b&gt; Values representing the true positive rate for each point on the ROC plot for a given validation iteration. (ROC plot Y axis.)
&lt;/ul&gt;
These properties contain arrays of semicolon-separated values. There is one array element for each validation iteration. Each array element can be expanded into its own array for plotting by using the PilotScript expand() function.</sci:help>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Scratch Folder" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Location of XMLDB folder into which temporary models and learners will be written</sci:help>
										<sci:value>$(UserName)/TempModels</sci:value>
									</sci:arg>
									<sci:arg name="Build Extended Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether, in addition to the final model built with untagged data, you wish to build an &quot;extended&quot; model using both untagged and tagged data. For model testing purposes, you may wish to initially hold out a portion of all available data, but to include this portion when building the model you use for making predictions. If &lt;i&gt;Build Extended Model&lt;/i&gt; is true, two final models are produced: one with the name specified by &lt;i&gt;LearnedPropertyName&lt;/i&gt;, the other with the suffix &quot;Ext&quot; appended to the name.
&lt;p&gt;
Use &lt;i&gt;Test for Extra Data&lt;/i&gt; to specify a PilotScript expression that evaluates to False for data records to be included in both models, and True for data records to be included only in the extended model.</sci:help>
										<sci:member>Test for Extra Data</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Test for Extra Data" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>PilotScript expression which evaluates to False for training data records to be used in the model evaluation statistics and to build the model named by &lt;i&gt;LearnedPropertyName&lt;/i&gt;. The expression should evaluate to True for &quot;extra&quot; data records to be included in an additional model of the same name but with the suffix &quot;Ext&quot;.</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Extended Model&apos;) = True</sci:enabledscript>
										<sci:value>isExtra is defined</sci:value>
									</sci:arg>
									<sci:arg name="Build Ensemble Model" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specified whether to build a &quot;bagged&quot; (bootstrap-aggregated) ensemble model as the final model after any parameter optimization.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Ensemble models are not supported for &lt;a href=&quot;javascript:DoLink(&apos;{4B37A4B3-BAEF-4000-96D0-031FF49A87C7}&apos;)&quot;&gt;Learn R Logistic Regression Model&lt;/a&gt; because logistic regression models do not output a class prediction, but only a score.
&lt;/ul&gt;</sci:help>
										<sci:member>Ensemble Size</sci:member>
										<sci:member>Sampling Method</sci:member>
										<sci:member>Resample Descriptors</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Ensemble Size" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Number of sub-models in ensemble</sci:help>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:value>10</sci:value>
									</sci:arg>
									<sci:arg name="Sampling Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Specifies the resampling method to use in order to generate data for the sub-models of the ensemble from the original training data. Options are:
&lt;ul&gt;
&lt;li&gt;Bootstrap: For each sub-model, generates a random bootstrap sample of the same size as the input training set.
&lt;li&gt;Random Subsets: For each sub-model, generates a random subset containing a fraction of the training data specified by &lt;i&gt;Subset Fraction&lt;/i&gt;.
&lt;li&gt;Non-overlapping Subsets: Divides the input data into &lt;i&gt;Ensemble Size&lt;/i&gt; random disjoint subsets and builds a sub-model for each subset.
&lt;li&gt;None: Does not resample the data. Builds each sub-model from the entire training set. &lt;i&gt;Use this option only if the learner for the sub-models has a stochastic element or does its own resampling. Otherwise, each sub-model will be identical&lt;/i&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Subset Fraction</sci:member>
										<sci:enabledscript>Parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval selected="true">Bootstrap</sci:legalval>
										<sci:legalval>Random Subsets</sci:legalval>
										<sci:legalval>Non-overlapping Subsets</sci:legalval>
										<sci:legalval>None</sci:legalval>
									</sci:arg>
									<sci:arg name="Subset Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Sampling Method&lt;/i&gt; is &quot;Random Subsets&quot;, specifies the fraction of data to include in each subset. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>Parameter(&apos;Sampling Method&apos;) eq &apos;Random Subsets&apos;</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Resample Descriptors" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Specifies whether to resample the descriptors used to build the model so that each sub-model is given a different random subset of all of the descriptors. This increases the cross-model variance and may improve the predictive performance of the ensemble model or the performance of a quality model of the ensemble.</sci:help>
										<sci:member>Descriptor Fraction</sci:member>
										<sci:enabledscript>parameter(&apos;Build Ensemble Model&apos;)</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Descriptor Fraction" type="DoubleType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>If &lt;i&gt;Resample Descriptors&lt;/i&gt; is True, specifies the fraction of descriptors to include for each sub-model. Must be between 0 and 1.</sci:help>
										<sci:enabledscript>parameter(&apos;Resample Descriptors&apos;)</sci:enabledscript>
										<sci:value>0.5</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options</sci:value>
												<sci:value>Use Parallel Processing</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
If set to True, each iteration of modeling building out of &lt;i&gt;Number of Iterations&lt;/i&gt; is run in a separate parallel process, or if the number of learner parameter combinations exceeds the number of iterations, each parameter combination is run in a separate process. In addition, if &lt;i&gt;Build Ensemble Model&lt;/i&gt; is True, each sub-model of the ensemble is built in a separate process. Running in parallel can decrease the calculation time on multi-core, cluster, or grid servers.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Limitations:&lt;/b&gt; Paths to job and user folders on the primary compute node must be visible from all other compute nodes, and all compute nodes must share a single component database (XMLDB).
&lt;/p&gt;
&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances.  As a rough guide, performance can be improved when each individual model building task requires at least 10 seconds to execute.
&lt;/p&gt;
&lt;p&gt;
Note that it is an internal subprotocol in which the models are built rather than this component that actually runs in parallel.
&lt;/p&gt;
&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Use Parallel Processing Server</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server</sci:value>
												<sci:value>Use Parallel Processing Server</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Use Parallel Processing Server Processes</sci:member>
										<sci:member>Use Parallel Processing Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>localhost</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Processes</sci:value>
												<sci:value>Use Parallel Processing Server Processes</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Use Parallel Processing Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Use Parallel Processing&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:value>*</sci:value>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Use Parallel Processing Server Run On Grid Queue Name</sci:member>
										<sci:member>Use Parallel Processing Server Run on Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing&apos;);</sci:enabledscript>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Queue Name</sci:value>
												<sci:value>Use Parallel Processing Server Run On Grid Queue Name</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Use Parallel Processing Server Run on Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Parallel Processing Options Server Run On Grid Grid Options</sci:value>
											</sci:mpropval>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
										</sci:metaproplist>
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Use Parallel Processing Server Run On Grid&apos;)</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
										<sci:value>Cache0,DesignFile,results,finalresults,PredictionCache,ensembleStatsCache,SubsetKeys</sci:value>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
										<sci:value>n,ntot,Bayesian,NumClasses,PartialROCs,PartialROCsTraining,AllClasses,PreferredClass,Impute,Binary,PreferredScoreSuffix,ScoreSuffixes,OutputOptions,PointInfoText,VarNames,VarValues,FixedNames,FixedValues,NumFFDesignPts,PPparamSettingIndex,XVSetIDNUm,bestIndex,ConfusionTraining,ConfusionTest,oobIndices,WhenFinishedFinal,BuildDAModelFinal,ValJobID,LearnerPath,DataCache,ExtDataCache,GotExtraData,gotResults,EnsembleFolder,AllDataCache,IsNative,ADModelGUID,BaggedModelGUIDs,BaggedModelIDs,outputLegalVals,ensembleModelName,MulticatBayesian,LPropName,LPropNameExt,ModelPath,DestFolder,PreferredScorePropertyAD,ScorePropertiesAD,binaryROC,ROCScoreIB,ConfusionMatrixIBtable,PartialROCIBtable,ROCScoreOOB,ConfusionMatrixOOBtable,PartialROCOOBtable,NativeLearner,AllDescriptors,ScalarDescriptors,ArrayDescriptors,ArrayDescriptorLengths,FingerprintDescriptors,FoldedFingerprintLength,FingerprintBitHash,ComputeDecisionValues,ComputeProbabilities,ParallelIterations,ParallelDesignPoints,OptimizeCutoff,MeanBestCutoff,Cutoffs,CutoffCounts,NumVariables,ImportanceVarNames,FPImportanceHash,ImportanceVarSMILES,FPisCount,ADModelParams,ADParamInfo,ADParamHelp,ADParamValues,ADParamLegalValues,BaggedModelParams,BaggedParamInfo,BaggedParamHelp,BaggedParamValues,BaggedParamLegalValues,NumTrueScalarDescriptors,CreateProxy,ADProxyGUID,BaggedProxyGUIDs,BaggedProxyIDs,FinalDestinationFolder,startTime,elapsedTime,ResponseType,Default Model Output Type,NumTrialsProperty,IncludeInteractionTerms,MaxInteractionOrder,RFormula,Numeric Distance Function,Fingerprint Distance Function,Model Domain Fingerprint,Additional Properties,Method,Convert Fingerprints To,Fixed Length,Destination Folder</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>When the network runs, processes once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner ResponseType" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>Specifies which of the following categories the response property specified by &lt;i&gt;Name&lt;/i&gt; belongs to. Options are:
&lt;ul&gt;
&lt;li&gt;Binary: property adopts either of only two values -- e.g., 0 for &quot;failure&quot; and 1 for &quot;success&quot;. (Any other pair of values such as &quot;Active&quot; and &quot;Inactive&quot; will work as well.)
&lt;li&gt;Successes: property specifies the number of &quot;successful&quot; outcomes for the given explanatory property values, and can adopt any integer value 0 or above.  This option requires that you specify a value for the NumTrialsProperty parameter.
&lt;li&gt;Proportion: property specifies the fraction of &quot;successful&quot; outcomes for the given explanatory property values, and can adopt any value between 0 and 1.  This option requires that you specify a value for the NumTrialsProperty parameter.
&lt;li&gt;Multiclass: property adopts one of 3 or more categorical values -- e.g., &quot;spam&quot;, &quot;business&quot;, &quot;personal&quot; (for email messages).
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Default Model Output Type</sci:member>
										<sci:legalval selected="true">Binary</sci:legalval>
										<sci:legalval>Successes</sci:legalval>
										<sci:legalval>Proportion</sci:legalval>
										<sci:legalval>Multiclass</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Default Model Output Type" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the default output type when making predictions with the model component created by this learner. You can change the output type from its default value by changing the value of the &lt;i&gt;Type of Output&lt;/i&gt; parameter on the model component. Options are:
&lt;ul&gt;
&lt;li&gt;Probability: For a model built with a &lt;i&gt;ResponseType&lt;/i&gt; value of Binary, outputs only the predicted probability of being in one of the classes (the second class in alphabetical order). If &lt;i&gt;ResponseType&lt;/i&gt; is Multiclass, outputs a separate probability value for each class. This option yields models whose behavior is consistt with logistic regression models built in older releases of Pipeline Pilot.
&lt;li&gt;Class and Probabilities: Outputs the predicted class name as well as a separate probability value for each class. This option yields models whose behavior is more consistent with other types of classification models in Pipeline Pilot.
&lt;/ul&gt;</sci:help>
										<sci:legalval>Probability</sci:legalval>
										<sci:legalval selected="true">Class and Probabilities</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner NumTrialsProperty" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Specifies the total number of trials used to determine the response value.  Required if &lt;i&gt;ResponseType&lt;/i&gt; is &quot;Successes&quot; or &quot;Proportion&quot;; ignored otherwise.</sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Formula Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
										<sci:help>Options pertaining to the formula defining the model</sci:help>
										<sci:member>Learner IncludeInteractionTerms</sci:member>
										<sci:member>Learner MaxInteractionOrder</sci:member>
										<sci:member>Learner RFormula</sci:member>
									</sci:arg>
									<sci:arg name="Learner IncludeInteractionTerms" type="BoolType" required="false" visibility="visible" multi="true">
										<sci:help>Indicates whether to include interaction terms between the explanatory (predictor) properties in the model formula. For example, if the explanatory properties are A, B, and C, and MaxInteractionOrder is 2, the formula used to fit the model when this flag is set to True will include the terms A, B, C, A*B, A*C, and B*C.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner MaxInteractionOrder" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The maximum order of interaction terms to include in the model when IncludeInteractionTerms is set to True.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Learner RFormula" type="ScriptType" required="false" visibility="visible" multi="false">
										<sci:help>Right-hand side of formula to be used in fitting the model, using the R syntax for specifying formulas.  Use this parameter if you wish to include specific interaction terms in your model while excluding others, or wish to include higher-order terms in the model.  Note that R is case-sensitive, so the names of properties in the function must match the case of the corresponding property names on the data stream.
&lt;p&gt;
Example: Suppose &quot;y&quot; is the response property, and &quot;a&quot; and &quot;b&quot; are explanatory properties.  If you wish to fit a full quadratic model, then use the following value for &lt;i&gt;RFormula&lt;/i&gt;:&lt;br&gt;
&lt;code&gt;a + b + a:b + I(a^2) + I(b^2)&lt;/code&gt;&lt;br&gt;
The R script generated by Pipeline Pilot will expand this to&lt;br&gt;
&lt;code&gt;y ~ a + b + a:b + I(a^2) + I(b^2)&lt;/code&gt;&lt;br&gt;
as the full formula for use in the model fitting.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;RFormula&lt;/i&gt; takes precedence over &lt;i&gt;IncludeInteractionTerms&lt;/i&gt;.
&lt;li&gt;If &lt;i&gt;RFormula&lt;/i&gt; is left blank, then the formula used in the fit is generated according to the properties specified by &lt;i&gt;UseProperties&lt;/i&gt; and the values of &lt;i&gt;IncludeInteractionTerms&lt;/i&gt; and &lt;i&gt;MaxInteractionOrder&lt;/i&gt;.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;p&gt;
For a full explanation of the R formula syntax, see the &lt;a href=&quot;javascript:DoLink(&apos;http://cran.r-project.org/doc/manuals/R-intro.html#Formulae-for-statistical-models&apos;)&quot;&gt;Introduction to R manual&lt;/a&gt;.
</sci:help>
									</sci:arg>
									<sci:arg name="Learner Multiselect Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
										<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking.

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you wish to also track structural features of the data, use &lt;i&gt;Model Domain Fingerprint&lt;/i&gt; to specify the molecular fingerprint to use for feature tracking. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;
</sci:help>
										<sci:member>Learner Model Domain Fingerprint</sci:member>
										<sci:member>Learner Additional Properties</sci:member>
										<sci:member>Learner Numeric Distance Function</sci:member>
										<sci:member>Learner Fingerprint Distance Function</sci:member>
										<sci:legalval>Save Training Properties</sci:legalval>
										<sci:legalval>Track Property Ranges</sci:legalval>
										<sci:legalval>Perform OPS Analysis</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="true">
										<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Multiselect Numeric Scaling</sci:member>
										<sci:legalval selected="true">Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
										<sci:legalval>Mahalanobis</sci:legalval>
										<sci:legalval>One Minus Correlation</sci:legalval>
										<sci:legalval>One Minus Squared Correlation</sci:legalval>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval>Tanimoto</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Multiselect Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
										<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
										<sci:legalval>Correct for Missing Values</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Cosine</sci:legalval>
										<sci:legalval>Dice</sci:legalval>
										<sci:legalval selected="true">Tanimoto</sci:legalval>
										<sci:legalval>Euclidean</sci:legalval>
										<sci:legalval>Manhattan</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.
&lt;p&gt;
Select None if you do not wish to track fingerprint features.</sci:help>
										<sci:legalval>None</sci:legalval>
										<sci:legalval>FCFP_0</sci:legalval>
										<sci:legalval selected="true">FCFP_2</sci:legalval>
										<sci:legalval>FCFP_4</sci:legalval>
										<sci:legalval>FCFP_6</sci:legalval>
										<sci:legalval>ECFP_0</sci:legalval>
										<sci:legalval>ECFP_2</sci:legalval>
										<sci:legalval>ECFP_4</sci:legalval>
										<sci:legalval>ECFP_6</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Additional Properties" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
									</sci:arg>
									<sci:arg name="Learner (Group) Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
										<sci:help>Contains less commonly used parameters</sci:help>
										<sci:member>Learner Method</sci:member>
										<sci:member>Learner Destination Folder</sci:member>
										<sci:member>Learner Convert Fingerprints To</sci:member>
									</sci:arg>
									<sci:arg name="Learner Method" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the name of the method in R to use to perform the logistic regression.  Options are:
&lt;ul&gt;
&lt;li&gt;glm: (Generalized linear model) Performs a logistic regression with no bias correction using the &quot;glm&quot; function. For the Multiclass case, the R &quot;multinom&quot; function is used.
&lt;li&gt;brglm: (Bias-reduced generalized linear model) Uses a method by Firth to perform logistic regression with reduced bias.  While brglm can give better results than glm in some cases, it is slower. Does not apply when &lt;i&gt;ResponseType&lt;/i&gt; is set to Multiclass.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;You must have R package &quot;brglm&quot; installed if &lt;i&gt;Method&lt;/i&gt; is set to &quot;brglm&quot;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;D. Firth, &quot;Bias reduction of maximum likelihood estimates,&quot; &lt;i&gt;Biometrika&lt;/i&gt;, &lt;b&gt;80&lt;/b&gt;, 27-38 (1993)
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">glm</sci:legalval>
										<sci:legalval>brglm</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Convert Fingerprints To" type="StringType" required="false" visibility="visible" multi="true">
										<sci:help>Specifies the format into which fingerprints are to be transformed in order to be compatible with the R data frame format.  Options are:
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed-Length Array of Bits: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or 1.  For each &quot;on&quot; bit B in the original fingerprint, the array element whose index is B modulo L is set to 1, where L is the fixed length.
&lt;li&gt;Fixed-Length Array of Counts: Fingerprints are &quot;folded&quot; to a smaller size given by &lt;i&gt;Fixed Length&lt;/i&gt;, with each member of the fixed length array equal to 0 or greater.  For each &quot;on&quot; bit B in the original fingerprint, the value of the array element whose index is B modulo L is incremented by 1.
&lt;/ul&gt;</sci:help>
										<sci:member>Learner Fixed Length</sci:member>
										<sci:legalval>Fixed-Length Array of Bits</sci:legalval>
										<sci:legalval selected="true">Fixed-Length Array of Counts</sci:legalval>
									</sci:arg>
									<sci:arg name="Learner Fixed Length" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>If Convert Fingerprints To is given a fixed-length type, then this is the fixed-length.  Bits larger than this length are folded into this range using a mod operation.</sci:help>
										<sci:value>256</sci:value>
									</sci:arg>
									<sci:arg name="Learner Destination Folder" type="StringType" required="true" visibility="visible" multi="false">
										<sci:help>Name of component database folder in which the learned model is to be saved.</sci:help>
										<sci:value>$(Username)/LearnedProperties/R Models</sci:value>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Fri Feb 28 17:09:14 2020</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>LogReg_CV</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>LEARNNODE</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{C8415C76-C7D7-4F2A-9C78-9D586CFC0447}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>1290 -815</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Builds, validates, and tunes a classification model or ensemble of models for a categorical response property</sci:value>
										<sci:value>The available methods are cross-validation (random k-fold, leave-one-out, or specified subsets), bootstrap sampling, and Y-scrambling. The validation models and a final all-data model are built using the learner specified by &lt;i&gt;Learner&lt;/i&gt;. You may optionally build an ensemble model using bootstrap aggregation. (To use a different learner, run &lt;a href=&quot;javascript:DoLink(&apos;{1FD83ABD-D6E8-4B1D-895B-BEEFB000B17E}&apos;)&quot;&gt;Create Validation Learner&lt;/a&gt; with the desired value of the &lt;i&gt;Learner&lt;/i&gt; parameter.) Tuning of the parameters under &lt;i&gt;Learner&lt;/i&gt; is done if you provide multiple values for any of these, except for those prefixed by &quot;Multiselect&quot;, which are designed to allow multiple simultaneous values.
&lt;p&gt;
To evaluate the model performance, the component performs validation as specified by &lt;i&gt;Validation Type&lt;/i&gt;.  It then builds a final model from all of the original data, using the learner parameter settings that give the largest average test ROC score. If &lt;i&gt;Validation Type&lt;/i&gt; is set to &quot;None&quot; or &quot;Y Scrambling&quot; then the parameter settings with the largest training data ROC score are used instead.
&lt;p&gt;
Output properties are as follows:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ParameterSetIndex&lt;/b&gt;: Unique index for a specific combination of learner parameter settings. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;li&gt;(Learner parameter values): One property whose name is the same as each learner parameter which varies (i.e., each parameter for which you provide more than one value).
&lt;li&gt;&lt;b&gt;ReferenceClass&lt;/b&gt;: (Binary models or models with &lt;i&gt;ROC Score Type&lt;/i&gt; set to &quot;Preferred Only&quot;) Name of the &quot;preferred class&quot; for the purpose of computing ROC scores and confusion matrices. Samples in the class are considered &quot;positive&quot;; samples not in the class are considered &quot;negative&quot;.
&lt;li&gt;&lt;b&gt;ConfusionTraining&lt;/b&gt;: Confusion matrix for the training data, using a model built from the original, unmodified data set. This is provided  for models that make class predictions, as opposed to those that only output a score that can be used for ranking. The model score cutoff to distinguish between classes is the default used by the model; no attempt is made to optimize the cutoff.
&lt;li&gt;&lt;b&gt;ConfusionTest&lt;/b&gt;: Confusion matrix for the test data, using results accumulated from all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;Classes&lt;/b&gt;: (Multi-class models with &lt;i&gt;ROC Score Type&lt;/i&gt; not set to &quot;Preferred Only&quot;) Semicolon-delimited list of names of all classes.
&lt;li&gt;&lt;b&gt;PartialROCTraining&lt;/b&gt;: (Multi-class models) Using a model built from the original, unmodified data set and applied to the same data, a  matrix of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types. For each element of the matrix, the score for &quot;Class1&quot; (the row) is used to distinguish between it and all other classes (one-versus-rest) or between it and &quot;Class2&quot; (one-versus-one).
&lt;li&gt;&lt;b&gt;ROCTraining&lt;/b&gt;: The overall ROC score for the training data, using a model built from the original, unmodified data set. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;Iteration&lt;/b&gt;: Array of iteration numbers for validation methods involving random selection, repeated multiple times. (Only present when more than one iteration is performed.)
&lt;li&gt;&lt;b&gt;PartialROCTest&lt;/b&gt;: (Multi-class models) For the test data from each iteration, a  semicolon-delimited list of partial ROC scores for the One-versus-Rest or One-versus-One ROC score types.
&lt;li&gt;&lt;b&gt;ROCTest&lt;/b&gt;: The overall ROC score for the test data for each iteration. If partial ROC scores are calculated, this is the mean of those scores.
&lt;li&gt;&lt;b&gt;MeanPartialROCTest&lt;/b&gt;: (Multi-class models) Matrix containing the means of the PartialROCTest scores over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;MeanROCTest&lt;/b&gt;: Mean of the ROCTest score over all iterations for the given value of ParameterSetIndex.
&lt;li&gt;&lt;b&gt;KappaTest&lt;/b&gt;: Kappa value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SensitivityTest&lt;/b&gt;: Sensitivity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;SpecificityTest&lt;/b&gt;: Specificity value for each iteration (for models that make class predictions).
&lt;li&gt;&lt;b&gt;BestParamSet&lt;/b&gt;: A Boolean property whose value is True for the &quot;best&quot; set of parameter values (as determined by the appropriate ROC score value), or false otherwise. This property is omitted if there is only one set of parameter values. (Only present when more than one value is specified for at least one parameter under &lt;i&gt;Learner&lt;/i&gt;.)
&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The number of validation models and thus the time it takes to run the analysis can vary greatly depending on the analysis method, the number of iterations, and the number of distinct parameter settings. E.g., for a data set containing 200 samples, leave-one-out cross-validation with 4 distinct sets of learner parameter values takes roughly 80 times the amount of time required for 10 iterations of bootstrap validation with a single set of parameter values, which in turn takes roughly 10 times the amount of time required to build a single model from all the data.
&lt;li&gt;The following learner components have some level of cross-validation (CV) and/or parameter tuning built in:
&lt;ul&gt;
&lt;li&gt;Learn Good from Bad
&lt;li&gt;Learn Good Molecules
&lt;li&gt;Learn Cross-validated RP Tree Model
&lt;li&gt;Learn R Linear Discriminant Analysis Model
&lt;li&gt;Learn R Logistic Regression Model
&lt;li&gt;Learn R Neural Net Model
&lt;li&gt;Learn R Support Vector Machine Model
&lt;li&gt;Learn R XGBoost Model
&lt;/ul&gt;
The built-in validation in these learners is generally faster than what is provided here, though it is not as flexible in that only a single iteration of k-fold or leave-one-out CV is supported, and only some parameters can be tuned.
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To display ROC plots for test data and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>20.1.0.2208</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Processing Order</sci:help>
										<sci:value>DrainTopDown</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>clinic1920</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Protocols\Clinic1920\Learners\LogReg_CV</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:connectid from="1" to="11" type="true"/>
							<sci:connectid from="1" to="4" type="false"/>
							<sci:connectid from="4" to="0" type="true"/>
							<sci:connectid from="4" to="5" type="false"/>
							<sci:connectid from="5" to="3" type="true"/>
							<sci:connectid from="5" to="6" type="false"/>
							<sci:connectid from="6" to="7" type="true"/>
						</sci:protocol>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>FPRateTest</sci:value>
								<sci:value>TPRateTest</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -2436</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>162</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>#TN := ConfusionTest[3][3];
#FP := ConfusionTest[3][2];
#FN:= ConfusionTest[2][3];
#TP := ConfusionTest[2][2];
Precision := #TP/(#TP+#FP);
Recall := #TP/(#TP+#FN);
Specificity := #TN/(#TN+#FP);
Accuracy := (#TP + #TN)/(#TP+#TN+#FP+#FN);
F1 := (2*#TP)/(2*#TP + #FP + #FN);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -2436</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>182</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAI+A1RoZSBsb2NhdGlvbiB0byB3aGljaCB0byB3cml0ZSB0aGUgZGF0YS4gQ2FuIGJlIGEgZmlsZSwgYSBuZXR3b3JrIHJlc291cmNlLCBhIGdsb2JhbCBwcm9wZXJ0eSwgb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eS4KPHVsPgo8dWw+CjxsaT5Gb3IgYSBmaWxlLCBlbnRlciBhIHBhdGguPC9saT4KPGxpPkZvciBhIG5ldHdvcmsgcmVzb3VyY2UsIGVudGVyIGEgbmV0d29yayBVUkwgaW4gdGhlIGZvcm0gPGI+cHJvdG9jb2w6Ly9zZXJ2ZXI6cG9ydC8uLi48L2I+LiAoSWYgcG9ydCBpcyBvbWl0dGVkLCBhIGRlZmF1bHQgaXMgdXNlZC4pIFByb3RvY29scyBzdXBwb3J0ZWQgYXJlOgoJPHVsPgoJPGxpPmh0dHAsIGh0dHBzPC9saT4KCTxsaT5mdHA8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPGxpPkZvciBhIGdsb2JhbCBwcm9wZXJ0eSwgZW50ZXIgImdsb2JhbDovL3Byb3BlcnR5LW5hbWUiLjwvbGk+CjxsaT5Gb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eSwgZW50ZXIgInByb3BlcnR5Oi8vcHJvcGVydHktbmFtZSIgYW5kIGFkZCBhbiBvdXRwdXQgcG9ydC48L2xpPgo8L3VsPgo8cD4KPGI+Tm90ZTo8L2I+CjwvcD4KPHVsPgo8bGk+V2hlbiB0aGUgZGVzdGluYXRpb24gaXMgYSBmaWxlIG9yIG5ldHdvcmsgcmVzb3VyY2UsIGJlIHN1cmUgdG8gc3BlY2lmeSBhbiBleHRlbnNpb24gc3VjaCBhcyAudHh0IG9yIC54bHMuIFRvIHNhdmUgaW4gY29tcHJlc3NlZCAoemlwcGVkKSBmb3JtYXQsIGFkZCB0aGUgZXh0ZW5zaW9uIC5neiBvciAuemlwIHRvIHRoZSBmaWxlbmFtZS48L2xpPgo8L3VsPgoBE0Rlc3RpbmF0aW9uVVJMVHlwZQAMAAAAAAEAAQAEAPwAAAAAAAAAAAAwRGVzdGluYXRpb24DzFPPuwFGcHVibGljOi9DbGluaWMxOTIwL1Jlc3VsdHMvJChtb2RlbG5hbWUpX21vZGVsX3BlcmZvcm1hbmNlX21ldHJpY3MuY3N2AA==</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">DestinationURLType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>&apos;public:/Clinic1920/Results/&apos;+@modelname+&apos;_model_performance_metrics.csv&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write Model Performance Metrics</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -2436</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>163</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedReader.1">
						<sci:component name="Delimited Text Reader" version="2">
							<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>Keep Properties</sci:member>
								<sci:member>UTF-8 Auto Detect</sci:member>
								<sci:member>SourceTag</sci:member>
								<sci:member>HasColumnNames</sci:member>
								<sci:member>Column Name Lines</sci:member>
								<sci:member>Source Authentication Options</sci:member>
								<sci:value>job:/trainingData.csv</sci:value>
							</sci:arg>
							<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Source Authentication Options Username</sci:member>
								<sci:member>Source Authentication Options Password</sci:member>
								<sci:member>Source Authentication Options Authentication Method</sci:member>
								<sci:member>Source Authentication Options KDC Server</sci:member>
								<sci:member>Source Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
							</sci:arg>
							<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Filename</sci:legalval>
								<sci:legalval>FilenameAndExtension</sci:legalval>
								<sci:legalval>FullFilename</sci:legalval>
								<sci:legalval>ZipFilename</sci:legalval>
								<sci:legalval>Number</sci:legalval>
								<sci:legalval>Letter</sci:legalval>
								<sci:legalval>KeepCurrent</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
							</sci:arg>
							<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
								<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:member>ParseNDimensionalArrayStrings</sci:member>
								<sci:legalval>FigureOut</sci:legalval>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>$</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>UndefinedString</sci:member>
								<sci:member>AllLines</sci:member>
								<sci:member>TrimWhitespace</sci:member>
								<sci:member>CheckSyntax</sci:member>
								<sci:member>CommentLines</sci:member>
								<sci:member>AddEmptyProperties</sci:member>
							</sci:arg>
							<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
							</sci:arg>
							<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval>AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval selected="true">Replace</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:52:03 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Read Training Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component that this component is based upon.</sci:help>
								<sci:value>Delimited Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -2796</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>92</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="Scitegic.ShortcutComponent.1">
						<sci:component name="Shortcut Component" version="2">
							<sci:arg name="Component Name" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAKFAU5hbWUgb2YgdGhlIGNvbXBvbmVudCB3aGljaCB3aWxsIHByb2Nlc3MgdGhlIGRhdGEuIFlvdSBjYW4gZ2l2ZSBlaXRoZXIgYSBzaG9ydCBuYW1lIHN1Y2ggYXMgImFsb2dwbW9kZWwiLCBvciBhIGZ1bGx5LXNwZWNpZmllZCBuYW1lIHN1Y2ggYXMgIm15bmFtZS9MZWFybmVkUHJvcGVydGllcy9hbG9ncG1vZGVsIiwgb3IKZXZhbiBhIHVuaXZlcnNhbCBpZGVudGlmaWVyIChHVUlEKSBzdWNoIGFzICJ7QUJDRERDQkEtQ0M1QS00NTE3LThENTUtNkJCNEQ1M0RFMTJFfSIuCgpJZiBhIG5hbWUgaXMgZ2l2ZW4sIHRoZSBzZWFyY2ggaXMgY29uZHVjdGVkIHN0YXJ0aW5nIG9uIHRoZSB1c2VyJ3MgdGFiLCB0aGVuIHRoZSBQcm90b2NvbHMgdGFiLCB0aGVuIHRoZSBDb21wb25lbnRzIHRhYi4sU3RyaW5nVHlwZQAMAAAAAQEAAQAEAfwAAAAAAAAAAAA8Q29tcG9uZW50IE5hbWUDzFPPuzQkKG1vZGVsbmFtZSkA</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">ExpressionType</sci:propval>
								</sci:metaproplist>
								<sci:help>Name of the component which will process the data. You can give either a short name such as &quot;alogpmodel&quot;, or a fully-specified name such as &quot;myname/LearnedProperties/alogpmodel&quot;, or
evan a universal identifier (GUID) such as &quot;{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}&quot;.

If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.</sci:help>
								<sci:member>Use Parameters</sci:member>
								<sci:value>modelname</sci:value>
							</sci:arg>
							<sci:arg name="Use Parameters" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Define whether to pass on the parameters from this component to the target component or to extract the parameter names and values from the Parameter Settings value.</sci:help>
								<sci:member>Parameter Settings</sci:member>
								<sci:member>Force Parameter Settings</sci:member>
								<sci:legalval selected="true">From This Component</sci:legalval>
								<sci:legalval>From Parameter Settings</sci:legalval>
							</sci:arg>
							<sci:arg name="Parameter Settings" type="StringType" required="false" visibility="visible" multi="true">
								<sci:help>&lt;p&gt;A list of parameter settings to be applied to the target component, specified as an array. Each item in the array is one parameter setting, formatted as:&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;
&lt;/pre&gt;
Example:
&lt;pre style=&quot;color:brown&quot;&gt;
Property1=Total
Property2=NumSamples
Statistic=Mean
&lt;/pre&gt;
&lt;h5&gt;Parameter Arrays&lt;/h5&gt;
&lt;p&gt;To define an array parameter value, simply repeat the parameter name for each array item.
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
Catalog Number=6753
City List=Rome
City List=Athens
City List=Lisbon
&lt;/pre&gt;
&lt;h5&gt;Parameter Metadata&lt;/h5&gt;
&lt;p&gt;
You can also define metadata values for a parameter on the component. To do this, use a ^^ indicator to identify the parameter/metadata name pair. In the following example, the Measurement parameter has two metadata items, named Unit and Precision:
&lt;pre style=&quot;color:brown&quot;&gt;
Measurement=1000
Measurement^^Unit=Float
Measurement^^Precision=6
&lt;/pre&gt;
&lt;h5&gt;Parameter Group Series&lt;/h5&gt;
&lt;p&gt;
In general, a parameter value defined in the &lt;i&gt;Parameter Settings&lt;/i&gt; list should match a named parameter that exists on the target component for the shortcut. If there is no match, the parameter value is ignored. The only exceptions are when &lt;i&gt;Force Parameter Settings&lt;/i&gt; is True, or for ordered series of parameter groups. In the latter case, a new parameter can be created using a parameter in the base parameter group (number 1) as a template. In this example, the target component includes the following parameter group:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 1
List 1 Language
List 1 Format
&lt;/pre&gt;
The parameter list for the shortcut component might be:
&lt;pre style=&quot;color:brown&quot;&gt;
List 1 Language=English
List 1 Format=Left
List 2=
List 2 Language=Spanish
List 2 Format=Flow
List 3=
List 3 Language=French
List 3 Format=Center
&lt;/pre&gt;
&lt;p&gt;The first 2 items above simply define values for existing parameters in the base parameter group. The remaining items define two new parameter groups (group2 and group 3) with their values. 
&lt;/p&gt;&lt;p&gt;
You could also define metadata on the new parameters:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 2=
List 2^^Filename=esp.txt
List 2 Language=Spanish
List 2 Format=Flow
List 2 Format^^Style=Bold
&lt;/pre&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Force Parameter Settings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>If True, then all parameter values in the &lt;i&gt;Parameter Settings&lt;/i&gt; array are passed to the target component even if some parameters in the array do not already exist on the component.</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Protect Globals" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Controls whether to protect global values from change by the referenced component. Options are:
&lt;ul&gt;
&lt;li&gt;Don&apos;t Protect: allows the referenced component to access and change any globals. 
&lt;li&gt;Use Copy: allows the referenced component to access a copy made of the globals 
at initialization time. It may change these globals or create new ones, but these 
changes will not be transferred outside the component itself. 
&lt;li&gt;Use Copy of Read-Only: gives the referenced component a copy of read-only globals, 
but does not pass in writable globals. (Writable globals are more likely to be temporary 
in scope, and passing in information using them is not recommended. If you need the value of 
these, you may add parameters to the Shortcut Component to pass them in.)
You may create new globals, but they will remain local to the component; further, trying to assign an existing global 
will cause an error. These strict semantics help avoid unintentional problems caused by altering system-wide globals or using
temporary state-dependent globals.
&lt;/ul&gt; 

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;WARNING:  If the reference component specified by &quot;Component Name&quot; is a subprotocol and the &quot;Protect Globals&quot; parameter is set to any value other than &quot;Don&apos;t Protect&quot;, the protocol will crash resulting in a &quot;No Server Process&quot; error.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Copy Hierarchical Data</sci:member>
								<sci:legalval selected="true">Don&apos;t Protect</sci:legalval>
								<sci:legalval>Use Copy</sci:legalval>
								<sci:legalval>Use Copy of Read-Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Copy Hierarchical Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;If set to true, any copy of the global data passed to the component will also contain any hierarchical properties. Otherwise, only properties defined on the root node will be passed.&lt;/p&gt;

&lt;p&gt;Has no effect unless the &apos;Use Copy&apos; or &apos;Use Read-Only Copy&apos; values of the &apos;Protect Globals&apos; parameter are selected.&lt;/p&gt;</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Link to Any Ancestor" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
								<sci:help>If the component you are referring to has a link to a parent property, that property is expected to be on the parent protocol of the Shortcut Component. 

Sadly, sometimes additional layers of subprotocols might be added. In this case, setting Link to Any Ancestor to &quot;True&quot; causes the shortcut to walk all ancestor protocols looking for resolution of the links. </sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Use New Parameter Copy" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
								<sci:help>Whether to use the newer version of parameter copying</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Apr 17 12:56:59 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Shortcut Component</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint2" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Component Point</sci:help>
								<sci:value>370 -50</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -2796</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Run the component specified by name.</sci:value>
								<sci:value>&lt;p&gt;
This component can act as a shortcut to any other component in the system.  This means that it is replaced at run time with a copy of the target component it refers to. By default, the target component is run with parameters copied from this component. Alternatively, a list of parameter settings can be specified in a single array parameter.
&lt;/p&gt;
&lt;p&gt;
(The &quot;Shortcut Component&quot; is so-named because its operation is quite similar to that of a shortcut of a subprotocol, which gets the newest copy at run-time and sets the parameters from the values on the shortcut.)
&lt;/p&gt;
&lt;p&gt;
The component can be useful when you wish to write a protocol that uses a component that may not yet be in the system, such as a learned model. Another use is component substitution at run time, based upon protocol parameters or earlier results in the protocol.
&lt;/p&gt;
&lt;p&gt;
You can adjust the component port configuration to match those of the target component ports.
&lt;/p&gt;
&lt;p&gt;
If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;WARNING:  If the reference component specified by &quot;Component Name&quot; is a subprotocol and the &quot;Protect Globals&quot; parameter is set to any value other than &quot;Don&apos;t Protect&quot;, the protocol will crash resulting in a &quot;No Server Process&quot; error.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon</sci:help>
								<sci:value>Shortcut Component</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1749</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>167</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{F8F731CD-0410-40ED-BF86-31EDB2E7013B}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Shortcut Component</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Generate ROC Data" version="2">
							<sci:arg name="ScoreProperty" type="LinkGlobalPropertyType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAFKUHJvcGVydHkgdXNlZCB0byBzY29yZSB0aGUgc2FtcGxlcy4gQ2FsY3VsYWJsZSBwcm9wZXJ0aWVzIGFyZSBhY2NlcHRhYmxlLixTdHJpbmdUeXBlAAwAAAABAQABAAQA/AAAAAAAAAAAADhTY29yZVByb3BlcnR5A8xTz7skJChzY29yZSkA</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>Property used to score the samples. Calculable properties are acceptable.</sci:help>
								<sci:member>Allow Score Reversal</sci:member>
								<sci:value>score</sci:value>
							</sci:arg>
							<sci:arg name="Allow Score Reversal" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>Specifies whether to change the sign of all scores and redo the ROC computations when the initial ROC AUC value is less than 0.5.
&lt;p&gt;
The ROC analysis initially assumes that greater values of &lt;i&gt;ScoreProperty&lt;/i&gt; correspond to increased likelihood of samples being in the &quot;good&quot; class. But for some models, it is not known beforehand whether greater values correspond to &quot;good&quot; or &quot;bad&quot; samples. For such cases, this option allows you to reverse the scores when the initial assumption appears to be wrong.
&lt;p&gt;
Use this option with care, as a ROC AUC value less than 0.5 may simply indicate a poor model. For most model types, the class corresponding to greater scores is known.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
								<sci:help>An expression used to distinguish good samples from the rest</sci:help>
								<sci:value>Dev</sci:value>
							</sci:arg>
							<sci:arg name="OutputOption" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies whether to output ROC data for plotting, a ROC score, or just the True Positive Rate and False Positive Rate.</sci:help>
								<sci:member>TPR FPR Distance</sci:member>
								<sci:legalval selected="true">ROC Data</sci:legalval>
								<sci:legalval>ROC Score</sci:legalval>
								<sci:legalval>ROC TPR FPR</sci:legalval>
							</sci:arg>
							<sci:arg name="TPR FPR Distance" type="DoubleType" required="false" visibility="visible" multi="false">
								<sci:help>If provided, then a quick distance calculation is performed, and only new records that have a larger distance from the last output record are returned, using TPR (true positive rate) and FPR (false positive rate). 

The distance function is: ((TPR-outputTPR)*(TPR-outputTPR)) + ((FPR-outputFPR)*(FPR-outputFPR)).

Typically, a value of 0.00001 is enough to give good quality ROC plots.</sci:help>
								<sci:enabledscript>parameter(&apos;OutputOption&apos;) eq &apos;ROC Data&apos; OR parameter(&apos;OutputOption&apos;) eq &apos;ROC TPR FPR&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
								<sci:value>tempfile,cacheROC</sci:value>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
								<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
								<sci:value>AllIsGood,AllScoreproperty,BadCount,GoodCount,IsGoodCount,IsBadCount,FirstPass,InitialPass,lastFPR,lastTPR,lastFPRseen,lastTPRseen,prevTP,prevFP,LastScore,MinScore,MaxScore,Delta,lastTN,lastFN,lastFP,lastTP</sci:value>
							</sci:arg>
							<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
								<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Thu Sep 14 11:00:55 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Generate ROC and Confusion Matrix Data</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>ComponentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{28FFD793-2574-4E7F-836D-4C75F65AA09A}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -2796</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Computes ROC plot data along with confusion matrix statistics, or outputs a ROC AUC score (area under ROC curve)</sci:value>
								<sci:value>You must specify the following two parameters
&lt;ul&gt;
  &lt;li&gt;&lt;I&gt;ScoreProperty&lt;/I&gt;: Identifies the property used to rank the incoming samples, with greater values of this property corresponding to a greater probability that the sample is &quot;good&quot;.&lt;/li&gt;
  &lt;li&gt;&lt;I&gt;TestForGood&lt;/I&gt;: PilotScript expression which identifies the actual &quot;good&quot; samples. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
If &lt;i&gt;OutputOption&lt;/i&gt; is &quot;ROC Data&quot;, the output is:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;A set of data records defining the points on a ROC plot (properties &lt;b&gt;False Positive Rate&lt;/b&gt; and &lt;b&gt;True Positive Rate&lt;/b&gt;) along with numerous additional properties derived from the confusion matrix, including:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Cutoff:&lt;/b&gt; The cutoff value of the &lt;i&gt;ScoreProperty&lt;/i&gt; for the given point, above which samples are predicted to be &quot;Good&quot; and below which samples are predicted to be &quot;Bad&quot;. (But see note below.)
&lt;li&gt;&lt;b&gt;TP:&lt;/b&gt; Number of true positives for the given cutoff value (i.e., number of actual &quot;good&quot; samples predicted to be good).
&lt;li&gt;&lt;b&gt;FP:&lt;/b&gt; Number of false positives.
&lt;li&gt;&lt;b&gt;TN:&lt;/b&gt; Number of true negatives.
&lt;li&gt;&lt;b&gt;FN:&lt;/b&gt; Number of false negatives.
&lt;li&gt;Several additional properties derived from TP, FP, TN, and FN.
&lt;/ul&gt;

&lt;li&gt;If &lt;i&gt;OutputOption&lt;/i&gt; is &quot;ROC Score&quot;, the output is contains the following properties:&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;ScoreProperty:&lt;/b&gt; Name of property used to generate the ROC data.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ROCScore:&lt;/b&gt; The area under the curve of the ROC plot corresponding to the data.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;ROCRating:&lt;/b&gt; Text describing the result (such as &quot;Quality 0.921: Excellent&quot;). &lt;/li&gt;
&lt;/ul&gt;

&lt;li&gt;If &lt;i&gt;OutputOption&lt;/i&gt; is &quot;ROC TPR FPR&quot;, the output is a single data record containing the following properties&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;True Positive Rate:&lt;/b&gt; The true positive rate, in [0.1].&lt;/li&gt;
&lt;li&gt;&lt;b&gt;False Positive Rate:&lt;/b&gt; The false positive rate, in [0.1].&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;It is assumed that greater values of the &lt;i&gt;ScoreProperty&lt;/i&gt; correspond to increased likelihood of a sample passing the &lt;i&gt;TestForGood&lt;/i&gt;. If the ROC score computed based on this assumption is less than 0.5, then the alternative assumption is made that lesser values correspond to increased likelihood of a sample being &quot;good&quot;, and the ROC score and data are re-computed based on this revised assumption. In addition, a &lt;b&gt;Note&lt;/b&gt; property is added to the output data records with an explanation that this was done.
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1590</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>93</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Generate ROC Data</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol/>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAI+A1RoZSBsb2NhdGlvbiB0byB3aGljaCB0byB3cml0ZSB0aGUgZGF0YS4gQ2FuIGJlIGEgZmlsZSwgYSBuZXR3b3JrIHJlc291cmNlLCBhIGdsb2JhbCBwcm9wZXJ0eSwgb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eS4KPHVsPgo8dWw+CjxsaT5Gb3IgYSBmaWxlLCBlbnRlciBhIHBhdGguPC9saT4KPGxpPkZvciBhIG5ldHdvcmsgcmVzb3VyY2UsIGVudGVyIGEgbmV0d29yayBVUkwgaW4gdGhlIGZvcm0gPGI+cHJvdG9jb2w6Ly9zZXJ2ZXI6cG9ydC8uLi48L2I+LiAoSWYgcG9ydCBpcyBvbWl0dGVkLCBhIGRlZmF1bHQgaXMgdXNlZC4pIFByb3RvY29scyBzdXBwb3J0ZWQgYXJlOgoJPHVsPgoJPGxpPmh0dHAsIGh0dHBzPC9saT4KCTxsaT5mdHA8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPGxpPkZvciBhIGdsb2JhbCBwcm9wZXJ0eSwgZW50ZXIgImdsb2JhbDovL3Byb3BlcnR5LW5hbWUiLjwvbGk+CjxsaT5Gb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eSwgZW50ZXIgInByb3BlcnR5Oi8vcHJvcGVydHktbmFtZSIgYW5kIGFkZCBhbiBvdXRwdXQgcG9ydC48L2xpPgo8L3VsPgo8cD4KPGI+Tm90ZTo8L2I+CjwvcD4KPHVsPgo8bGk+V2hlbiB0aGUgZGVzdGluYXRpb24gaXMgYSBmaWxlIG9yIG5ldHdvcmsgcmVzb3VyY2UsIGJlIHN1cmUgdG8gc3BlY2lmeSBhbiBleHRlbnNpb24gc3VjaCBhcyAudHh0IG9yIC54bHMuIFRvIHNhdmUgaW4gY29tcHJlc3NlZCAoemlwcGVkKSBmb3JtYXQsIGFkZCB0aGUgZXh0ZW5zaW9uIC5neiBvciAuemlwIHRvIHRoZSBmaWxlbmFtZS48L2xpPgo8L3VsPgoBE0Rlc3RpbmF0aW9uVVJMVHlwZQAMAAAAAAEAAQAEAPwAAAAAAAAAAAAwRGVzdGluYXRpb24DzFPPuwE+cHVibGljOi9DbGluaWMxOTIwL1Jlc3VsdHMvJChtb2RlbG5hbWUpX3RyYWluaW5nX1JPQ19kYXRhLmNzdgA=</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">DestinationURLType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>&apos;public:/Clinic1920/Results/&apos;+@modelname+&apos;_training_ROC_data.csv&apos;</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write ROC Training Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -2796</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>94</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DataCacheIO.1">
						<sci:component name="Cache Reader" version="2">
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache to read, which should refer to a cache already written in the protocol containing this component.  Use the &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt; component to provide an ID for temporary caches, then refer to the temporary ID with $(globalname)</sci:help>
								<sci:member>RangeMinimum</sci:member>
								<sci:member>RangeMaximum</sci:member>
								<sci:member>Scope</sci:member>
								<sci:member>JobId</sci:member>
								<sci:value>TestData</sci:value>
							</sci:arg>
							<sci:arg name="RangeMinimum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The lower limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means start reading at the first cached record.
               </sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="RangeMaximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The upper limit of data records to read from the cache. Numbering starts at 1.  A blank value or a value less than 1 means read to the end of the set of cached records.
               </sci:help>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope of the cache determines the length of time the cache exists and 
the visibility of the cache to other jobs and users. Each scope has its own namespace, so you have to 
specify both the &lt;i&gt;CacheID&lt;/i&gt; and the &lt;i&gt;Scope&lt;/i&gt; to the same values as were used in the &lt;/i&gt;Cache Writer&lt;/i&gt;.
			</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="DeleteWhenFinished" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>If True, then delete the cache when finished reading</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Additional parameters to control the component behavior.</sci:help>
								<sci:member>Read Globals</sci:member>
								<sci:member>Password</sci:member>
							</sci:arg>
							<sci:arg name="Read Globals" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;Defines if the component should read globals from the cache.&lt;/p&gt;
&lt;p&gt;Any globals read from the cache will overwrite the existing globals.&lt;/p&gt;</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:help>&lt;p&gt;Enter a password, if one was assigned when the cache was written.
&lt;/p&gt;
&lt;p&gt;Note that a password is not required, if the current user originally wrote the password-protected cache.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="JobId" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>If the scope is set to &lt;I&gt;Job Only&lt;/I&gt;, then this is the job that owns the cache, if it is different from this job. The job must have been run by the same user as this job. If not specified, then the current job is assumed to contain the cache.
               </sci:help>
								<sci:enabledscript>parameter(&apos;Scope&apos;) eq &apos;Job Only&apos;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="CacheCategory" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The cache type, that determines its folder location within the job.
               </sci:help>
							</sci:arg>
							<sci:arg name="Mode" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>Specifies the action of this component:

 - Writer: The component writes data records to a new cache.
 - Reader: The component reads data records from a pre-existing, completed cache.
 - Writer/Reader: The component writes data out to a cache and then reads it in again to generate new records.
               </sci:help>
								<sci:legalval>Writer</sci:legalval>
								<sci:legalval selected="true">Reader</sci:legalval>
								<sci:legalval>Writer/Reader</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Aug 28 09:15:02 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;CacheID&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Parameter(&apos;CacheID&apos;, 2);
if(StrLength(#displayName) &gt; 0) then	
	&apos;Read cache &apos; . #displayName;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DATABASENODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Cache Reader</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Reads data records from a named cache</sci:value>
								<sci:value>&lt;p&gt;A data cache is a place where you can temporarily store data records without losing information.  This component is used to read data from a named cache created by the &lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; component.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;CacheID&lt;/i&gt; to specify the name of the cache to read.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;This component is typically used as a mechanism for retrieving temporary data stored within a protocol.&lt;/li&gt;
&lt;li&gt;To access a cache created in a different protocol, use &lt;i&gt;Scope&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To join data from a cache to streaming data records use &lt;a href=&quot;javascript:DoLink(&apos;{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}&apos;)&quot;&gt;Join Data from Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To list available caches use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-7077-05B44C3D08E6}&apos;)&quot;&gt;List Caches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To delete a cache use &lt;a href=&quot;javascript:DoLink(&apos;{704E3781-33EA-42BB-9088-05B44C3D08E6}&apos;)&quot;&gt;Delete Cache&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To create a temporary cacheID use &lt;a href=&quot;javascript:DoLink(&apos;{B91EE521-C028-46BE-89A4-51CDE9877589}&apos;)&quot;&gt;Create Temporary CacheIDs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1563</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>169</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{2E125DE1-79DA-4426-9C1C-1910DDD2EA75}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Readers\Cache Reader</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>JoinMe := &quot;Yes&quot;;</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>390 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>184</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.JoinProperties.1">
						<sci:component name="Join Data from Cache" version="2">
							<sci:arg name="JoinUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the property that identifies which records to join. When a record in the cache 
has the same value for this property as the incoming streaming data record, its properties and child 
nodes are added to the streaming record. Calculable properties can be used for the streaming data, but 
data in the cache must already contain stored properties to join.

If you provide a comma-separated list 
of property names, then by default all values must match. (You can control this behavior by changing 
JoinUsingListType.) Or, if you provide a property that is an array of values, then all values must match 
(and the source must provide the data in an array-based form.)</sci:help>
								<sci:member>JoinUsingListType</sci:member>
								<sci:member>IgnoreCase</sci:member>
								<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
								<sci:member>JoinPropertyType</sci:member>
								<sci:value>JoinMe</sci:value>
							</sci:arg>
							<sci:arg name="JoinUsingListType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates how &lt;i&gt;JoinUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;UseFirstDefinedValue&lt;/i&gt;: Join using only the first property in the list with a defined value for a record.
&lt;li&gt;&lt;i&gt;UseAllValues&lt;/i&gt;: Joins using the concatentation of the values of all properties listed; a match occurs only when records share the same value for all the properties.
&lt;/ul&gt;</sci:help>
								<sci:legalval>UseFirstDefinedValue</sci:legalval>
								<sci:legalval selected="true">UseAllValues</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinPropertyType" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The data type of the join property</sci:help>
								<sci:legalval>IsNumeric</sci:legalval>
								<sci:legalval selected="true">IsText</sci:legalval>
								<sci:legalval>IsDate</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Consider lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;JoinUsing&lt;/i&gt; property values.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set JoinPropertyType to IsText&apos;);
Parameter(&apos;JoinPropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="CacheID" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The name of the cache that was written using the Cache Writer</sci:help>
								<sci:member>Scope</sci:member>
								<sci:value>TrainDataMeanStdDev</sci:value>
							</sci:arg>
							<sci:arg name="Scope" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The scope within which the cache we wish to join against exists.
&lt;ul&gt;
&lt;li&gt;&lt;I&gt;Job Only&lt;/I&gt; all caches created within the currently-running protocol.
&lt;li&gt;&lt;I&gt;User Only&lt;/I&gt; all caches created so that all jobs by that user can see them.
&lt;li&gt;&lt;I&gt;All Users&lt;/I&gt; all caches created by any user in the global scope. 
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Job Only</sci:legalval>
								<sci:legalval>User Only</sci:legalval>
								<sci:legalval>All Users</sci:legalval>
							</sci:arg>
							<sci:arg name="Join Behavior" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:member>JoinOnto</sci:member>
								<sci:member>WhenJoiningOnto</sci:member>
								<sci:member>JoinAllNullString</sci:member>
								<sci:member>MultipleReferenceBehavior</sci:member>
								<sci:member>AppendNodes</sci:member>
							</sci:arg>
							<sci:arg name="JoinOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;Indicates which data record will be output:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;ProcessData&lt;/i&gt;: The data streaming through the pipeline remains with properties and child nodes from the cache copied onto the record.
&lt;li&gt;&lt;i&gt;Reference&lt;/i&gt;: The data from the cache remains with properties and child nodes from the streaming data record copied onto the record.  Only data records that successfully join against the incoming data stream will be output.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">ProcessData</sci:legalval>
								<sci:legalval>Reference</sci:legalval>
							</sci:arg>
							<sci:arg name="WhenJoiningOnto" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;During the joining of two property lists, this parameter indicates how differences 
between the property lists are resolved.  
By default, the streaming input data (process data) serves 
as the base for a join and the cache data (reference data) is treated as the joining data (this distinction 
can be reversed using the &lt;i&gt;JoinOnto&lt;/i&gt; parameter).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: 
Copies all properties from the joining data onto the base data, overwriting the values of any properties 
that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from 
the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: 
Copies only those properties from the joining data to the base data that do not already exist on the 
base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already 
exists in the base data is appended  (as an array) to the value in the base property.  The other joining 
properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: 
The value of a joining property that already exists in the base data is appended  (as an array) to the 
value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;GroupData&lt;/i&gt;: 
Creates a hierarchical group containing both the joining and base data.
&lt;/ul&gt;</sci:help>
								<sci:legalval>OverwriteOrCreate</sci:legalval>
								<sci:legalval>OverwriteExisting</sci:legalval>
								<sci:legalval>CreateIfNew</sci:legalval>
								<sci:legalval selected="true">AppendOrCreate</sci:legalval>
								<sci:legalval>AppendExisting</sci:legalval>
								<sci:legalval>GroupData</sci:legalval>
							</sci:arg>
							<sci:arg name="AppendNodes" type="BoolType" required="false" visibility="visible" multi="false">
								<sci:help>When joining data records that contain child nodes, whether to append the child nodes of the joining data onto the base data as determined by the &lt;i&gt;JoinOnto&lt;/i&gt; parameter.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleReferenceBehavior" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;What to do if there are multiple records in the cache (reference data) with a matching 
value for the &lt;i&gt;JoinUsing&lt;/i&gt; property of an incoming streaming record.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;JoinFirst&lt;/i&gt;: 
Uses the first one found. 
&lt;li&gt;&lt;i&gt;JoinLast&lt;/i&gt;: Uses the last one found. 
&lt;li&gt;&lt;i&gt;JoinAll&lt;/i&gt;: 
Appends all values for each property together in an array. 
&lt;li&gt;&lt;i&gt;JoinTogether&lt;/i&gt;: 
Joins each of the matching records in the cache with the streaming record individually and independently, 
which results in multiple records output for one input record.
&lt;/ul&gt;</sci:help>
								<sci:legalval>JoinFirst</sci:legalval>
								<sci:legalval>JoinLast</sci:legalval>
								<sci:legalval>JoinAll</sci:legalval>
								<sci:legalval selected="true">JoinTogether</sci:legalval>
							</sci:arg>
							<sci:arg name="JoinAllNullString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;This string is used during append to pad out empty values when MultipleReferenceBehavior is set to  &quot;JoinAll&quot;. This keeps the generated arrays of values in sync for multiple references.&lt;/p&gt;
&lt;p&gt;The value &quot;None&quot; causes no padding to occur.&lt;/p&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MultipleReferenceBehavior to JoinAll&apos;);
Parameter(&apos;MultipleReferenceBehavior&apos;) eq &apos;JoinAll&apos;</sci:enabledscript>
								<sci:value>None</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Prefix</sci:member>
								<sci:member>GroupName</sci:member>
							</sci:arg>
							<sci:arg name="Prefix" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A prefix to add to each property name as it is joined onto the streaming data (instead of overwriting or appending to the existing value).</sci:help>
							</sci:arg>
							<sci:arg name="GroupName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>If &lt;i&gt;WhenJoiningOnto&lt;/i&gt; is set to &quot;GroupData&quot;, this is the name of the group node into which the results are placed</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, set WhenJoiningOnto to GroupData&apos;);
Parameter(&apos;WhenJoiningOnto&apos;) eq &apos;GroupData&apos;</sci:enabledscript>
								<sci:value>Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="PassDownParameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to pass on to the reader</sci:help>
								<sci:value>Scope</sci:value>
							</sci:arg>
							<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the JoinUsing property -- even 
non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  JoinPropertyType 
is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with 
a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a 
numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then 
records containing non-numeric strings for the JoinUsing property will be sent out the Fail port.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Source" type="URLType" required="true" visibility="nevershow" multi="false">
								<sci:help>Names of data files, a learned model, or data cache ID, to join with the streaming data that enters this component. If multiple files are given, each is joined in sequence. (The Windows browser reverses the order of the files during selection, so you should select from last to first.)</sci:help>
								<sci:value>$(CacheID)</sci:value>
							</sci:arg>
							<sci:arg name="SourceFormat" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>The name of the reader to use for the join source. (For readers with particular parameters, you can create them and save them, then add their name to the options list for this protocol.  For example, you could create a Delimited Text with Commas and No Column Names component, save it to your tab, then add it to this list and select.)</sci:help>
								<sci:legalval>Delimited Text With Column Names</sci:legalval>
								<sci:legalval>Delimited Text No Column Names</sci:legalval>
								<sci:legalval>Comma Delimited With Column Names</sci:legalval>
								<sci:legalval>Tab Delimited With Column Names</sci:legalval>
								<sci:legalval>Space Delimited With Column Names</sci:legalval>
								<sci:legalval>Excel XLS With Column Names</sci:legalval>
								<sci:legalval>Excel XLS No Column Names</sci:legalval>
								<sci:legalval>MDL SD Format</sci:legalval>
								<sci:legalval>Learned Model Reader</sci:legalval>
								<sci:legalval selected="true">{704E3781-33EA-42BB-9099-05B44C3D08E6}</sci:legalval>
							</sci:arg>
							<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="nevershow" multi="false">
								<sci:help>A list of properties to join from the source file. If this value is not defined, all properties are joined into the record.</sci:help>
							</sci:arg>
							<sci:arg name="UseIndexFile" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Uses an index file when performing the Join operation when set to &quot;True&quot;. An index file is created if it does not already exist; it is used to accelerate the join process.

 Note: This option is useful for optimizing join operations against a file that may be used many times, at the first time of use an index file can be created to speed accesses in subsequent uses.  This file is created in the same directory as the source file and is automatically used for any subsequent join.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:03:53 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{BDEEEC41-E62B-4FDE-B0D0-8B9C96CA2497}</sci:value>
							</sci:arg>
							<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="nevershow" multi="false">
								<sci:help>Whether to perform a quick syntax check at the beginning of the file when we open it, and if a problem is found, throw an error.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="SourceComponent" type="ComponentType" required="false" visibility="nevershow" multi="false">
								<sci:help>Name of the data format of the Source file</sci:help>
								<sci:value>$(SourceFormat)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;JoinUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>if (strlength(trim(parameter(&apos;JoinUsing&apos;, 2))) &gt; 0) then
	&quot;Join on &quot; . trim(parameter(&apos;JoinUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Join Data from File</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>JOINNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>690 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Augments data records with properties from data in a cache where specified property values match</sci:value>
								<sci:value>&lt;p&gt;For each incoming data record, a property value or set of values specified by 
&lt;i&gt;JoinUsing&lt;/i&gt; is used to identify matching records in the data cache created by the &lt;a 
href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache Writer&lt;/a&gt; 
specified by &lt;i&gt;CacheID&lt;/i&gt;.  Properties from these records are added to the incoming data 
record.  If no match is found, the record is sent out the Fail port.&lt;/p&gt;

&lt;p&gt;Records match 
if the value of the &lt;i&gt;JoinUsing&lt;/i&gt; property is the same for the incoming record as in the 
cache.  If multiple &lt;i&gt;JoinUsing&lt;/i&gt; properties are specified, the behavior depends on &lt;i&gt;JoinUsingListType&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;By 
default, this component expects the cache to have been created by the current job.  If the cache is outside 
the scope of the current job, update &lt;i&gt;Scope&lt;/i&gt; accordingly&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;By 
default only properties are extracted from the matching records.  Use &lt;i&gt;JoinOnto&lt;/i&gt; to 
obtain additional information such as molecular data.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{674E3781-33EA-42BB-9099-49CB4C3D08E6}&apos;)&quot;&gt;Cache 
Writer&lt;/a&gt; to create the data cache specified by &lt;i&gt;CacheID&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;Use 
&lt;a href=&quot;javascript:DoLink(&apos;{D24316C3-9D5C-4B5D-ADF3-28F258F11858}&apos;)&quot;&gt;Join 
Data from File&lt;/a&gt; to join against a source data file.&lt;/li&gt;
&lt;/ul&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records which received additional properties from the source file through a successful join.</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Data records for which no data was found in the source file.</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
								<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>186</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{BF53EC2A-4B1A-4035-B3ED-7EB01B155F4B}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Data Manipulators\Join Data from Cache</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.PropertyFunctions.1">
						<sci:component name="Remove Properties" version="2">
							<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
								<sci:help>The names of properties to remove from each data record entering the component</sci:help>
								<sci:value>JoinMe</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:help>the action to perform</sci:help>
								<sci:value>Remove</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>true</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>SubProtocol</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>990 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Removes the specified properties</sci:value>
								<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Data records with the specified properties removed</sci:value>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>17.1.0.119</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>192</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>FOR #i IN 1 .. NumProperties() LOOP
	IF IthPropertyName(#i) NOT RLIKE(&apos;_Mean$&apos;) //Use Regular Expressions to ignore the stats properties ...
		 AND IthPropertyName(#i) NOT RLIKE(&apos;_StdDev$&apos;)
		 AND IthPropertyName(#i) NOT RLIKE(&apos;_Norm$&apos;) //... and the new properties you&apos;re adding
		 AND NOT Contains(Parameter(&apos;IgnoreProperties&apos;),IthPropertyName(#i) ) //Also skip properties in the IgnoreProperties array
		THEN
		#BaseProp := IthPropertyName(#i);
		Property(#BaseProp):= (Property(#BaseProp)-Property(#BaseProp.&apos;_Mean&apos;))/Property(#BaseProp.&apos;_StdDev&apos;);
	END IF;
END LOOP;

//Remove all properties except normalized ones
#i := NumProperties(); 
WHILE #i &gt; 0 LOOP 
	IF IthPropertyName(#i) RLIKE(&apos;_Mean$&apos;) OR IthPropertyName(#i) RLIKE(&apos;_StdDev$&apos;) THEN
		Remove(IthPropertyName(#i));
	END IF;
    #i -= 1; 
END LOOP; </sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="true">
								<sci:value>pdb_code</sci:value>
								<sci:value>Dev</sci:value>
								<sci:value>DI</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Normalize Properties</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1290 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>191</sci:value>
							</sci:arg>
							<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Checkpoint Identifier</sci:help>
								<sci:value>{754A7D00-041A-4F1E-B070-5B2AB4969AB6}</sci:value>
								<sci:value>3</sci:value>
								<sci:value>0</sci:value>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.EvaluateExpression.1">
						<sci:component name="Custom Manipulator (PilotScript)" version="2">
							<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
								<sci:member>Initial Expression</sci:member>
								<sci:member>Final Expression</sci:member>
								<sci:member>Keep Calculated Properties</sci:member>
								<sci:value>Dev := Property(&apos;DI&apos;) &lt; @Dev_Threshold;
Remove(&apos;pdb_code&apos;);
Remove(&apos;DI&apos;);
Remove(&apos;Column1&apos;);</sci:value>
							</sci:arg>
							<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
								<sci:help>Version of expression parser to use.</sci:help>
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>EXPRESSIONNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1590 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Applies a PilotScript expression to each data record
</sci:value>
								<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>7.0.0.35</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>185</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.DelimitedWriter.1">
						<sci:component name="Delimited Text Writer" version="2">
							<sci:arg name="Destination" type="ExpressionType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAI+A1RoZSBsb2NhdGlvbiB0byB3aGljaCB0byB3cml0ZSB0aGUgZGF0YS4gQ2FuIGJlIGEgZmlsZSwgYSBuZXR3b3JrIHJlc291cmNlLCBhIGdsb2JhbCBwcm9wZXJ0eSwgb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eS4KPHVsPgo8dWw+CjxsaT5Gb3IgYSBmaWxlLCBlbnRlciBhIHBhdGguPC9saT4KPGxpPkZvciBhIG5ldHdvcmsgcmVzb3VyY2UsIGVudGVyIGEgbmV0d29yayBVUkwgaW4gdGhlIGZvcm0gPGI+cHJvdG9jb2w6Ly9zZXJ2ZXI6cG9ydC8uLi48L2I+LiAoSWYgcG9ydCBpcyBvbWl0dGVkLCBhIGRlZmF1bHQgaXMgdXNlZC4pIFByb3RvY29scyBzdXBwb3J0ZWQgYXJlOgoJPHVsPgoJPGxpPmh0dHAsIGh0dHBzPC9saT4KCTxsaT5mdHA8L2xpPgoJPGxpPmhkZnMgKEhhZG9vcCBEaXN0cmlidXRlZCBGaWxlIFN5c3RlbSk8L2xpPgoJPC91bD4KPC9saT4KPGxpPkZvciBhIGdsb2JhbCBwcm9wZXJ0eSwgZW50ZXIgImdsb2JhbDovL3Byb3BlcnR5LW5hbWUiLjwvbGk+CjxsaT5Gb3IgYSBkYXRhIHJlY29yZCBwcm9wZXJ0eSwgZW50ZXIgInByb3BlcnR5Oi8vcHJvcGVydHktbmFtZSIgYW5kIGFkZCBhbiBvdXRwdXQgcG9ydC48L2xpPgo8L3VsPgo8cD4KPGI+Tm90ZTo8L2I+CjwvcD4KPHVsPgo8bGk+V2hlbiB0aGUgZGVzdGluYXRpb24gaXMgYSBmaWxlIG9yIG5ldHdvcmsgcmVzb3VyY2UsIGJlIHN1cmUgdG8gc3BlY2lmeSBhbiBleHRlbnNpb24gc3VjaCBhcyAudHh0IG9yIC54bHMuIFRvIHNhdmUgaW4gY29tcHJlc3NlZCAoemlwcGVkKSBmb3JtYXQsIGFkZCB0aGUgZXh0ZW5zaW9uIC5neiBvciAuemlwIHRvIHRoZSBmaWxlbmFtZS48L2xpPgo8L3VsPgoBE0Rlc3RpbmF0aW9uVVJMVHlwZQAMAAAAAAEAAQAEAPwAAAAAAAAAAAAwRGVzdGluYXRpb24DzFPPuwElcHVibGljOi9DbGluaWMxOTIwL0RhdGEvdGVzdERhdGEuY3N2AA==</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">DestinationURLType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
								<sci:member>Maximum</sci:member>
								<sci:member>IfFileExists</sci:member>
								<sci:member>CharacterEncoding</sci:member>
								<sci:member>Destination Authentication Options</sci:member>
								<sci:value>&apos;public:/Clinic1920/Data/&apos;+@modelname+&apos;_testData.csv&apos;;</sci:value>
							</sci:arg>
							<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
								<sci:member>Destination Authentication Options Username</sci:member>
								<sci:member>Destination Authentication Options Password</sci:member>
								<sci:member>Destination Authentication Options Authentication Method</sci:member>
								<sci:member>Destination Authentication Options KDC Server</sci:member>
								<sci:member>Destination Authentication Options KDC Realm</sci:member>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
								<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
							</sci:arg>
							<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
								<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
								<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
							</sci:arg>
							<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
								<sci:legalval selected="true">Overwrite</sci:legalval>
								<sci:legalval>Append</sci:legalval>
								<sci:legalval>Halt</sci:legalval>
							</sci:arg>
							<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
								<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
								<sci:member>UseByteOrderMark</sci:member>
								<sci:legalval selected="true">ANSI</sci:legalval>
								<sci:legalval>UTF-8</sci:legalval>
								<sci:legalval>Unicode</sci:legalval>
								<sci:legalval>Unicode big endian</sci:legalval>
							</sci:arg>
							<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
								<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
								<sci:legalval selected="true">Always</sci:legalval>
								<sci:legalval>Never</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
								<sci:member>MultipleValueDelimiter</sci:member>
								<sci:legalval>Tab</sci:legalval>
								<sci:legalval>Space</sci:legalval>
								<sci:legalval selected="true">Comma</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
							</sci:arg>
							<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>Semicolon</sci:legalval>
								<sci:legalval>Colon</sci:legalval>
								<sci:legalval>Comma</sci:legalval>
								<sci:legalval>Linefeed</sci:legalval>
							</sci:arg>
							<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
								<sci:member>OutputColumnNames</sci:member>
								<sci:member>OutputColumnTypes</sci:member>
								<sci:member>OutputRowNumber</sci:member>
								<sci:member>UndefinedString</sci:member>
								<sci:member>MissingValue Format</sci:member>
								<sci:member>NewlineStyle</sci:member>
							</sci:arg>
							<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
							</sci:arg>
							<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Output column names</sci:help>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Output a row that includes column types</sci:help>
								<sci:legalval selected="true">None</sci:legalval>
								<sci:legalval>SpotfireFormat</sci:legalval>
								<sci:legalval>NDIFormat</sci:legalval>
							</sci:arg>
							<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
								<sci:help>Includes the number of the record as the first field for each record</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
								<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
								<sci:legalval>Use UndefinedString</sci:legalval>
							</sci:arg>
							<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
								<sci:legalval selected="true">CR+LF</sci:legalval>
								<sci:legalval>LF</sci:legalval>
								<sci:legalval>CR</sci:legalval>
								<sci:legalval>Native</sci:legalval>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/generic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Write Test Data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
								<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
								<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
							</sci:arg>
							<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component this component is based upon.</sci:help>
								<sci:value>Delimited Writer</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DOCUMENTNODE</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>1890 -3156</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
								<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>19.1.0.1864</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>187</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:connectid from="76" to="77" type="true"/>
					<sci:connectid from="77" to="78" type="true"/>
					<sci:connectid from="168" to="150" type="true"/>
					<sci:connectid from="168" to="193" type="true"/>
					<sci:connectid from="148" to="149" type="true"/>
					<sci:connectid from="149" to="168" type="true"/>
					<sci:connectid from="149" to="172" type="true"/>
					<sci:connectid from="151" to="152" type="true"/>
					<sci:connectid from="152" to="153" type="true"/>
					<sci:connectid from="153" to="154" type="true"/>
					<sci:connectid from="154" to="148" type="true"/>
					<sci:connectid from="154" to="165" type="false"/>
					<sci:connectid from="172" to="188" type="true"/>
					<sci:connectid from="188" to="174" type="true"/>
					<sci:connectid from="156" to="157" type="true"/>
					<sci:connectid from="157" to="158" type="true"/>
					<sci:connectid from="158" to="159" type="true"/>
					<sci:connectid from="160" to="161" type="true"/>
					<sci:connectid from="161" to="156" type="true"/>
					<sci:connectid from="161" to="162" type="true"/>
					<sci:connectid from="162" to="182" type="true"/>
					<sci:connectid from="182" to="163" type="true"/>
					<sci:connectid from="92" to="167" type="true"/>
					<sci:connectid from="167" to="93" type="true"/>
					<sci:connectid from="93" to="94" type="true"/>
					<sci:connectid from="169" to="184" type="true"/>
					<sci:connectid from="184" to="186" type="true"/>
					<sci:connectid from="186" to="192" type="true"/>
					<sci:connectid from="192" to="191" type="true"/>
					<sci:connectid from="191" to="185" type="true"/>
					<sci:connectid from="185" to="187" type="true"/>
					<sci:version iVal="27"/>
				</sci:protocol>
			</sci:data>
			<sci:connectid from="2" to="4" type="true"/>
			<sci:connectid from="4" to="6" type="true"/>
			<sci:connectid from="6" to="10" type="true"/>
			<sci:version iVal="73"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
