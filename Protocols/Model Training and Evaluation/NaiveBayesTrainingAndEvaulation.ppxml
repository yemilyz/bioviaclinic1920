<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="NaiveBayesTrainingAndEvaulation" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
				<sci:member>Reporting Chart Display Type</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting Chart Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
				<sci:legalval selected="true">Default</sci:legalval>
				<sci:legalval>Interactive</sci:legalval>
				<sci:legalval>Image</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>clinic1920</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Jan 25 13:48:58 2020</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>19.1.0.1963</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>MLModelTesting</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{4E073CC5-F03B-4422-9B7E-AAD2664E00C6}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>labeledDataModelTesting</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>clinic1920\NaiveBayesTrainingAndEvaulation</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Excel Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
						<sci:member>Keep Properties</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:value>userdata:/features_20.csv</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>SheetTag</sci:member>
						<sci:member>SheetName</sci:member>
						<sci:legalval selected="true">AllSheets</sci:legalval>
						<sci:legalval>ActiveSheet</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
					</sci:arg>
					<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
						<sci:legalval>SheetNumber</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>AllLines</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>DateFormat</sci:member>
						<sci:member>PreserveExcelFormats</sci:member>
						<sci:member>Reduced Memory Usage</sci:member>
						<sci:member>Extract Comments</sci:member>
						<sci:member>Cells can contain Arrays</sci:member>
						<sci:member>Array Element Delimiter</sci:member>
						<sci:member>Read Background Color</sci:member>
						<sci:member>Treat empty cells as non-existant</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
						<sci:legalval selected="true">Text</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
					</sci:arg>
					<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Extract Comments</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>merge_tagname</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
						<sci:legalval/>
						<sci:legalval>1</sci:legalval>
						<sci:legalval selected="true">2</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Cells can contain Arrays</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Array Element Delimiter</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
						<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
						<sci:legalval selected="true">\n</sci:legalval>
						<sci:legalval>;</sci:legalval>
						<sci:legalval>,</sci:legalval>
						<sci:legalval>:</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Read Background Color</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Treat empty cells as non-existant</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>765 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
						<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1778</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{42710C1E-A47B-48F8-8638-901F5BBA2886}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Learn Good From Bad" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the model component that will be created in the LearnedProperties folder on your user tab.  This is also the base name of the properties that can be calculated by that component.</sci:help>
						<sci:validscript>if Parameter(&apos;Name&apos;) is defined and Parameter() ne &apos;&apos; and Parameter() eq Parameter(&apos;Name&apos;) then
	#valid := False;
	setinvaliddetails(&apos;Value must be different from that of &quot;Name&quot;&apos;);
else
	#valid := True;
end if;

#valid</sci:validscript>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>A Boolean PilotScript expression that is used to distinguish the &quot;good&quot; samples from the &quot;bad&quot; (baseline) samples. The expression should be True for each &quot;good&quot; sample and False for all others.</sci:help>
						<sci:value>Dev == True;</sci:value>
					</sci:arg>
					<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The properties to learn from.  Options are:
&lt;ul&gt;
&lt;li&gt;AllPropertiesOnFirstData: Uses all properties that are found on the first data record.
&lt;li&gt;CalculablePropertiesOnFirstData: Uses all calculable properties found on the first data record.
&lt;li&gt;UserSet: Uses the properties specified by &lt;i&gt;UserSet&lt;/i&gt;.  Property ranges can be given by providing the first and last property in the range separated by a hyphen. Properties can be referred to by index using the word &quot;Column&quot; followed by the index, such as &quot;Column3-Column10&quot;.
&lt;/ul&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Input string properties with any of the following values (independent of case) are treated as Boolean: &quot;True&quot;, &quot;False&quot;, &quot;Yes&quot;, &quot;No&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. If you wish such properties to be treated as strings instead, you should modify the values with a prefix or suffix. E.g., change &quot;T&quot; to &quot;T.&quot; or &quot;TT&quot;.
&lt;/ul&gt;</sci:help>
						<sci:member>UserSet</sci:member>
						<sci:member>IgnoreProperties</sci:member>
						<sci:legalval selected="true">AllPropertiesOnFirstData</sci:legalval>
						<sci:legalval>CalculablePropertiesOnFirstData</sci:legalval>
						<sci:legalval>UserSet</sci:legalval>
					</sci:arg>
					<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to use for learning. 
&lt;p&gt;If an item on the list contains a hyphen (e.g., &quot;X1-X5&quot;), and the properties on either side of the hyphen (e.g., &quot;X1&quot;, &quot;X5&quot;) are defined on the first data record, then all properties in that range are included. Note that the properties within the specified range are determined by the order of properties in the property list. Thus, if properties in the property list are in the following order: X1, X2, X5, X3, X4, X6, then the range &quot;X1-X5&quot; will only include properties X1, X2, and X5.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set UseProperties to UserSet&apos;);
Parameter(&apos;UseProperties&apos;) eq &apos;UserSet&apos; or Parameter(&apos;UseProperties&apos;) eq &apos;UserAndIngredientSet&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of properties to exclude.  This can be used, for example, if &lt;i&gt;UseProperties&lt;/i&gt; is &lt;i&gt;AllPropertiesOnFirstData&lt;/i&gt;, but there is a small subset of properties you wish not to use in  building the model.</sci:help>
						<sci:value>pdb_code, Name, DI_all</sci:value>
					</sci:arg>
					<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;

&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.

&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.

&lt;li&gt;Track Property Ranges: Tracks the ranges of property values seen in the input data in order to alert you to any out-of-range values found when you make predictions with the model. This helps indicate the model&apos;s domain of applicability and the degree to which you can trust the predicted values. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when the value of any property is outside the range of that property&apos;s values in the training data. 

&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model as an indicator of the model&apos;s applicability when making predictions. The OPS approach typically results in tighter boundaries around the training data than does simply tracking the property ranges. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample lies within or outside the training data range for each principal component. If you select this option, you do not need to select &quot;Track Property Ranges&quot;; the property range tracking is done as part of the OPS analysis.

&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.

&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.

&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.

&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.

&lt;li&gt;Do Not Coerce to Boolean: Retain property values such as the following as strings rather than coercing them to Boolean values: &quot;true&quot;, &quot;false&quot;, &quot;yes&quot;, &quot;no&quot;, &quot;T&quot;, &quot;F&quot;, &quot;Y&quot;, &quot;N&quot;. 

&lt;/ul&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.

&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.

&lt;li&gt;If you select the &quot;Track Property Ranges&quot; or &quot;Perform OPS Analysis&quot; option and wish to track the features of a fingerprint property in addition to categorical property values, then perform the following steps: Right-click the model component and select &quot;Edit...&quot;. Add a new parameter named &quot;Model Domain Fingerprint&quot;. A message alerts you that a duplicate parameter was found. Click the Yes button to re-use the parameter. Click OK on the dialog. Then enter the name of your fingerprint property as the value of &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Model Domain Fingerprint</sci:member>
						<sci:member>Numeric Distance Function</sci:member>
						<sci:member>Fingerprint Distance Function</sci:member>
						<sci:member>Additional Properties</sci:member>
						<sci:member>Cost Matrix</sci:member>
						<sci:legalval>Save Training Properties</sci:legalval>
						<sci:legalval>Encrypt Data</sci:legalval>
						<sci:legalval>Track Property Ranges</sci:legalval>
						<sci:legalval>Perform OPS Analysis</sci:legalval>
						<sci:legalval selected="true">Validate Models</sci:legalval>
						<sci:legalval selected="true">Remove Uninformative Bins</sci:legalval>
						<sci:legalval>Ignore Uninformative Bins</sci:legalval>
						<sci:legalval selected="true">Equipopulate Bins</sci:legalval>
						<sci:legalval>Do Not Coerce to Boolean</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
						<sci:member>Numeric Scaling</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval selected="true">Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
						<sci:legalval>Mahalanobis</sci:legalval>
						<sci:legalval>One Minus Correlation</sci:legalval>
						<sci:legalval>One Minus Squared Correlation</sci:legalval>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval>Tanimoto</sci:legalval>
					</sci:arg>
					<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Mean-Center and Scale</sci:legalval>
						<sci:legalval selected="true">Scale by Number of Dimensions</sci:legalval>
						<sci:legalval>Correct for Missing Values</sci:legalval>
					</sci:arg>
					<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. This distance is used by the built model to determine the closest training samples when you specify that the model should output the closest samples.

&lt;p&gt;The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;);</sci:enabledscript>
						<sci:legalval>Cosine</sci:legalval>
						<sci:legalval>Dice</sci:legalval>
						<sci:legalval selected="true">Tanimoto</sci:legalval>
						<sci:legalval>Euclidean</sci:legalval>
						<sci:legalval>Manhattan</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Cost Matrix" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Optional cost matrix for determining the Best Split. It is a comma-separated list of 4 values, in order: TP (weight for true positives), FN (weight for false negatives), FP (weight for false positives), and TN (weight for true negatives).

If not provided, a matrix is used that minimizes the the sum of the percent misclassified for category members and for category nonmembers: [0, 1, #P/#N, 0], where #P is the number of positive samples, and #N is the number of negative samples. </sci:help>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>WhenFinished</sci:member>
						<sci:member>DestinationFolder</sci:member>
						<sci:member>Create Proxy Component</sci:member>
						<sci:member>Post-Processing Script</sci:member>
						<sci:member>NumberOfBins</sci:member>
					</sci:arg>
					<sci:arg name="NumberOfBins" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="WhenFinished" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies what the learner should do when finished building the model. Options are:
&lt;ul&gt;
&lt;li&gt;Nothing: Do nothing.
&lt;li&gt;DisplayMessage: Display a dialog telling you that the model has been built.
&lt;li&gt;ShowStatisticsTable: Show a table in a browser of the model&apos;s parameters and various statistical measures.
&lt;li&gt;OutputStatisticsTableReport: Send a Reporting element containing the statistics table out the Pass port. This can then be saved or embedded in a larger report. 
&lt;li&gt;OutputStatistics: Send the raw content of the statistics table out the Pass port on multiple data records.
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Nothing</sci:legalval>
						<sci:legalval>DisplayMessage</sci:legalval>
						<sci:legalval>ShowStatisticsTable</sci:legalval>
						<sci:legalval>OutputStatisticsTableReport</sci:legalval>
						<sci:legalval>OutputStatistics</sci:legalval>
					</sci:arg>
					<sci:arg name="DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The folder into which the model should be registered</sci:help>
						<sci:value>$(Username)/LearnedProperties</sci:value>
					</sci:arg>
					<sci:arg name="Create Proxy Component" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Specifies whether to create a proxy component for the model (with the name &lt;i&gt;LearnedPropertyName&lt;i&gt;_proxy). For very large models, this allows pooled Pipeline Pilot server processes to hold the model in memory between runs. After the first run, this eliminates the overhead of loading the model when making predictions, which can dramatically increase the prediction speed.
&lt;p&gt;
To use the proxy component, first run a single prediction in a named pool using the actual model component (see the protocol-level __PoolID implementation parameter). You can do this directly, or have a protocol which does this run in the background at Pipeline Pilot startup time. Then use the proxy component for subsequent predictions. 
&lt;p&gt;
If &lt;i&gt;Create Proxy Component&lt;/i&gt; is True, then the default value of &lt;i&gt;Use Memory Cache&lt;/i&gt; on the model component is also set to True.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Post-Processing Script" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
					</sci:arg>
					<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 09 17:33:32 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
					</sci:arg>
					<sci:arg name="DuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication exists in the training set</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="GoodDuplicationEstimate" type="DoubleType" required="false" visibility="nevershow" multi="false">
						<sci:help>Our estimate of how much duplication of the good sample exists in the training set (on top of any duplication already declared using DuplicationEstimate)</sci:help>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="DecorrelationType" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The type of runtime decorrelation to perform</sci:help>
						<sci:legalval selected="true">NoDecorrelation</sci:legalval>
						<sci:legalval>MostPositiveFeature</sci:legalval>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Learn Good From Bad</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>LEARNNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2865 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Builds a two-class Laplacian-modified Bayesian categorization model</sci:value>
						<sci:value>The model distinguishes &quot;good&quot; data records from &quot;bad&quot; records. (Here &quot;good&quot; and &quot;bad&quot; are arbitrary labels to distinguish two classes of samples.) The name of the model is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;, and the new model is stored as a component in the LearnedProperties folder of your user tab. &lt;/p&gt;

&lt;P&gt;&lt;I&gt;TestForGood&lt;/I&gt; is a PilotScript expression you specify that returns True when a given sample is a member of the &quot;good&quot; class.&lt;/P&gt;

&lt;P&gt;The properties used to build the model may be numerical, fingerprint, or textual descriptors. &lt;I&gt;UseProperties&lt;/I&gt; specifies the descriptors to use.

&lt;P&gt;The learned model component predicts a property whose name is given by &lt;I&gt;LearnedPropertyName&lt;/I&gt;. The property value is a score indicating the relative likelihood of a sample being in the &quot;good&quot; class. Positive values which is the same as the name of the component. As a calculable property, the property can be calculated &quot;on-the-fly&quot; using only the name in PilotScript and in the parameters of many components. &lt;/P&gt;

&lt;p&gt;&lt;strong&gt;See Also: &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn 
    Good Molecules:&lt;/a&gt; Performs a similar analysis on molecular data records 
    using molecular properties.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{6E0971E2-1096-48C0-9A7A-7051B124E191}&apos;)&quot;&gt;Learn 
    Property:&lt;/a&gt; Creates a model of a continuous variable (regression model) rather than a classification model.&lt;/li&gt;
&lt;li&gt;For additional learning methods for both regression and classification problems, see the other available learners. For example, use &lt;a href=&quot;javascript:DoLink(&apos;{40F9E147-1D71-4141-A274-6E845F79E158}&apos;)&quot;&gt;Learn RP Tree Model&lt;/a&gt; to build a recursive partitioning classification model for either a binary or multi-category property. Use &lt;a href=&quot;javascript:DoLink(&apos;{3B00C062-5352-4211-9258-7D3242D16076}&apos;)&quot;&gt;Learn GFA Model&lt;/a&gt; to create a population of regression models based on optimal subsets of the descriptors you specify. Use &lt;a href=&quot;javascript:DoLink(&apos;{8750BDE8-DE7C-4985-89E9-B6D99255BD81}&apos;)&quot;&gt;Learn R Support Vector Machine Model&lt;/a&gt; to build a cross-validated, parameter-optimized regression or classification model using the SVM method.
&lt;li&gt;To evaluate the built model against a test set of data, use the &lt;a href=&quot;javascript:DoLink(&apos;{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}&apos;)&quot;&gt;ROC Plot Viewer&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple classification models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1468</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="New Learned Property" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>For relearning</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>20</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{B8C5936E-F831-4B92-B17F-EC77C533B273}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Learners\Learn Good From Bad</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol>
					<sci:data object="SciTegic.CollectStatistics.1">
						<sci:component name="Generate Statistics" version="2">
							<sci:arg name="LearnedPropertyName" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>$(LearnedPropertyName)</sci:value>
							</sci:arg>
							<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false">
								<sci:help>Parameter Description</sci:help>
								<sci:value>$(TestForGood)</sci:value>
							</sci:arg>
							<sci:arg name="UseProperties" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>The properties to learn from: 
  &apos;AllPropertiesOnFirstData&apos; uses all those that are found
on the first data object;
  &apos;CalculablePropertiesOnFirstData&apos; uses all those that are
found on the first data that can be calculated;
  &apos;PredefinedSet&apos; takes the properties selected by the user
on a pulldown list parameter named PredefinedSet;
  &apos;UserSet&apos; takes the list of properties from the parameter
UserSet.  Property ranges can be given by giving the first
and last property in the range separated by a hyphen; 
properties can be referred to by index using the word &quot;Column&quot;
followed by the index, i.e., Column3-Column10.
</sci:help>
								<sci:value>$(UseProperties)</sci:value>
							</sci:arg>
							<sci:arg name="PredefinedSet" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
								<sci:metaproplist>
									<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAEzQSBwcmVkZWZpbmVkIHNldCBvZiBwcm9wZXJ0aWVzIHRvIHVzZSBmb3IgbGVhcm5pbmcsU3RyaW5nVHlwZQAIAAAAAQEAAQAEAPwAAAAAAAAAAAA4UHJlZGVmaW5lZFNldAPMU8+7BAA=</sci:propval>
									<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
									<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
									<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
								</sci:metaproplist>
								<sci:help>A predefined set of properties to use for learning</sci:help>
								<sci:value>#val := &apos;&apos;;
if @PredefinedSet is defined then
	#val := @PredefinedSet;
end if;

#val</sci:value>
							</sci:arg>
							<sci:arg name="UserSet" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>A comma-separated list of properties to use for learning. 
If an item on the list contains a hyphen, and the names on either side are defined
on the first data item, then all properties in that range are added.</sci:help>
								<sci:value>$(UserSet)</sci:value>
							</sci:arg>
							<sci:arg name="IgnoreProperties" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>A comma-separated list of properties to ignore.  This is used, for example, if UseProperties is AllPropertiesOnFirstData, but there is a small set of undesirable properties you don&apos;t wish to use but can&apos;t remove (i.e., record names)</sci:help>
								<sci:value>$(IgnoreProperties)</sci:value>
							</sci:arg>
							<sci:arg name="New Learned Property" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:value>$(New Learned Property)</sci:value>
							</sci:arg>
							<sci:arg name="Old Learned Property" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:value>$(Old Learned Property)</sci:value>
							</sci:arg>
							<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>Contains less commonly used parameters</sci:help>
								<sci:member>Learn Options</sci:member>
								<sci:member>WhenFinished</sci:member>
								<sci:member>DestinationFolder</sci:member>
								<sci:member>Create Proxy Component</sci:member>
								<sci:member>Cost Matrix</sci:member>
								<sci:member>Post-Processing Script</sci:member>
								<sci:member>NumberOfBins</sci:member>
							</sci:arg>
							<sci:arg name="NumberOfBins" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>When subdividing continuous variables, the number of initial bins to divide them into</sci:help>
								<sci:value>$(NumberOfBins)</sci:value>
							</sci:arg>
							<sci:arg name="Learn Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true" uimpl="false">
								<sci:help>Specifies additional preferences affecting the building of the model and information saved with the model. Options are:
&lt;ul&gt;
&lt;li&gt;Save Training Properties: Saves the properties of the training data in the model component for later use. This allows you to use &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt; to rebuild the model with new data added to the original data. In addition, you can determine the distance of a sample to the closest training samples when making predictions with the model. (Use &lt;i&gt;Numeric Distance Function&lt;/i&gt; to specify the distance measure to use.) For identifying training samples, the model uses the &lt;b&gt;Name&lt;/b&gt; property. If no such property exists in your training data, the names &lt;b&gt;Train1&lt;/b&gt;, &lt;b&gt;Train2&lt;/b&gt;, etc. are used. The &quot;Save Training Properties&quot; option increases the on-disk size of the model component in proportion to the quantity of training data.
&lt;li&gt;Encrypt Data: If saving training properties, specifies that the data are to be encrypted to prevent direct access. The data will still be available for &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;, but will not be recoverable in unencrypted form from the model component.
&lt;li&gt;Perform OPS Analysis: Performs a principal components analysis to determine the optimum prediction space (OPS) of the model in order to establish the model&apos;s applicability domain. Also records the range of each input property in your training data. If you then choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions with the model on new data, the model output indicates whether each new sample is within or outside the training data range.
&lt;li&gt;Track Fingerprint Features: Tracks the values of any categorical (string) input properties and features of the fingerprint specified by &lt;i&gt;Model Domain Fingerprint&lt;/i&gt;. If you choose the &lt;i&gt;ModelName&lt;/i&gt;_Applicability output when making predictions, you are warned when a sample contains any categorical property value or fingerprint feature not seen in the training data, or lacks any feature appearing in all of the training samples.
&lt;li&gt;Validate Models: Computes leave-one-out cross-validation statistics and add this information to the model component help.
&lt;li&gt;Remove Uninformative Bins: Removes bins that make only a small contribution to the model score (smaller in magnitude than 0.05). This decreases the amount of disk space required to save the model component.
&lt;li&gt;Ignore Uninformative Bins: Retains bins that make only a small contribution to the model score, but ignore these bins when making predictions. Scores obtained with this option are identical to those with &quot;remove Uninformative Bins&quot;, but retaining the extra information allows formerly uninformative bins to become informative when adding new data to the model with &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;.
&lt;li&gt;Equipopulate Bins: Subdivides continuous variables so that each bin contains roughly the same number of samples.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The Bayesian method used by this learner is highly efficient and can create a model from even hundreds of thousands of data records in a short time. By contrast, the PCA calculation required by the &quot;Perform OPS Analysis&quot; option is much slower and can increase the learning time by an order of magnitude or more for a large training set. It is best to use this option by re-training from the same data set &lt;i&gt;after&lt;/i&gt; you have validated a model built with this learner and have decided to keep the model for later use.
&lt;li&gt;For models created by this learner, it is not strictly necessary to specify &quot;Save Training Properties&quot; in order to extend the model with new data using &lt;a href=&quot;javascript:DoLink(&apos;{ABCDEFED-AAAA-BBBB-CCCC-DDDDEEEEFFFF}&apos;)&quot;&gt;New Model from Old&lt;/a&gt;. However, if you wish to obtain cross-validation statistics for the extended model, you must save the training properties.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the optimum prediction space approach, see U.S. Patent 6,036,349, &quot;Method and apparatus for validation of model-based predictions.&quot; You can find it at &lt;a href=&quot;javascript:DoLink(&apos;http://patft.uspto.gov/netahtml/PTO/srchnum.htm&apos;)&quot;&gt;the US Patent Number Search site.&lt;/a&gt;
&lt;/ul&gt;</sci:help>
								<sci:member>Model Domain Fingerprint</sci:member>
								<sci:member>Numeric Distance Function</sci:member>
								<sci:member>Fingerprint Distance Function</sci:member>
								<sci:value>$(Learn Options)</sci:value>
							</sci:arg>
							<sci:arg name="Numeric Distance Function" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>For numeric properties and categorical properties other than fingerprints, specifies the function to use for computing the distance between two data records.  The expressions for the following distance functions assume that each record has numerical properties x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;,&amp;hellip;, with x&lt;sub&gt;1A&lt;/sub&gt;, x&lt;sub&gt;2A&lt;/sub&gt;,&amp;hellip; the values for record A and x&lt;sub&gt;1B&lt;/sub&gt;, x&lt;sub&gt;2B&lt;/sub&gt;,&amp;hellip; the values for record B. 
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Euclidean: Distance (D) is the square-root of the sum of squared differences between corresponding property values: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 upward.
&lt;li&gt;Manhattan: Distance is the sum of the absolute value of the differences between corresponding property values: D = &amp;sum;&amp;nbsp;|x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;|. Possible values range from 0 upward.
&lt;li&gt;Mahalanobis: A generalization of the Euclidean distance that accounts for correlations between different properties. The distance is defined as: D = [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;iB&lt;/sub&gt;)(&lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt;)&lt;sub&gt;ij&lt;/sub&gt;(x&lt;sub&gt;jA&lt;/sub&gt;&amp;minus; x&lt;sub&gt;jB&lt;/sub&gt;)]&lt;sup&gt;1/2&lt;/sup&gt;, where &lt;b&gt;S&lt;/b&gt;&lt;sup&gt;&amp;minus;1&lt;/sup&gt; is the inverse of the covariance matrix for the entire data set. Possible values range from 0 upward.
&lt;li&gt;One Minus Correlation: Distance is 1 minus the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Correlation&apos;)&quot;&gt;Pearson correlation coefficient&lt;/a&gt; between the vectors of property values for the two records. Possible values range from 0 to 2. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;One Minus Squared Correlation: Distance is 1 minus the square of the Pearson correlation coefficient between the vectors of property values for the two records. Use this function if you wish both strong correlation and strong anti-correlation to indicate that two records are &quot;near&quot;. Possible values range from 0 to 1. (With two or fewer properties on each record, this is not a meaningful distance function.)
&lt;li&gt;Cosine: Distance is 1 minus the cosine of the angle between the vectors defined by the properties of the two records: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;&amp;nbsp;&amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 2.
&lt;li&gt;Dice: Distance is a generalization to continuous properties of the Dice distance for binary fingerprints: D = 1 &amp;minus; 2 &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt;]. Possible values range from 0 to 2.
&lt;li&gt;Tanimoto: Distance is a generalization to continuous properties of the Tanimoto distance for binary fingerprints: D = 1 &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt; / [&amp;sum;(x&lt;sub&gt;iA&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; + &amp;sum;(x&lt;sub&gt;iB&lt;/sub&gt;)&lt;sup&gt;2&lt;/sup&gt; &amp;minus; &amp;sum;&amp;nbsp;x&lt;sub&gt;iA&lt;/sub&gt;x&lt;sub&gt;iB&lt;/sub&gt;]. Possible values range from 0 to 1.3333.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For Euclidean, Manhattan, and Mahalanobis distances, the difference between two string (categorical) values is considered 0 if the strings are identical, or 1 if they are not.  For Cosine, Dice, and Tanimoto distances, the product of two string values is considered 1 if the strings are identical, or 0 if they are not. String properties are ignored for both correlation options.
&lt;li&gt;If a property is an array, then differences or products are taken element-by-element for the entire array. If the array on one record is shorter than on the other, unmatched elements of the longer array are ignored.
&lt;li&gt;For the Mahalanobis option, if the data are so highly-correlated that the covariance matrix is singular or nearly so, then the &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Moore-Penrose_pseudoinverse&apos;)&quot;&gt;Moore-Penrose pseudoinverse&lt;/a&gt; is used instead of the inverse. If even the pseudoinverse cannot be computed (due to &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Singular_value_decomposition&apos;)&quot;&gt;SVD&lt;/a&gt; non-convergence), an error occurs. In this case, you must use an alternative distance function.
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on several of the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;.
&lt;li&gt;For more on the Mahalanobis distance, see &lt;a href=&quot;javascript:DoLink(&apos;http://en.wikipedia.org/wiki/Mahalanobis_distance&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;/ul&gt;</sci:help>
								<sci:member>Numeric Scaling</sci:member>
								<sci:value>$(Numeric Distance Function)</sci:value>
							</sci:arg>
							<sci:arg name="Numeric Scaling" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
								<sci:help>Settings controlling the scaling of numeric data when computing distances.  Options are:
&lt;ul&gt;
&lt;li&gt;Mean-Center and Scale: Shifts and scales each property to have a mean of 0 and standard deviation of 1.  For Euclidean, Manhattan, Cosine, Dice, and Tanimoto distances, this is a recommended option, as it puts all numeric properties on equal footing.  Without such scaling, properties with a large typical magnitude (e.g., 1000) dominate the calculated distance, while properties with a small typical magnitude (e.g., 1) have minimal effect. (For Mahalanobis and correlation distances, this option has no effect on the calculated distance.)
&lt;li&gt;Scale by Number of Dimensions: For Euclidean, Manhattan, and Mahalanobis distances only, divides the computed distance by P (Manhattan) or P&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean and Mahalanobis), where P is the number of properties (or total number of elements if some properties are arrays). This ensures that the typical magnitude of computed distances remains unchanged as you vary the number of properties in the calculation.
&lt;li&gt;Correct for Missing Values: For Euclidean and Manhattan distances only, multiplies the computed distance by P&lt;sub&gt;exp&lt;/sub&gt;/P (Manhattan) or (P&lt;sub&gt;exp&lt;/sub&gt;/P)&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where P&lt;sub&gt;exp&lt;/sub&gt; is the expected number of properties (or expected total number of elements if some properties are arrays) in the absence of missing values. This ensures that the typical magnitude of computed distances remains unchanged when some properties are missing. Specifically, it ensures that distances to data records with missing properties are not unusually small as an artifact of the missing data. This option does not apply if &quot;Scale by Number of Dimensions&quot; is selected, as that option already corrects for missing properties implicitly.
&lt;/ul&gt;
If none of the above options are selected, no rescaling is applied to the data. This is appropriate if all numeric properties already have the same characteristic scale or represent components of a vector in the same space (e.g., spatial x, y, z coordinates), and no properties are missing from any of the data records.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you specify more than one fingerprint property to use in the distance calculation, then the &quot;Scale by Number of Dimensions&quot; and &quot;Correct for Missing Values&quot; options apply to the fingerprint component of distance as well as to the numeric component. Specifically, Pfp and Pfp&lt;sub&gt;exp&lt;/sub&gt; are used in the scaling of the summed fingerprint distances, where Pfp is the number of fingerprint properties and Pfp&lt;sub&gt;exp&lt;/sub&gt; is the expected number.
&lt;li&gt;&quot;Scale by Number of Dimensions&quot; also applies to fingerprint distances when you specify Euclidean or Manhattan as the &lt;i&gt;Fingerprint Distance Function&lt;/i&gt;. In this case, the distance for each fingerprint property is divided by C (Manhattan) or C&lt;sup&gt;1/2&lt;/sup&gt; (Euclidean), where C is the total count of features over both data records (i.e., the &quot;or&quot; bit count).
&lt;/ul&gt;</sci:help>
								<sci:value>$(Numeric Scaling)</sci:value>
							</sci:arg>
							<sci:arg name="Fingerprint Distance Function" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
								<sci:help>For fingerprint properties, specifies the function to use for computing the distance between two data records. The expressions for the following distance functions assume that each record has a single fingerprint property, with quantities SA, SB, and SC defined as follows:
&lt;p&gt;
SA: Number of fingerprint features common to both records. (Number of &quot;and&quot; bits.)&lt;br&gt;
SB: Number of features present in the first record but absent from the second.&lt;br&gt;
SC: Number of features present in the second record but absent from the first.
&lt;p&gt;
Options and their mathematical definitions are:
&lt;ul&gt;
&lt;li&gt;Cosine: Distance (D) is 1 minus the cosine of the angle between the two fingerprints when treated as binary vectors (vectors whose elements must be 0 or 1): D = 1 &amp;minus; SA / [(SA + SB)(SA + SC)]&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to 1.
&lt;li&gt;Dice: Distance is 1 minus the number of &quot;and&quot; bits scaled by the mean number of &quot;on&quot; bits for both records: D = 1 &amp;minus; 2 SA / (2SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Tanimoto: Distance is 1 minus the number of &quot;and&quot; bits scaled by the number of &quot;or&quot; bits: D = 1 &amp;minus; SA / (SA + SB + SC). Possible values range from 0 to 1.
&lt;li&gt;Euclidean: Distance is the square-root of the number of &quot;on&quot; bits in the squared difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = (SB + SC)&lt;sup&gt;1/2&lt;/sup&gt;. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;li&gt;Manhattan: Distance is the number of &quot;on&quot; bits in the absolute difference between the two fingerprints when treated as vectors. For a binary fingerprint, this can be expressed as: D = SB + SC. Possible values range from 0 to the total number of features possible in a single fingerprint.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When more than one fingerprint property is present, a separate distance value is computed for each, and the results are summed or averaged (depending on the &lt;i&gt;Numeric Scaling&lt;/i&gt; options).
&lt;li&gt;If you specify both numeric and fingerprint properties to use in the distance calculations, separate contributions to the distance are computed for the two types of property. The overall distance is the average of the two: D = 0.5(D&lt;sub&gt;numeric&lt;/sub&gt; + D&lt;sub&gt;FP&lt;/sub&gt;). Take care to specify appropriate &lt;i&gt;Numeric Scaling&lt;/i&gt; options for this case in order to prevent one or the other of these distance contributions from dominating.
&lt;/ul&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For more on the distance measures described here, see: &lt;a href=&quot;javascript:DoLink(&apos;http://www.dddc.ac.cn/embo04/material/Willett_1998.pdf&apos;)&quot;&gt; P. Willett, J.M. Barnard, and G.M. Downs, &quot;Chemical Similarity Searching,&quot; &lt;i&gt;J. Chem. Inf. Comput. Sci.&lt;/i&gt;, &lt;b&gt;38&lt;/b&gt;, 983 (1998)&lt;/a&gt;. Also see: J.C. Gower, &quot;Measures of Similarity, Dissimilarity, and Distance,&quot; in &lt;i&gt;Encyclopedia of Statistical Sciences&lt;/i&gt;, S. Kotz, N.L. Johnson, Read C.B., eds., Vol. 5, p. 397 (1985).
&lt;/ul&gt;
</sci:help>
								<sci:value>$(Fingerprint Distance Function)</sci:value>
							</sci:arg>
							<sci:arg name="Model Domain Fingerprint" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Name of fingerprint property to use in order to determine whether a test sample is within the applicability domain of the learned model. Any features seen in a test sample but not in any training sample will be noted in the &lt;i&gt;ModelName&lt;/i&gt;_Applicability property when making predictions with the model.</sci:help>
								<sci:value>$(Model Domain Fingerprint)</sci:value>
							</sci:arg>
							<sci:arg name="WhenFinished" type="StringType" required="true" visibility="visible" multi="false">
								<sci:help>Argument Description</sci:help>
								<sci:legalval selected="true">OutputLearnedProperty</sci:legalval>
								<sci:legalval>OutputDistribution</sci:legalval>
								<sci:legalval>OutputStatistics</sci:legalval>
								<sci:legalval>OutputNothing</sci:legalval>
							</sci:arg>
							<sci:arg name="DestinationFolder" type="StringType" required="false" visibility="visible" multi="false">
								<sci:value>$(DestinationFolder)</sci:value>
							</sci:arg>
							<sci:arg name="Create Proxy Component" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:metaproplist>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Specifies whether to create a proxy component for the model (with the name &lt;i&gt;LearnedPropertyName&lt;i&gt;_proxy). For very large models, this allows pooled Pipeline Pilot server processes to hold the model in memory between runs. After the first run, this eliminates the overhead of loading the model when making predictions, which can dramatically increase the prediction speed.
&lt;p&gt;
To use the proxy component, first run a single prediction in a named pool using the actual model component (see the protocol-level __PoolID implementation parameter). You can do this directly, or have a protocol which does this run in the background at Pipeline Pilot startup time. Then use the proxy component for subsequent predictions. 
&lt;p&gt;
If &lt;i&gt;Create Proxy Component&lt;/i&gt; is True, then the default value of &lt;i&gt;Use Memory Cache&lt;/i&gt; on the model component is also set to True.</sci:help>
								<sci:value>$(Create Proxy Component)</sci:value>
							</sci:arg>
							<sci:arg name="Cost Matrix" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:value>$(Cost Matrix)</sci:value>
							</sci:arg>
							<sci:arg name="Post-Processing Script" type="ExpressionType" required="false" visibility="hidden" multi="false">
								<sci:help>An optional PilotScript expression that is applied to the learned model after
it is built.  This can be used, for example, to set defaults or help text.</sci:help>
								<sci:value>$(Post-Processing Script)</sci:value>
							</sci:arg>
							<sci:arg name="DuplicationEstimate" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>Our estimate of how much duplication exists in the training set</sci:help>
								<sci:value>$(DuplicationEstimate)</sci:value>
							</sci:arg>
							<sci:arg name="GoodDuplicationEstimate" type="StringType" required="false" visibility="hidden" multi="false">
								<sci:help>Our estimate of how much duplication of the good sample exists in the training set (on top of any duplication already declared using DuplicationEstimate)</sci:help>
								<sci:value>$(GoodDuplicationEstimate)</sci:value>
							</sci:arg>
							<sci:arg name="IncludeAllNamesAndValues" type="StringType" required="false" visibility="visible" multi="false">
								<sci:help>Whether to include the properties &lt;modelname&gt;_AllNames and &lt;modelname&gt;_AllValues in the output list.  These contain the list of all possible properties and values.</sci:help>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Additional Properties" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Comma-separated list of properties to be saved with the model when &quot;Save Training Properties&quot; is selected as one of the &lt;i&gt;Learn Options&lt;/i&gt;. These properties are in addition to those used to build the model, as specified by &lt;i&gt;UseProperties&lt;/i&gt;. When making predictions with the model, the values of the &lt;i&gt;Additional Properties&lt;/i&gt; are shown for the closest training samples when you select the &quot;_ClosestSample&quot; option from the list of available outputs on the model component.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you have selected &quot;Encrypt Data&quot; as one of the &lt;i&gt;Learn Options&lt;/i&gt; for greater data security, make sure you do not subvert this security by including properties in the &lt;i&gt;Additional Properties&lt;/i&gt; list that reveal more than you wish to about your training samples.
&lt;li&gt;In the model output with the &quot;_ClosestSample&quot; option, each property in &lt;i&gt;Additional Properties&lt;/i&gt; is renamed to &lt;i&gt;ModelName&lt;/i&gt;_Closest_&lt;i&gt;PropertyName&lt;/i&gt; where &lt;i&gt;PropertyName&lt;/i&gt; is the original name of the property. 
&lt;li&gt;If you set &lt;i&gt;Number of Closest&lt;/i&gt; on the model component to a value greater than 1, the additional property values are appended to form arrays if possible. If this is not possible (e.g., for a binary image property), only the property value for the single closest sample is output.
&lt;/ul&gt;
</sci:help>
								<sci:enabledscript>SetDisabledDetails(&apos;To enable, select &quot;Save Training Properties&quot; as one of the Learn Options&apos;);

contains(Parameter(&apos;Learn Options&apos;), &apos;Save Training Properties&apos;)</sci:enabledscript>
								<sci:value>$(Additional Properties)</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
								<sci:legalval>ComponentReturnsPass</sci:legalval>
								<sci:legalval>ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="Reinitialize For Each Data" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Relearn Parameters" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Parameters to persist onto the model to refresh when relearning</sci:help>
								<sci:value>LearnedPropertyName</sci:value>
								<sci:value>TestForGood</sci:value>
								<sci:value>WhenFinished=Nothing</sci:value>
								<sci:value>Learn Options</sci:value>
								<sci:value>Model Domain Fingerprint</sci:value>
								<sci:value>Numeric Distance Function</sci:value>
								<sci:value>Numeric Scaling</sci:value>
								<sci:value>Fingerprint Distance Function</sci:value>
								<sci:value>Additional Properties</sci:value>
								<sci:value>DestinationFolder</sci:value>
								<sci:value>NumberOfBins</sci:value>
								<sci:value>Post-Processing Script</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Build model from incoming data</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>LEARNNODE</sci:value>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Registrant</sci:help>
								<sci:value>SciTegic</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Registrant Date</sci:help>
								<sci:value>Fri Jul 27 14:23:40 2001</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Version" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>2</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{A73C459F-526D-42cb-ADE7-5B5FB3479208}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Generate Statistics</sci:value>
								<sci:value>Internal Component</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
								<sci:value>None</sci:value>
								<sci:value/>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -95</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Relearn Component" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The component to use for relearning: Learn Good from Bad</sci:help>
								<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Unknown</sci:value>
							</sci:arg>
						</sci:component>
					</sci:data>
					<sci:data object="SciTegic.Protocol.1">
						<sci:component name="Perform WhenFinished Action" version="2">
							<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
								<sci:member>RunToCompletion Categorize Using</sci:member>
								<sci:legalval selected="true">False</sci:legalval>
								<sci:legalval>True - For Each Data Record</sci:legalval>
								<sci:legalval>True - For Each Category</sci:legalval>
							</sci:arg>
							<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
								<sci:member>Parallel Processing Options Batch Size</sci:member>
								<sci:member>Parallel Processing Options Server</sci:member>
								<sci:member>Parallel Processing Options Preserve Order</sci:member>
								<sci:legalval>True</sci:legalval>
								<sci:legalval selected="true">False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
								<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
								<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
								<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
								<sci:member>Parallel Processing Options Server Processes</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
								<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
								<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Run subprotocol on grid engine if available.</sci:help>
								<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
								<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
								<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
								<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
							</sci:arg>
							<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
								<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
								<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
								<sci:legalval selected="true">True</sci:legalval>
								<sci:legalval>False</sci:legalval>
							</sci:arg>
							<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
							</sci:arg>
							<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
								<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
								<sci:value>DestFolder,ModelComponentName</sci:value>
							</sci:arg>
							<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
								<sci:help>Component Attributes</sci:help>
								<sci:legalval>ComponentTakesInput</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
								<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
								<sci:legalval>ComponentRunsLocal</sci:legalval>
							</sci:arg>
							<sci:arg name="MessageText" type="ExpressionType" required="false" visibility="visible" multi="false">
								<sci:metaproplist>
									<sci:mpropval name="SCI_PromotedFrom" type="StringType">
										<sci:value>MessageText</sci:value>
									</sci:mpropval>
									<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
								</sci:metaproplist>
								<sci:help>Specifies the message to be displayed, in the form of a PilotScript expression.
Text should be quoted and the expression may also include global
property values.</sci:help>
								<sci:value>&apos;The system successfully built the model &quot;&apos; + @LearnedPropertyName + &apos;&quot;.
You will find it in your LearnedProperties folder.

You can also use the property name &quot;&apos; + @LearnedPropertyName + &apos;&quot; in 
any expression as a built-in calculable value.&apos;</sci:value>
							</sci:arg>
							<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
								<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
								<sci:legalval selected="true">Halt</sci:legalval>
								<sci:legalval>Fail</sci:legalval>
								<sci:legalval>Pass</sci:legalval>
							</sci:arg>
							<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Custom Error Message</sci:help>
							</sci:arg>
							<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>Perform WhenFInished Action</sci:value>
							</sci:arg>
							<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol AutoLayout</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
								<sci:value>DocumentNode</sci:value>
							</sci:arg>
							<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
								<sci:help>Component Revision</sci:help>
								<sci:value>790</sci:value>
							</sci:arg>
							<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>{CD602523-353D-4D15-B967-BB51D9321FE2}</sci:value>
							</sci:arg>
							<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:value>90 -455</sci:value>
							</sci:arg>
							<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>By Ref</sci:help>
								<sci:value>0</sci:value>
							</sci:arg>
							<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
								<sci:value>100</sci:value>
								<sci:value>Perform WhenFinished Action (Internal)</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value/>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
								<sci:value>Generic</sci:value>
								<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The server version when this component was registered</sci:help>
								<sci:value>18.1.0.1468</sci:value>
							</sci:arg>
							<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
							<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Sticky Notes</sci:help>
							</sci:arg>
							<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Scale</sci:help>
								<sci:value>100</sci:value>
							</sci:arg>
							<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>Protocol Options</sci:help>
								<sci:legalval>Owner Access Only</sci:legalval>
							</sci:arg>
							<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The user who registered this component.</sci:help>
								<sci:value>scitegic/modeling</sci:value>
							</sci:arg>
							<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The date this component was registered.</sci:help>
								<sci:value>Sat Jun 10 10:14:13 2017</sci:value>
							</sci:arg>
							<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
								<sci:help>Local Component Identifier</sci:help>
								<sci:value>8</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Made Link Into Copy</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
							<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
								<sci:help>The original path within the database of this component.</sci:help>
								<sci:value>Components\Analysis and Statistics\Data Modeling\Utilities\Internals\Perform WhenFinished Action</sci:value>
							</sci:arg>
							<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
								<sci:help>Subprotocol Modified</sci:help>
								<sci:value>1</sci:value>
							</sci:arg>
						</sci:component>
						<sci:protocol>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Model Statistics Viewer" version="2">
									<sci:arg name="Source" type="ComponentType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Source</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>Parameter Help</sci:help>
										<sci:member>OutputWhat</sci:member>
										<sci:member>SourceIs</sci:member>
										<sci:member>Maximum</sci:member>
										<sci:value>$(DestFolder)/$(ModelComponentName)</sci:value>
									</sci:arg>
									<sci:arg name="SourceIs" type="StringType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>SourceIs</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>Whether the Source parameter contains the name of a component in the Database, or the path to a File on the server, or the name of a Directory on the server.  (If you choose File, change the parameter type of Source to URLType for ease of entry; if you choose Directory, change the parameter type of Source to DirectoryType.)</sci:help>
										<sci:legalval selected="true">Database</sci:legalval>
										<sci:legalval>File</sci:legalval>
										<sci:legalval>Directory</sci:legalval>
									</sci:arg>
									<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>Maximum</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>If defined, the maximum number of data records to output. Leave blank to indicate that there is no limit.</sci:help>
									</sci:arg>
									<sci:arg name="OutputWhat" type="StringType" required="true" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:mpropval name="SCI_PromotedFrom" type="StringType">
												<sci:value>OutputWhat</sci:value>
											</sci:mpropval>
										</sci:metaproplist>
										<sci:help>&lt;p&gt;
Determines how to process the &lt;i&gt;Source&lt;/i&gt; component or protocol and what data to output.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; 
&quot;Component&quot; outputs a component object, which can be inspected using the component functions in PilotScript, 
and written out using the &lt;i&gt;Component Writer&lt;/i&gt; component.
&lt;/li&gt;
&lt;li&gt;
&quot;ComponentParameters&quot; is similar to Component, but returns
a data record with all of the component&apos;s parameters as properties.
&lt;/li&gt; 
&lt;li&gt;
&quot;ComponentDataParameters&quot; is similar, but returns
a data record with all of the component&apos;s data parameters as properties. This is only relevant to components generated as learned models.
&lt;/li&gt; 
&lt;li&gt;
&quot;FolderContents&quot; is only relevant when the &lt;i&gt;Source&lt;/i&gt; parameter is a folder path, and returns one data record for each component in the given folder 
(or its subfolders), with the properties Name and Path defined.
&lt;/li&gt; 
&lt;li&gt;
&quot;FolderContentsAsComponents&quot; is similar to FolderContents, but
it returns records with the actual components.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">Component</sci:legalval>
										<sci:legalval>ComponentParameters</sci:legalval>
										<sci:legalval>ComponentDataParameters</sci:legalval>
										<sci:legalval>FolderContents</sci:legalval>
										<sci:legalval>FolderContentsAsComponents</sci:legalval>
									</sci:arg>
									<sci:arg name="Output Options" type="LinkGlobalPropertyType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingRevertInfo" base64="UI1">Al1HAAKWAVNldHRpbmdzIGNvbnRyb2xsaW5nIHRoZSB2aWV3ZXIncyBvdXRwdXQuIE9wdGlvbnMgYXJlOgo8dWw+CjxsaT5PdXRwdXQgU3RhdGlzdGljczogb3V0cHV0IG1vZGVsIHN0YXRpc3RpY3MgYXMgcHJvcGVydGllcyBvbiBkYXRhIHJlY29yZHMuCjxsaT5PdXRwdXQgUmVwb3J0aW5nIEVsZW1lbnQ6IE91dHB1dCBhIFBpcGVsaW5lIFBpbG90IFJlcG9ydGluZyBlbGVtZW50IGNvbnRhaW5pbmcgdGhlIHN0YXRpc3RpY3MuIFRoaXMgYWxsb3dzIHRoZSBpbmZvcm1hdGlvbiB0byBiZSBlbWJlZGRlZCB3aXRoaW4gYSBsYXJnZXIgcmVwb3J0Lgo8bGk+U2hvdyBTdGF0aXN0aWNzIFRhYmxlIGluIEJyb3dzZXI6IERpc3BsYXkgdGhlIHN0YXRpc3RpY3MgdGFibGVkIGluIGl0cyBvd24gYnJvd3NlciB3aW5kb3cuCjwvdWw+CixTdHJpbmdUeXBlABgAAAABAQABAAQAAAAAAAAMARJPdXRwdXQgU3RhdGlzdGljcwEZT3V0cHV0IFJlcG9ydGluZyBFbGVtZW50ASFTaG93IFN0YXRpc3RpY3MgVGFibGUgaW4gQnJvd3NlcgwBEk91dHB1dCBTdGF0aXN0aWNzARlPdXRwdXQgUmVwb3J0aW5nIEVsZW1lbnQBIVNob3cgU3RhdGlzdGljcyBUYWJsZSBpbiBCcm93c2VyAAAAPE91dHB1dCBPcHRpb25zAx09w44EASFTaG93IFN0YXRpc3RpY3MgVGFibGUgaW4gQnJvd3NlcgA=</sci:propval>
											<sci:propval name="SCI_InitializeUsingOrigType">StringType</sci:propval>
											<sci:propval name="SCI_EvalOnInit" boolVal="true"/>
											<sci:propval name="SCI_EvalOnInitType">StringType</sci:propval>
										</sci:metaproplist>
										<sci:help>Settings controlling the viewer&apos;s output. Options are:
&lt;ul&gt;
&lt;li&gt;Output Statistics: output model statistics as properties on data records.
&lt;li&gt;Output Reporting Element: Output a Pipeline Pilot Reporting element containing the statistics. This allows the information to be embedded within a larger report.
&lt;li&gt;Show Statistics Table in Browser: Display the statistics tabled in its own browser window.
&lt;/ul&gt;
</sci:help>
										<sci:legalval>Output Statistics</sci:legalval>
										<sci:legalval>Output Reporting Element</sci:legalval>
										<sci:legalval>Show Statistics Table in Browser</sci:legalval>
										<sci:value>OutputOption</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
										<sci:member>RunToCompletion Categorize Using</sci:member>
										<sci:legalval selected="true">False</sci:legalval>
										<sci:legalval>True - For Each Data Record</sci:legalval>
										<sci:legalval>True - For Each Category</sci:legalval>
									</sci:arg>
									<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
										<sci:member>Parallel Processing Options Batch Size</sci:member>
										<sci:member>Parallel Processing Options Server</sci:member>
										<sci:member>Parallel Processing Options Preserve Order</sci:member>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
										<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
										<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
										<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
										<sci:member>Parallel Processing Options Server Processes</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
										<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
										<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Run subprotocol on grid engine if available.</sci:help>
										<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
										<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
										<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
										<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
									</sci:arg>
									<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
										<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
										<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
										<sci:legalval selected="true">True</sci:legalval>
										<sci:legalval>False</sci:legalval>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
										<sci:value>ModelName</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Model Statistics Viewer</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ViewerNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>790</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{E7E69421-535F-428C-9CB9-939F01ADD8A0}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -95</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Model Statistics Viewer</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>18.1.0.1468</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval>Owner Access Only</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/modeling</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Sat Jun 10 10:09:39 2017</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>7</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Modified</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Analysis and Statistics\Data Modeling\Utilities\Internals\Model Statistics Viewer</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol>
									<sci:data object="SciTegic.ComponentReader.1">
										<sci:component name="Component Reader" version="2">
											<sci:arg name="Source" type="LinkParentParameterType" required="false" visibility="visible" multi="false">
												<sci:metaproplist>
													<sci:propval name="SCI_InitializeUsingOrigType">ComponentType</sci:propval>
												</sci:metaproplist>
												<sci:help>Parameter Help</sci:help>
												<sci:member>OutputWhat</sci:member>
												<sci:member>SourceIs</sci:member>
												<sci:member>Maximum</sci:member>
												<sci:value>Source</sci:value>
											</sci:arg>
											<sci:arg name="Server" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
												<sci:help>&lt;p&gt;
This component reads from the locally connected server when the &quot;SourceIs&quot; parameter is set to &quot;Database&quot;. Use this parameter to connect to a remote Pipeline Pilot server.  The server name should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number). 
&lt;/p&gt;
&lt;p&gt;
Leave this parameter blank to connect to the local server.
&lt;/p&gt;</sci:help>
												<sci:member>Authentication Options</sci:member>
												<sci:enabledscript>parameter(&apos;SourceIs&apos;) eq &apos;Database&apos;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Authentication Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
												<sci:help>Options for user credentials when connecting to a remote server</sci:help>
												<sci:member>Authentication Method</sci:member>
												<sci:member>Authentication Options Username</sci:member>
												<sci:member>Authentication Options Password</sci:member>
											</sci:arg>
											<sci:arg name="Authentication Method" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;
Determines how to obtain the username and password for remote server authentication.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the component&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot. In this case, the &lt;i&gt;Password&lt;/i&gt; parameter is ignored. If left empty, the &lt;i&gt;Username&lt;/i&gt; is ignored, but can be filled in to override the user&apos;s log-in name.
&lt;/ul&gt;</sci:help>
												<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
												<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
											</sci:arg>
											<sci:arg name="Authentication Options Username" type="UserNameType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>&lt;p&gt;
The username used if authentication is needed for the remote server.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
can be filled in to provide authentication information to the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use SciTegic Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username is used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
												<sci:help>The password to be used when authenticating to the remote server. This parameter is disabled if the Authentication Method is not &apos;Use Username and Password Parameters&apos;.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="SourceIs" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
												<sci:help>Whether the Source parameter contains the name of a component in the Database, or the path to a File on the server, or the name of a Directory on the server.  (If you choose File, change the parameter type of Source to URLType for ease of entry; if you choose Directory, change the parameter type of Source to DirectoryType.)</sci:help>
												<sci:value>SourceIs</sci:value>
											</sci:arg>
											<sci:arg name="Maximum" type="PromotedGroupMemberType" required="false" visibility="nevershow" multi="false">
												<sci:help>If defined, the maximum number of data records to output. Leave blank to indicate that there is no limit.</sci:help>
												<sci:value>Maximum</sci:value>
											</sci:arg>
											<sci:arg name="OutputWhat" type="PromotedGroupMemberType" required="true" visibility="nevershow" multi="false">
												<sci:help>&lt;p&gt;
Determines how to process the &lt;i&gt;Source&lt;/i&gt; component or protocol and what data to output.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; 
&quot;Component&quot; outputs a component object, which can be inspected using the component functions in PilotScript, 
and written out using the &lt;i&gt;Component Writer&lt;/i&gt; component.
&lt;/li&gt;
&lt;li&gt;
&quot;ComponentParameters&quot; is similar to Component, but returns
a data record with all of the component&apos;s parameters as properties.
&lt;/li&gt; 
&lt;li&gt;
&quot;ComponentDataParameters&quot; is similar, but returns
a data record with all of the component&apos;s data parameters as properties. This is only relevant to components generated as learned models.
&lt;/li&gt; 
&lt;li&gt;
&quot;FolderContents&quot; is only relevant when the &lt;i&gt;Source&lt;/i&gt; parameter is a folder path, and returns one data record for each component in the given folder 
(or its subfolders), with the properties Name and Path defined.
&lt;/li&gt; 
&lt;li&gt;
&quot;FolderContentsAsComponents&quot; is similar to FolderContents, but
it returns records with the actual components.
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
												<sci:value>OutputWhat</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Jan 26 07:32:14 2017</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{8922AE57-61B3-43A9-99BA-5D8511DDCCB8}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Read model</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>DataBaseNode</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Reads a component into the system as a data object.</sci:value>
												<sci:value>&lt;p&gt;Read a component, a protocol or collection of these items into one or more data records. The source item can be read from the XML database or from the file system.
&lt;/p&gt;
&lt;p&gt;
The source data can be processed in a number of ways (defined by the &lt;i&gt;OutputWhat&lt;/i&gt; parameter) to expose different aspects of the target component or protocol.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;See Also:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{00E1B146-EFCE-4B03-A5C8-D3859AAD8E0B}&apos;)&quot;&gt;Component Writer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;{FFFFFF57-61B3-43A9-99BA-5D8511DDCCB8}&apos;)&quot;&gt;Extract Protocol Components&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>One or more records containing component objects or information about the components.</sci:value>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon</sci:help>
												<sci:value>Component Reader</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>90 -95</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.1.3.126</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Component Utilities\Component Reader</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.EvaluateExpression.1">
										<sci:component name="Custom Manipulator (PilotScript)" version="2">
											<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
												<sci:member>Initial Expression</sci:member>
												<sci:member>Final Expression</sci:member>
												<sci:member>Keep Calculated Properties</sci:member>
												<sci:value>@ModelName := Name;</sci:value>
											</sci:arg>
											<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
											</sci:arg>
											<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
												<sci:help>Version of expression parser to use.</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/generic</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
												<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
												<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
											</sci:arg>
											<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The component this component is based upon.</sci:help>
												<sci:value>Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>EXPRESSIONNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>390 -95</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Applies a PilotScript expression to each data record
</sci:value>
												<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>None</sci:value>
												<sci:value/>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>7.0.0.35</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>2</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
											</sci:arg>
										</sci:component>
									</sci:data>
									<sci:data object="SciTegic.Protocol.1">
										<sci:component name="Subprotocol" version="2">
											<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
												<sci:member>RunToCompletion Categorize Using</sci:member>
												<sci:legalval selected="true">False</sci:legalval>
												<sci:legalval>True - For Each Data Record</sci:legalval>
												<sci:legalval>True - For Each Category</sci:legalval>
											</sci:arg>
											<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
												<sci:member>Parallel Processing Options Batch Size</sci:member>
												<sci:member>Parallel Processing Options Server</sci:member>
												<sci:member>Parallel Processing Options Preserve Order</sci:member>
												<sci:legalval>True</sci:legalval>
												<sci:legalval selected="true">False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
												<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
												<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
												<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
												<sci:member>Parallel Processing Options Server Processes</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
												<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
												<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Run subprotocol on grid engine if available.</sci:help>
												<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
												<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
												<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
												<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
											</sci:arg>
											<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
												<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
												<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
												<sci:legalval selected="true">True</sci:legalval>
												<sci:legalval>False</sci:legalval>
											</sci:arg>
											<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
												<sci:value>temp</sci:value>
											</sci:arg>
											<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
												<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
											</sci:arg>
											<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
												<sci:help>Component Attributes</sci:help>
												<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
												<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
												<sci:legalval>ComponentReturnsFail</sci:legalval>
												<sci:legalval>ComponentRunsLocal</sci:legalval>
											</sci:arg>
											<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
												<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
												<sci:legalval selected="true">Halt</sci:legalval>
												<sci:legalval>Fail</sci:legalval>
												<sci:legalval>Pass</sci:legalval>
											</sci:arg>
											<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Custom Error Message</sci:help>
											</sci:arg>
											<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>Process stats</sci:value>
											</sci:arg>
											<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol AutoLayout</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
												<sci:value>SUBPROTOCOLNODE</sci:value>
											</sci:arg>
											<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
												<sci:help>Component Revision</sci:help>
												<sci:value>790</sci:value>
											</sci:arg>
											<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}</sci:value>
											</sci:arg>
											<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:value>690 -95</sci:value>
											</sci:arg>
											<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
												<sci:help>By Ref</sci:help>
												<sci:value>0</sci:value>
											</sci:arg>
											<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
												<sci:value>100</sci:value>
												<sci:value>Builds subprotocols in Pipeline Pilot.</sci:value>
												<sci:value>&lt;p&gt;
Use a subprotocol to collapse one or more components into a single item. Open 
a subprotocol to view or edit its contents. 
&lt;/p&gt;&lt;p&gt;
To define input and output ports, display 
icon, and parameter settings, right-click and select Edit. You can save subprotocols and reuse them. 
For more information, see the User Guide help for &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_overview.htm&apos;)&quot;&gt;Subprotocols 
Overview&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see 
&lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel 
Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;&lt;p&gt;
Tip: Any component can be made into a shortcut, 
so that the latest version is always used. For more information, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/shortcuts.htm&apos;)&quot;&gt;Creating 
Shortcuts&lt;/a&gt;.
&lt;/p&gt;</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value/>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected pass ports of components inside the subprotocol</sci:value>
												<sci:value>Generic</sci:value>
												<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The server version when this component was registered</sci:help>
												<sci:value>17.2.0.1267</sci:value>
											</sci:arg>
											<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
											<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Sticky Notes</sci:help>
											</sci:arg>
											<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Scale</sci:help>
												<sci:value>100</sci:value>
											</sci:arg>
											<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>Protocol Options</sci:help>
												<sci:legalval>Owner Access Only</sci:legalval>
											</sci:arg>
											<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The user who registered this component.</sci:help>
												<sci:value>scitegic/coreutils</sci:value>
											</sci:arg>
											<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The date this component was registered.</sci:help>
												<sci:value>Thu Sep 15 15:57:54 2016</sci:value>
											</sci:arg>
											<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
												<sci:help>Local Component Identifier</sci:help>
												<sci:value>1</sci:value>
											</sci:arg>
											<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
												<sci:help>The original path within the database of this component.</sci:help>
												<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Subprotocol</sci:value>
											</sci:arg>
										</sci:component>
										<sci:protocol>
											<sci:data object="SciTegic.DelimitedWriter.1">
												<sci:component name="Delimited Text Writer" version="2">
													<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>IfFileExists</sci:member>
														<sci:member>CharacterEncoding</sci:member>
														<sci:member>Username</sci:member>
														<sci:member>Password</sci:member>
														<sci:member>Additional Security Info</sci:member>
														<sci:value>$(temp)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
													</sci:arg>
													<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
														<sci:legalval selected="true">Overwrite</sci:legalval>
														<sci:legalval>Append</sci:legalval>
														<sci:legalval>Halt</sci:legalval>
													</sci:arg>
													<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
														<sci:member>UseByteOrderMark</sci:member>
														<sci:legalval>ANSI</sci:legalval>
														<sci:legalval selected="true">UTF-8</sci:legalval>
														<sci:legalval>Unicode</sci:legalval>
														<sci:legalval>Unicode big endian</sci:legalval>
													</sci:arg>
													<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
														<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
														<sci:legalval>Always</sci:legalval>
														<sci:legalval>Never</sci:legalval>
														<sci:legalval selected="true">Native</sci:legalval>
													</sci:arg>
													<sci:arg name="Username" type="StringType" required="false" visibility="hidden" multi="false">
														<sci:help>&lt;p&gt;User name for connecting to destination.  Primarily used for HDFS.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Password used to connect to destination.  Primarily used for HDFS.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Additional Security Info" type="StringType" required="false" visibility="hidden" multi="true" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;This is an array of additional security information.  Primarily used by HDFS. &lt;/p&gt;
&lt;p&gt;When connecting to secured HDFS the Kerberos KDC Server and realm must be specified. &lt;/p&gt;
&lt;b&gt;For example&lt;/b&gt;
&lt;p&gt;KDC Server=&amp;lt;Server Name&amp;gt;&lt;/p&gt;
&lt;p&gt;KDC Realm=&amp;lt;Realm Name&amp;gt;&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
														<sci:member>MultipleValueDelimiter</sci:member>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
														<sci:legalval>None</sci:legalval>
														<sci:legalval selected="true">Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Linefeed</sci:legalval>
													</sci:arg>
													<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:member>OutputColumnNames</sci:member>
														<sci:member>OutputColumnTypes</sci:member>
														<sci:member>OutputRowNumber</sci:member>
														<sci:member>UndefinedString</sci:member>
														<sci:member>MissingValue Format</sci:member>
														<sci:member>NewlineStyle</sci:member>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
													</sci:arg>
													<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Output column names</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Output a row that includes column types</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>SpotfireFormat</sci:legalval>
														<sci:legalval>NDIFormat</sci:legalval>
													</sci:arg>
													<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Includes the number of the record as the first field for each record</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
														<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
														<sci:legalval>Use UndefinedString</sci:legalval>
													</sci:arg>
													<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">CR+LF</sci:legalval>
														<sci:legalval>LF</sci:legalval>
														<sci:legalval>CR</sci:legalval>
														<sci:legalval>Native</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Sep 29 10:09:09 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Delimited Text Writer</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Delimited Writer</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -95</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
														<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>17.2.0.1279</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>contains(@&apos;Output Options&apos;, &apos;Output Statistics&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>3</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#np := numproperties();

for #i in 2 .. #np loop
	#cname := &apos;Column&apos; . #i;
	#newname := &apos;s&apos; . (#i - 1);
	if property(#cname) is defined then
		rename(#cname, #newname);
	end if;
end loop;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Rename columns</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -470</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>12</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.DelimitedReader.1">
												<sci:component name="Delimited Text Reader" version="2">
													<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
														<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
														<sci:member>Maximum</sci:member>
														<sci:member>Keep Properties</sci:member>
														<sci:member>UTF-8 Auto Detect</sci:member>
														<sci:member>SourceTag</sci:member>
														<sci:member>HasColumnNames</sci:member>
														<sci:member>Column Name Lines</sci:member>
														<sci:member>Username</sci:member>
														<sci:member>Password</sci:member>
														<sci:member>Additional Security Info</sci:member>
														<sci:value>$(temp)</sci:value>
													</sci:arg>
													<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
														<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
													</sci:arg>
													<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
														<sci:legalval selected="true">None</sci:legalval>
														<sci:legalval>Filename</sci:legalval>
														<sci:legalval>FilenameAndExtension</sci:legalval>
														<sci:legalval>FullFilename</sci:legalval>
														<sci:legalval>ZipFilename</sci:legalval>
														<sci:legalval>Number</sci:legalval>
														<sci:legalval>Letter</sci:legalval>
														<sci:legalval>KeepCurrent</sci:legalval>
													</sci:arg>
													<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
													</sci:arg>
													<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Username" type="StringType" required="false" visibility="hidden" multi="false" expanded="true">
														<sci:help>&lt;p&gt;User name for connecting to source.  Primarily used for HDFS.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false">
														<sci:help>&lt;p&gt;Password used to connect to source.  Primarily used for HDFS.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Additional Security Info" type="StringType" required="false" visibility="hidden" multi="true" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;This is an array of additional security information.  Primarily used by HDFS. &lt;/p&gt;
&lt;p&gt;When connecting to secured HDFS the Kerberos KDC Server and realm must be specified. &lt;/p&gt;
&lt;b&gt;For example&lt;/b&gt;
&lt;p&gt;KDC Server=&amp;lt;Server Name&amp;gt;&lt;/p&gt;
&lt;p&gt;KDC Realm=&amp;lt;Realm Name&amp;gt;&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
														<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:member>MultipleValueDelimiter</sci:member>
														<sci:member>ParseNDimensionalArrayStrings</sci:member>
														<sci:legalval>FigureOut</sci:legalval>
														<sci:legalval selected="true">Tab</sci:legalval>
														<sci:legalval>Space</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Semicolon</sci:legalval>
														<sci:legalval>$</sci:legalval>
													</sci:arg>
													<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
														<sci:legalval>None</sci:legalval>
														<sci:legalval selected="true">Semicolon</sci:legalval>
														<sci:legalval>Colon</sci:legalval>
														<sci:legalval>Comma</sci:legalval>
														<sci:legalval>Linefeed</sci:legalval>
													</sci:arg>
													<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>Contains less commonly used parameters</sci:help>
														<sci:member>UndefinedString</sci:member>
														<sci:member>AllLines</sci:member>
														<sci:member>TrimWhitespace</sci:member>
														<sci:member>CheckSyntax</sci:member>
														<sci:member>CommentLines</sci:member>
														<sci:member>AddEmptyProperties</sci:member>
													</sci:arg>
													<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
													</sci:arg>
													<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
													</sci:arg>
													<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
														<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
														<sci:legalval>OverwriteOrCreate</sci:legalval>
														<sci:legalval>OverwriteExisting</sci:legalval>
														<sci:legalval>CreateIfNew</sci:legalval>
														<sci:legalval>AppendOrCreate</sci:legalval>
														<sci:legalval>AppendExisting</sci:legalval>
														<sci:legalval selected="true">Replace</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval>ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Mar 07 13:02:56 2017</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
Expand(&apos;,&apos;, #displayNames);
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component that this component is based upon.</sci:help>
														<sci:value>Delimited Reader</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>DOCUMENTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>90 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
														<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>18.1.0.1380</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Manipulator (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>rename(&apos;Column1&apos;, &apos;Info&apos;);

if Info is defined then
	if numvalues(Info) &gt; 1 then
		contract(&quot;\n&quot;, Info);
	end if;
else
	Info := &apos; &apos;;
end if;
</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>378 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Applies a PilotScript expression to each data record
</sci:value>
														<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>7.0.0.35</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>contains(@&apos;Output Options&apos;, &apos;Show Statistics Table in Browser&apos;)</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2106 -820</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>6</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.Protocol.1">
												<sci:component name="HTML Report Viewer" version="2">
													<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Title</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
														<sci:value>Model Statistics for $(ModelName)</sci:value>
													</sci:arg>
													<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:member>Include Format and Position CSS</sci:member>
														<sci:member>Use Default Browser</sci:member>
														<sci:member>Set IE Compatibility</sci:member>
													</sci:arg>
													<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Include Format and Position CSS</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
														<sci:metaproplist>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Set IE Compatibility</sci:value>
															</sci:mpropval>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
														<sci:metaproplist>
															<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
															<sci:mpropval name="SCI_PromotedFrom" type="StringType">
																<sci:value>Browser</sci:value>
															</sci:mpropval>
														</sci:metaproplist>
														<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:legalval selected="true">Default</sci:legalval>
														<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
													</sci:arg>
													<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
													</sci:arg>
													<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
														<sci:value>ServerFilePath</sci:value>
													</sci:arg>
													<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
														<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>The location for Internet Explorer</sci:help>
														<sci:value>internetexplorer.application</sci:value>
													</sci:arg>
													<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
														<sci:help>The location for Chrome</sci:help>
														<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
													</sci:arg>
													<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
														<sci:help>The location for Firefox</sci:help>
														<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval>ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:help>Protocol Options</sci:help>
														<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
														<sci:legalval>Owner Access Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Thu Oct 22 23:43:53 2015</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>HTML Report Viewer</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>ReportViewerNode</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{0952D9DF-F95C-4D43-826F-C70450811DD8}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2394 -820</sci:value>
													</sci:arg>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>1</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Displays the results of a reporting protocol in HTML format</sci:value>
														<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{A28703A7-E701-4D34-9A93-1D24AC2039CC}&apos;)&quot;&gt;Page&lt;/a&gt; component to set the report&apos;s margins, borders, padding, and background formatting, or to specify HTML attributes on the report&apos;s &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>This component accepts reporting objects as input.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>16.1.0.1089</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>8</sci:value>
													</sci:arg>
													<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Subprotocol Made Link Into Copy</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Reporting and Visualization\Reporting\Viewers\HTML Report Viewer</sci:value>
													</sci:arg>
												</sci:component>
												<sci:protocol/>
											</sci:data>
											<sci:data object="SciTegic.ComponentJavaPlugin.1">
												<sci:component name="Text" version="2">
													<sci:arg name="Text" type="TextExpressionType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;A PilotScript expression that evaluates to the text to render in this object.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.  Also, you can provide text as static (quoted) strings.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To specify a property name that includes whitespace characters, use the &lt;code&gt;property()&lt;/code&gt; PilotScript function, e.g., if the property name is &quot;Profit Margin&quot; use:&lt;p&gt;&lt;code&gt;property(&apos;Profit Margin&apos;)&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;When specifying columns for an in-line table, the expression you enter here (often simply a property name), will be the default column header.  To explicitly set the column header, use &lt;i&gt;Column Settings&lt;/i&gt; &amp;gt; &lt;i&gt;Header Text&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:member>Non-breaking Spaces</sci:member>
														<sci:member>Allow HTML Tags</sci:member>
														<sci:member>Array Value Display</sci:member>
														<sci:value>Info</sci:value>
													</sci:arg>
													<sci:arg name="Non-breaking Spaces" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If true, spaces will be output as non-breaking spaces in HTML and Word reports.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Allow HTML Tags" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If true, HTML tags are interpreted as HTML. In HTML reports, all tags are supported. PDF and Word reports support the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;BR&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;B&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;I&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;U&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;A HREF=&quot;xxx&quot; TITLE=&quot;yyy&quot; NAME=&quot;zzz&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;FONT STYLE=&quot;BACKGROUND-COLOR: xxx; COLOR: yyy; SIZE: zzz; FACE: vvv&quot;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Separate by Newlines</sci:legalval>
														<sci:legalval>Separate by Commas</sci:legalval>
														<sci:legalval>First Value Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
														<sci:value>Bold</sci:value>
														<sci:value>True</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
													</sci:arg>
													<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
														<sci:member>Link</sci:member>
														<sci:member>Link Target</sci:member>
														<sci:member>HTML Attributes</sci:member>
														<sci:member>Tooltip</sci:member>
														<sci:member>Protocol Link</sci:member>
														<sci:member>Link Options</sci:member>
													</sci:arg>
													<sci:arg name="Link" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
														<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
														<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
													</sci:arg>
													<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
													</sci:arg>
													<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>An optional tooltip for this reporting element.</sci:help>
													</sci:arg>
													<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
														<sci:member>Column Settings Header Format</sci:member>
														<sci:member>Column Settings Cell Format</sci:member>
														<sci:member>Column Settings Cell Position</sci:member>
														<sci:member>Column Settings Header Text</sci:member>
														<sci:member>Column Settings Header Position</sci:member>
													</sci:arg>
													<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>600</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>600</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Text</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -1020</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>REPORTTEXTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{34E6C845-4ACB-4212-BBA3-7422213D458F}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Plug In</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Adds text to a report</sci:value>
														<sci:value>&lt;p&gt;The text can be supplied from any expression, or as a quoted string, and formatted with the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Text&lt;/i&gt; is a PilotScript expression that evaluates to the text to display.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.0.0.14</sci:value>
													</sci:arg>
													<sci:arg name="Keep Properties" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>A comma-separated list of properties that are transferred from the input data record to the text object.  These properties can then be used to apply conditional formats in downstream components such as Columns.</sci:help>
													</sci:arg>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>com.scitegic.report.component.TextComponent</sci:value>
													</sci:arg>
													<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>CaptureStdoutStderr</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
														<sci:value>Format</sci:value>
														<sci:value>Link Options</sci:value>
													</sci:arg>
													<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>10</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Reporting and Visualization\Reporting\Elements\Text</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.PropertyFunctions.1">
												<sci:component name="Remove Properties" version="2">
													<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
														<sci:help>The names of properties to remove from each data record entering the component</sci:help>
														<sci:value>Info</sci:value>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:help>the action to perform</sci:help>
														<sci:value>Remove</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol AutoLayout</sci:help>
														<sci:value>true</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>EXPRESSIONNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
														<sci:help>Component Revision</sci:help>
														<sci:value>100</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>SubProtocol</sci:value>
													</sci:arg>
													<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Scale</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1530 -1020</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Removes the specified properties</sci:value>
														<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records with the specified properties removed</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>17.1.0.119</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
														<sci:help>By Ref</sci:help>
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Protocol Sticky Notes</sci:help>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>11</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.ComponentJavaPlugin.1">
												<sci:component name="Table" version="2">
													<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>The optional title at the top of the table.</sci:help>
														<sci:member>Title Format</sci:member>
														<sci:member>Title Position</sci:member>
													</sci:arg>
													<sci:arg name="Title Format" type="FormatType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Title</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Title Position" type="PositionType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
														<sci:value>600</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Title</sci:value>
													</sci:arg>
													<sci:arg name="Table Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Format and position for the table as a whole.&lt;/p&gt;</sci:help>
														<sci:member>Format</sci:member>
														<sci:member>Position</sci:member>
													</sci:arg>
													<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.General</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.

Height settings will only be applied to tables in HTML reports.</sci:help>
														<sci:value>600</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.General</sci:value>
													</sci:arg>
													<sci:arg name="Header Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Options controlling the table header.&lt;/p&gt;</sci:help>
														<sci:member>Header Format</sci:member>
														<sci:member>Header Position</sci:member>
														<sci:member>Show Table Header</sci:member>
														<sci:member>Freeze Table Header</sci:member>
													</sci:arg>
													<sci:arg name="Show Table Header" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies whether table headers should be visible or not.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Header</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Header Position" type="PositionType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
														<sci:value>600</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Header</sci:value>
													</sci:arg>
													<sci:arg name="Cell Options" type="GroupType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Options controlling the table cells.&lt;/p&gt;</sci:help>
														<sci:member>Cell Format</sci:member>
														<sci:member>Cell Position</sci:member>
													</sci:arg>
													<sci:arg name="Cell Format" type="FormatType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Cell</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Cell Position" type="PositionType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
														<sci:value>600</sci:value>
														<sci:value>Style</sci:value>
														<sci:value>Table.Cell</sci:value>
													</sci:arg>
													<sci:arg name="Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;Options controlling the table data.&lt;/p&gt;</sci:help>
														<sci:member>Exclude Properties</sci:member>
														<sci:member>Column Order</sci:member>
														<sci:member>Array Value Display</sci:member>
														<sci:member>When Data Contains Reporting Information</sci:member>
														<sci:member>Aggregate Data</sci:member>
													</sci:arg>
													<sci:arg name="Exclude Properties" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;A comma-delimited list of properties which will not be rendered in an autogenerated table.&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Column Order" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;A comma-separated list of Header Text names (which may differ from the corresponding property names), indicating the order the columns should appear. Any non-listed properties will be added as subsequent columns.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The column names are case-sensitive&lt;/li&gt;
&lt;/ul&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Array Value Display" type="StringType" required="true" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed in an autogenerated table.&lt;/p&gt;</sci:help>
														<sci:legalval>Separate by Commas</sci:legalval>
														<sci:legalval selected="true">Separate by Newlines</sci:legalval>
														<sci:legalval>One Array Element per Cell</sci:legalval>
													</sci:arg>
													<sci:arg name="Aggregate Data" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If True, all incoming data records are aggregated into a single output record. If False, each incoming data record results in an output record. This behavior is similar to using the component in a RunToCompletion subprotocol.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="When Data Contains Reporting Information" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Determines whether the table shows all the properties of data records that already have reporting information.&lt;/p&gt;</sci:help>
														<sci:legalval>Display Reporting Information Only</sci:legalval>
														<sci:legalval selected="true">Display Reporting Information and All Properties</sci:legalval>
													</sci:arg>
													<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
														<sci:member>Link Target</sci:member>
														<sci:member>HTML Attributes</sci:member>
														<sci:member>Tooltip</sci:member>
														<sci:member>Data Connector</sci:member>
													</sci:arg>
													<sci:arg name="Link Target" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
													</sci:arg>
													<sci:arg name="Tooltip" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>An optional tooltip for this reporting element.</sci:help>
													</sci:arg>
													<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
													</sci:arg>
													<sci:arg name="Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
														<sci:member>Subscriber Event Handling</sci:member>
														<sci:member>Publisher Event Handling</sci:member>
														<sci:member>Publisher Subscriber Model</sci:member>
													</sci:arg>
													<sci:arg name="Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
														<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
														<sci:legalval>Publisher</sci:legalval>
														<sci:legalval>Subscriber</sci:legalval>
														<sci:legalval>None</sci:legalval>
													</sci:arg>
													<sci:arg name="Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
														<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
														<sci:legalval selected="true">Highlight</sci:legalval>
														<sci:legalval>Filter</sci:legalval>
														<sci:legalval>Reverse Filter</sci:legalval>
													</sci:arg>
													<sci:arg name="Publisher Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;Setting the publishing event type.&lt;/p&gt;</sci:help>
														<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Publisher Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Subscriber&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Subscriber&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
														<sci:legalval selected="true">On Click</sci:legalval>
														<sci:legalval>On Mouse Over</sci:legalval>
													</sci:arg>
													<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
														<sci:member>Column Settings Header Text</sci:member>
														<sci:member>Column Settings Header Format</sci:member>
														<sci:member>Column Settings Header Position</sci:member>
														<sci:member>Column Settings Cell Format</sci:member>
														<sci:member>Column Settings Cell Position</sci:member>
														<sci:member>Show 4-digit Year</sci:member>
													</sci:arg>
													<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>700</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>700</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
													</sci:arg>
													<sci:arg name="Show 4-digit Year" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
														<sci:help>For columns of type DateTime, this parameter controls the display of years, with either four, or two digits (default).</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
														<sci:value>100</sci:value>
														<sci:value>Creates a table in a report by collecting data records and displaying them in rows and columns</sci:value>
														<sci:value>&lt;p&gt;There are three ways you can create tables:&lt;/p&gt;

&lt;ul&gt;

&lt;li&gt;&lt;b&gt;Auto-generated:&lt;/b&gt; Quickly build a table by adding one Table component in a report, immediately following data (i.e., blue) components). The Table component takes your data sources and creates one column for each property on your data stream. The table includes some pre-set formats to save you time. &lt;/li&gt; 

&lt;li&gt;&lt;b&gt;Column-generated:&lt;/b&gt; You specify the content of your data source that should be used in the table. For each data property to include, add a component defining the content (e.g., &lt;a href=&quot;javascript:DoLink(&apos;{34E6C845-4ACB-4212-BBA3-7422213D458F}&apos;)&quot;&gt;Text&lt;/a&gt; or a chart component, plus a separate &lt;a href=&quot;javascript:DoLink(&apos;{EB2E16E8-D13E-4C7F-BB46-0E06502A6833}&apos;)&quot;&gt;Column component&lt;/a&gt; for each column of the table to be created.  Branch the data source to each pair of content/Column components and then pipe all of them into a single Table component. Each column is added to the table in the order it is shown visually in the protocol (top to bottom).  Each column in a table must have the same number of rows.&lt;/li&gt;

&lt;li&gt;&lt;b&gt;In-line:&lt;/b&gt; Similar to Column-generated but instead of branching the data for each column of the table, place the &quot;content&quot; components in the sequence for the final table and then pipe this into a Table component.  In each content component, use the Column Settings components to define column header and cell options.&lt;/li&gt;

&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Input can be raw data records, column objects or a sequence of Reporting components.</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>A data record representing the table is sent to the pass port.</sci:value>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>17.2.0.1312</sci:value>
													</sci:arg>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:value>com.scitegic.report.component.TableComponent</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:value>1818 -1020</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:value>REPORTTABLENODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:value>{8DD32465-CB99-4A1E-870D-1A2F56D2C249}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Plug In</sci:value>
													</sci:arg>
													<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>5</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Oct 31 13:22:09 2016</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
														<sci:value>Table</sci:value>
													</sci:arg>
													<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false" expanded="true">
														<sci:help>CaptureStdoutStderr</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
														<sci:value>Format</sci:value>
														<sci:value>Link Options</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Reporting and Visualization\Reporting\Elements\Table</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>contains(@&apos;Output Options&apos;, &apos;Show Statistics Table in Browser&apos;) or contains(@&apos;Output Options&apos;, &apos;Output Reporting Element&apos;) </sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>666 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>4</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>#bold := False;

if Info is defined and rmatch(Info, &apos;^Equation|^Feature|^Property|^Bin|^Subset|^Normalized|^POSITIVE|^NEGATIVE&apos;) then
	#bold := True;
end if;

#bold</sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>954 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>13</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.EvaluateExpression.1">
												<sci:component name="Custom Filter (PilotScript)" version="2">
													<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>The PilotScript expression used to filter the data.</sci:help>
														<sci:member>Initial Expression</sci:member>
														<sci:member>Final Expression</sci:member>
														<sci:member>Keep Calculated Properties</sci:member>
														<sci:value>contains(@&apos;Output Options&apos;, &apos;Output Reporting Element&apos;) </sci:value>
													</sci:arg>
													<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
													</sci:arg>
													<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Custom Error Message</sci:help>
													</sci:arg>
													<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
														<sci:help>Version of expression parser to use.</sci:help>
														<sci:value>2</sci:value>
													</sci:arg>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/generic</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
														<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
														<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>FILTERNODE</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Custom Filter (PilotScript)</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>2106 -1195</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
														<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>7</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
													</sci:arg>
												</sci:component>
												<sci:proplist>
													<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
												</sci:proplist>
											</sci:data>
											<sci:data object="SciTegic.ComponentJavaPlugin.1">
												<sci:component name="Text" version="2">
													<sci:arg name="Text" type="TextExpressionType" required="true" visibility="visible" multi="false" expanded="true">
														<sci:help>&lt;p&gt;A PilotScript expression that evaluates to the text to render in this object.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.  Also, you can provide text as static (quoted) strings.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;To specify a property name that includes whitespace characters, use the &lt;code&gt;property()&lt;/code&gt; PilotScript function, e.g., if the property name is &quot;Profit Margin&quot; use:&lt;p&gt;&lt;code&gt;property(&apos;Profit Margin&apos;)&lt;/code&gt;&lt;/li&gt;
	&lt;li&gt;When specifying columns for an in-line table, the expression you enter here (often simply a property name), will be the default column header.  To explicitly set the column header, use &lt;i&gt;Column Settings&lt;/i&gt; &amp;gt; &lt;i&gt;Header Text&lt;/i&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:member>Non-breaking Spaces</sci:member>
														<sci:member>Allow HTML Tags</sci:member>
														<sci:member>Array Value Display</sci:member>
														<sci:value>Info</sci:value>
													</sci:arg>
													<sci:arg name="Non-breaking Spaces" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If true, spaces will be output as non-breaking spaces in HTML and Word reports.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">True</sci:legalval>
														<sci:legalval>False</sci:legalval>
													</sci:arg>
													<sci:arg name="Allow HTML Tags" type="BoolType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;If true, HTML tags are interpreted as HTML. In HTML reports, all tags are supported. PDF and Word reports support the following tags:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&amp;lt;BR&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;B&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;I&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;U&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;A HREF=&quot;xxx&quot; TITLE=&quot;yyy&quot; NAME=&quot;zzz&quot;&amp;gt;&lt;/li&gt;
  &lt;li&gt;&amp;lt;FONT STYLE=&quot;BACKGROUND-COLOR: xxx; COLOR: yyy; SIZE: zzz; FACE: vvv&quot;&amp;gt;&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Array Value Display" type="StringType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Determines how array values are separated when they are displayed.&lt;/p&gt;</sci:help>
														<sci:legalval selected="true">Separate by Newlines</sci:legalval>
														<sci:legalval>Separate by Commas</sci:legalval>
														<sci:legalval>First Value Only</sci:legalval>
													</sci:arg>
													<sci:arg name="Format" type="FormatType" required="false" visibility="visible" multi="false">
														<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
														<sci:value>700</sci:value>
													</sci:arg>
													<sci:arg name="Position" type="PositionType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
													</sci:arg>
													<sci:arg name="Links and Actions" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Links and actions to be applied to the report element produced by this component.</sci:help>
														<sci:member>Link</sci:member>
														<sci:member>Link Target</sci:member>
														<sci:member>HTML Attributes</sci:member>
														<sci:member>Tooltip</sci:member>
														<sci:member>Protocol Link</sci:member>
														<sci:member>Link Options</sci:member>
													</sci:arg>
													<sci:arg name="Link" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file://///machine_name/C/.../document.pdf&apos; - when using a Windows UNC path visible to the Pipeline Pilot server&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
														<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
														<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
													</sci:arg>
													<sci:arg name="Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false">
														<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
													</sci:arg>
													<sci:arg name="Link Target" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
													</sci:arg>
													<sci:arg name="Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>An optional tooltip for this reporting element.</sci:help>
													</sci:arg>
													<sci:arg name="HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
														<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
														<sci:member>Column Settings Header Format</sci:member>
														<sci:member>Column Settings Cell Format</sci:member>
														<sci:member>Column Settings Cell Position</sci:member>
														<sci:member>Column Settings Header Text</sci:member>
														<sci:member>Column Settings Header Position</sci:member>
													</sci:arg>
													<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>600</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
													</sci:arg>
													<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
														<sci:value>600</sci:value>
													</sci:arg>
													<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
														<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
													</sci:arg>
													<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
														<sci:help>Component Attributes</sci:help>
														<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
														<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
														<sci:legalval>ComponentReturnsFail</sci:legalval>
														<sci:legalval>ComponentRunsLocal</sci:legalval>
													</sci:arg>
													<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
														<sci:legalval selected="true">Halt</sci:legalval>
														<sci:legalval>Fail</sci:legalval>
														<sci:legalval>Pass</sci:legalval>
													</sci:arg>
													<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The user who registered this component.</sci:help>
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The date this component was registered.</sci:help>
														<sci:value>Fri Feb 12 10:00:00 2010</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>Text</sci:value>
													</sci:arg>
													<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>1242 -1545</sci:value>
													</sci:arg>
													<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>REPORTTEXTNODE</sci:value>
													</sci:arg>
													<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>{34E6C845-4ACB-4212-BBA3-7422213D458F}</sci:value>
													</sci:arg>
													<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The component this component is based upon.</sci:help>
														<sci:value>Plug In</sci:value>
													</sci:arg>
													<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:value>0</sci:value>
													</sci:arg>
													<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>100</sci:value>
														<sci:value>Adds text to a report</sci:value>
														<sci:value>&lt;p&gt;The text can be supplied from any expression, or as a quoted string, and formatted with the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;Text&lt;/i&gt; is a PilotScript expression that evaluates to the text to display.  This expression has access to global data and any properties (or calculable properties) on the incoming data record.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>Generic</sci:value>
														<sci:value/>
														<sci:value>None</sci:value>
														<sci:value/>
													</sci:arg>
													<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
													<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The server version when this component was registered</sci:help>
														<sci:value>8.0.0.14</sci:value>
													</sci:arg>
													<sci:arg name="Keep Properties" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>A comma-separated list of properties that are transferred from the input data record to the text object.  These properties can then be used to apply conditional formats in downstream components such as Columns.</sci:help>
													</sci:arg>
													<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:value>DrainTopDown</sci:value>
													</sci:arg>
													<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false">
														<sci:value>com.scitegic.report.component.TextComponent</sci:value>
													</sci:arg>
													<sci:arg name="CaptureStdoutStderr" type="BoolType" required="true" visibility="nevershow" multi="false">
														<sci:help>CaptureStdoutStderr</sci:help>
														<sci:legalval>True</sci:legalval>
														<sci:legalval selected="true">False</sci:legalval>
													</sci:arg>
													<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
														<sci:value>Format</sci:value>
														<sci:value>Link Options</sci:value>
													</sci:arg>
													<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
														<sci:value>scitegic/report</sci:value>
													</sci:arg>
													<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
														<sci:help>Local Component Identifier</sci:help>
														<sci:value>14</sci:value>
													</sci:arg>
													<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
														<sci:help>The original path within the database of this component.</sci:help>
														<sci:value>Components\Reporting and Visualization\Reporting\Elements\Text</sci:value>
													</sci:arg>
												</sci:component>
											</sci:data>
											<sci:connectid from="3" to="12" type="true"/>
											<sci:connectid from="1" to="2" type="true"/>
											<sci:connectid from="2" to="3" type="true"/>
											<sci:connectid from="2" to="4" type="true"/>
											<sci:connectid from="6" to="8" type="true"/>
											<sci:connectid from="10" to="11" type="true"/>
											<sci:connectid from="11" to="5" type="true"/>
											<sci:connectid from="5" to="6" type="true"/>
											<sci:connectid from="5" to="7" type="true"/>
											<sci:connectid from="4" to="13" type="true"/>
											<sci:connectid from="13" to="10" type="true"/>
											<sci:connectid from="13" to="14" type="false"/>
											<sci:connectid from="14" to="11" type="true"/>
										</sci:protocol>
									</sci:data>
									<sci:connectid from="0" to="2" type="true"/>
									<sci:connectid from="2" to="1" type="true"/>
									<sci:version iVal="2"/>
								</sci:protocol>
							</sci:data>
							<sci:data object="SciTegic.GenerateData.1">
								<sci:component name="Generate Empty Data" version="2">
									<sci:arg name="NumberToGenerate" type="LongType" required="true" visibility="visible" multi="false">
										<sci:help>The number of empty data records to generate</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Initialize Condition" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="true">
										<sci:help>PilotScript expression to initialize any values.  When run in mode &quot;After Each Process&quot; this expression is evaluated for each incoming data item.  When run in mode &quot;NoMoreData&quot; this expression is evaluated a single time.</sci:help>
										<sci:value>#Count := 0;
#MaxCount := $(NumberToGenerate);</sci:value>
									</sci:arg>
									<sci:arg name="Condition" type="ExpressionType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>PilotScript boolean expression which determines the conditions under which we continue to generate data.</sci:help>
										<sci:value>#Count++;
#Count &lt;= #MaxCount;</sci:value>
									</sci:arg>
									<sci:arg name="WhenToGenerate" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>When to generate the new data records:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;AfterEachProcess&lt;/i&gt; - Once for each incoming data record (i.e., after each process call)
&lt;li&gt;&lt;i&gt;OnNoMoreData&lt;/i&gt; - Once all incoming data has passed through or if none is ever expected component is informed it will receive no more data.
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">OnNoMoreData</sci:legalval>
										<sci:legalval>AfterEachProcess</sci:legalval>
									</sci:arg>
									<sci:arg name="ProcessDataAction" type="StringType" required="true" visibility="visible" multi="false" uimpl="true">
										<sci:help>Indicates fate of incoming data:
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;PassData&lt;/i&gt; - The data is passed out the Pass port
&lt;li&gt;&lt;i&gt;FailData&lt;/i&gt; - The data is passed out the Fail port
&lt;li&gt;&lt;i&gt;DeleteData&lt;/i&gt; - The data is deleted and not passed
&lt;/ul&gt;</sci:help>
										<sci:legalval selected="true">PassData</sci:legalval>
										<sci:legalval>FailData</sci:legalval>
										<sci:legalval>DeleteData</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval>ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/core</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Wed Oct 11 11:39:54 2006</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Generate Empty Data</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Generate Empty Data</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>DocumentNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{ABC452F1-9E41-4A63-A8ED-744A13235DE6}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>90 -275</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Generates empty data records.</sci:value>
										<sci:value>Generates a user specified number of empty records.

You can edit the generation condition in the advanced parameter to have this component generate records until the condition becomes false. This generates records as long as the last expression in the Condition is TRUE. The example expression generates @MaxCount records. You can change the initial value of @MaxCount in the Initialize Condition to change the number, or replace these expressions with your own creations.

</sci:value>
										<sci:value>None</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.3</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>3</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Utilities\Create Empty Data</sci:value>
									</sci:arg>
								</sci:component>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>#pass</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
										<sci:value>if @DestinationFolder is defined then
	@DestFolder := @DestinationFolder;
elsif @&apos;Destination Folder&apos; is defined then
	@DestFolder := @&apos;Destination Folder&apos;;
else
	@DestFolder := @Username . &apos;/LearnedProperties&apos;;
end if;

if @LearnedPropertyName is defined then
	@ModelComponentName := @LearnedPropertyName;
else
	@ModelComponentName := @LearnedModelName;
end if;

#pass := False;

if @WhenFinished eq &apos;ShowStatisticsTable&apos; then
	@OutputOption := &apos;Show Statistics Table in Browser&apos;;
	#pass := True;
elsif @WhenFinished eq &apos;OutputStatisticsTableReport&apos; then
	@OutputOption := &apos;Output Reporting Element&apos;;
	#pass := True;
elsif @WhenFinished eq &apos;OutputStatistics&apos; then
	@OutputOption := &apos;Output Statistics&apos;;
	#pass := True;
end if;
</sci:value>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Show stats table?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>390 -275</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>4</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.EvaluateExpression.1">
								<sci:component name="Custom Filter (PilotScript)" version="2">
									<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>The PilotScript expression used to filter the data.</sci:help>
										<sci:member>Initial Expression</sci:member>
										<sci:member>Final Expression</sci:member>
										<sci:member>Keep Calculated Properties</sci:member>
										<sci:value>@WhenFinished eq &apos;DisplayMessage&apos;</sci:value>
									</sci:arg>
									<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the component
is first initialized (when the first data record enters).
&lt;p/&gt;
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>&lt;p&gt;
An expression evaluated only when the
component is finalized (once the last data
record has passed).
&lt;p/&gt;
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
									</sci:arg>
									<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Allows any properties that were calculated in
&quot;Expression&quot; to be included with the exiting
record.
Otherwise, these properties are removed after
the evaluation is complete.</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Custom Error Message</sci:help>
									</sci:arg>
									<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
										<sci:help>Version of expression parser to use.</sci:help>
										<sci:value>2</sci:value>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Mon Jan 21 09:57:16 2008</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>@WhenFinished eq &apos;ShowStatisticsTable&apos;?</sci:value>
									</sci:arg>
									<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
										<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
										<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>FilterNode</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>Custom Filter (PilotScript)</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{DD58ECD1-516F-48FE-A5DB-8328AED680F2}</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>690 -455</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>Passes data records for which a PilotScript expression evaluates to True

</sci:value>
										<sci:value>&lt;p&gt;For each incoming data record, the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated. If the last statement in the expression evaluates to True or non-zero, the record is sent out the Pass port. Otherwise it is sent out the Fail port.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to True or non-zero</sci:value>
										<sci:value>Generic</sci:value>
										<sci:value>Data records for which the final expression in the PilotScript evaluates to False or zero</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>5</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Property Filters\Custom Filter (PilotScript)</sci:value>
									</sci:arg>
								</sci:component>
								<sci:proplist>
									<sci:propval name="RegistrationVersion">7.0.0.35</sci:propval>
								</sci:proplist>
							</sci:data>
							<sci:data object="SciTegic.Protocol.1">
								<sci:component name="Display Message for Each Data" version="2">
									<sci:arg name="MessageTitle" type="StringType" required="false" visibility="visible" multi="false">
										<sci:help>The title for the message box</sci:help>
										<sci:value>Message</sci:value>
									</sci:arg>
									<sci:arg name="MessageText" type="LinkSingleParentParameterType" required="false" visibility="visible" multi="false">
										<sci:metaproplist>
											<sci:propval name="SCI_InitializeUsingOrigType">ExpressionType</sci:propval>
										</sci:metaproplist>
										<sci:help>Specifies the message to be displayed, in the form of a PilotScript expression.
Text should be quoted and the expression may also include global
property values.</sci:help>
										<sci:member>DisplayWhen</sci:member>
										<sci:value>MessageText</sci:value>
									</sci:arg>
									<sci:arg name="DisplayWhen" type="ExpressionType" required="false" visibility="visible" multi="false">
										<sci:help>When this expression is evaluated as true, the message is displayed. Enter &quot;True&quot; if the message should always be displayed.</sci:help>
										<sci:value>True</sci:value>
									</sci:arg>
									<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
										<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
									</sci:arg>
									<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
										<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
										<sci:value>mText</sci:value>
									</sci:arg>
									<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
										<sci:help>When the component runs, process once or until done for each process call</sci:help>
										<sci:legalval>True</sci:legalval>
										<sci:legalval selected="true">False</sci:legalval>
									</sci:arg>
									<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
										<sci:help>Component Attributes</sci:help>
										<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
										<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
										<sci:legalval>ComponentReturnsFail</sci:legalval>
										<sci:legalval>ComponentRunsLocal</sci:legalval>
									</sci:arg>
									<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
										<sci:legalval selected="true">Halt</sci:legalval>
										<sci:legalval>Fail</sci:legalval>
										<sci:legalval>Pass</sci:legalval>
									</sci:arg>
									<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:help>Protocol Options</sci:help>
										<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
										<sci:legalval>Cant Replace With Copy</sci:legalval>
										<sci:legalval>Cant Open</sci:legalval>
									</sci:arg>
									<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The user who registered this component.</sci:help>
										<sci:value>scitegic/generic</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The date this component was registered.</sci:help>
										<sci:value>Tue Jun 29 17:01:36 2010</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>Display Message For Each Data</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol AutoLayout</sci:help>
										<sci:value>true</sci:value>
									</sci:arg>
									<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
										<sci:value>ViewerNode</sci:value>
									</sci:arg>
									<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
										<sci:help>Component Revision</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The component this component is based upon.</sci:help>
										<sci:value>SubProtocol</sci:value>
									</sci:arg>
									<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>{8FA02097-F56D-4086-92B4-61F53E9B4EC7}</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:value>990 -455</sci:value>
									</sci:arg>
									<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>ProtocolCommentSize</sci:help>
										<sci:value>1100 500</sci:value>
									</sci:arg>
									<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
										<sci:value>100</sci:value>
										<sci:value>For each data record, displays a dialog box with a message and an OK button</sci:value>
										<sci:value>&lt;p&gt;Construct the message in &lt;i&gt;MessageText&lt;/i&gt; using a PilotScript expression, which can contain static text, data properties and global properties.  A new message is created for each data record.&lt;/p&gt;
&lt;p&gt;The protocol is paused until you click OK on the message dialog.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; This component is only intended for use with Pipeline Pilot Professional Client (not Pipeline Pilot Web Port).&lt;/p&gt; </sci:value>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>Generic</sci:value>
										<sci:value/>
										<sci:value>None</sci:value>
										<sci:value/>
									</sci:arg>
									<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>By Ref</sci:help>
										<sci:value>1</sci:value>
									</sci:arg>
									<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The server version when this component was registered</sci:help>
										<sci:value>6.0.1.0</sci:value>
									</sci:arg>
									<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
									<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Sticky Notes</sci:help>
									</sci:arg>
									<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Protocol Scale</sci:help>
										<sci:value>100</sci:value>
									</sci:arg>
									<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
										<sci:help>Local Component Identifier</sci:help>
										<sci:value>6</sci:value>
									</sci:arg>
									<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
										<sci:help>Subprotocol Made Link Into Copy</sci:help>
										<sci:value>0</sci:value>
									</sci:arg>
									<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
										<sci:help>The original path within the database of this component.</sci:help>
										<sci:value>Components\Data Access and Manipulation\Viewers\Dialogs\Display Message for Each Data</sci:value>
									</sci:arg>
								</sci:component>
								<sci:protocol/>
							</sci:data>
							<sci:connectid from="3" to="4" type="true"/>
							<sci:connectid from="4" to="7" type="true"/>
							<sci:connectid from="4" to="5" type="false"/>
							<sci:connectid from="5" to="6" type="true"/>
							<sci:version iVal="1"/>
						</sci:protocol>
					</sci:data>
					<sci:version iVal="1"/>
				</sci:protocol>
			</sci:data>
			<sci:data object="SciTegic.MergeProperties.1">
				<sci:component name="Merge Data" version="2">
					<sci:arg name="MergeUsing" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Name of the property (or a comma-separated list of properties) that will be used to merge on.  Data records having the same value for this property will be merged.  This property must contain scalar (i.e., non-array) data.

&lt;p&gt;If multiple properties are specified, the values must be the same for all of the properties (unless &lt;i&gt;MergeUsingListType&lt;/i&gt; is set to UseFirstDefinedValue).&lt;/p&gt;
</sci:help>
						<sci:member>MergeUsingListType</sci:member>
						<sci:member>MergePropertyType</sci:member>
						<sci:member>AcceptNonNumericStringsAsNumbers</sci:member>
						<sci:member>IgnoreCase</sci:member>
						<sci:value>pdb_code</sci:value>
					</sci:arg>
					<sci:arg name="MergeUsingListType" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;How &lt;i&gt;MergeUsing&lt;/i&gt; properties are interpreted when more than one property is listed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UseFirstDefinedValue: Use only the first property in the list that has a defined value for a record as the merge key.&lt;/li&gt;
&lt;li&gt;UseAllValues: Use the concatentation of values of all properties listed as the merge key.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>UseFirstDefinedValue</sci:legalval>
						<sci:legalval selected="true">UseAllValues</sci:legalval>
					</sci:arg>
					<sci:arg name="MergePropertyType" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;The types of values found in the property specified by &lt;i&gt;MergeUsing&lt;/i&gt;:

&lt;ul&gt;
&lt;li&gt;IsNumeric: All numbers are converted to doubles for comparison (e.g., 1 = 1.0).&lt;/li&gt;
&lt;li&gt;IsText: All comparisons are made as string values.&lt;/li&gt;
&lt;li&gt;IsDate: The key is considered a date.&lt;/li&gt;
&lt;li&gt;IsFingerprint: The key is considered a fingerprint.  Fingerprint bits are sorted before making the comparison.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval>IsNumeric</sci:legalval>
						<sci:legalval selected="true">IsText</sci:legalval>
						<sci:legalval>IsDate</sci:legalval>
						<sci:legalval>IsFingerprint</sci:legalval>
					</sci:arg>
					<sci:arg name="IgnoreCase" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Considers lower-case and upper-case letters as equivalent when determining the identity of &lt;i&gt;MergeUsing&lt;/i&gt; property values.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergePropertyType to IsText&apos;);
Parameter(&apos;MergePropertyType&apos;) eq &apos;IsText&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="MergeBehavior" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;KeepAll: Keeps all property values by appending values into an array.&lt;/li&gt;
&lt;li&gt;KeepFirst: Keeps only the properties and values from the first example received.  All properties and values from subsequent records matching the property specified by &lt;i&gt;MergeUsing&lt;/i&gt; are discarded.&lt;/li&gt;
&lt;/ul&gt; 
</sci:help>
						<sci:member>WhenMerging</sci:member>
						<sci:member>KeepAllNullString</sci:member>
						<sci:member>KeepAllPreferredNodeName</sci:member>
						<sci:member>PrefixUsingProperty</sci:member>
						<sci:member>Data Are Sorted</sci:member>
						<sci:legalval selected="true">KeepAll</sci:legalval>
						<sci:legalval>KeepFirst</sci:legalval>
					</sci:arg>
					<sci:arg name="WhenMerging" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;When merging using KeepAll behavior, provides fine control over how multiple values are treated.&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;OverwriteOrCreate: Copies all properties of each merged record sequentially, overwriting any values that may already exist (instead of generating an array).&lt;/li&gt;
&lt;li&gt;OverwriteExisting: Only copies properties that already exist on the first merged record, overwriting those original values (instead of creating an array).&lt;/li&gt;
&lt;li&gt;CreateIfNew: Leaves any existing properties alone, and writes only new properties.&lt;/li&gt;
&lt;li&gt;AppendOrCreate: Appends (as an array) if a property already exists, otherwise creates it.&lt;/li&gt;
&lt;li&gt;AppendExisting: Appends (as an array) only to currently existing properties, and discards other new property values.&lt;/li&gt;
&lt;/ul&gt;


</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval selected="true">AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
					</sci:arg>
					<sci:arg name="KeepAllNullString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;This string is used during append using KeepAll &lt;i&gt;MergeBehavior&lt;/i&gt; to pad out empty values. It keeps the number of values of generated arrays of values the same, and in sync, for multiple samples. The default value is None, which causes no padding to occur.&lt;/p&gt;
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
						<sci:value>None</sci:value>
					</sci:arg>
					<sci:arg name="KeepAllPreferredNodeName" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;If defined, and &lt;i&gt;MergeBehavior&lt;/i&gt; is KeepAll, this contains a name that is used to prioritize which underlying data record should be kept.  If not defined, the first record with a given merge value is kept; if this is defined, and at least one of the data records contains a node of this type, then the first example of that type is kept.&lt;/p&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, set MergeBehavior to KeepAll&apos;);
Parameter(&apos;MergeBehavior&apos;) eq &apos;KeepAll&apos;</sci:enabledscript>
						<sci:value>Molecule</sci:value>
					</sci:arg>
					<sci:arg name="PrefixUsingProperty" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;When multiple values for a property are retained (under KeepAll merge behavior), the original property name is prefixed differently for each original value it must hold. The prefix is constructed from the value of this property, followed by an underscore.
When not specified, a prefix is not used and multiple values are separated as an array (such as property[1], property[2], etc).&lt;/p&gt;


</sci:help>
					</sci:arg>
					<sci:arg name="Data Are Sorted" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies whether the input data are already sorted by the &lt;i&gt;MergeUsing&lt;/i&gt; properties. If so, then the merge can be done much faster with less memory impact. Use this option only if you are certain that the input data are sorted.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you set &lt;i&gt;Data Are Sorted&lt;/i&gt; to True and the input data are &lt;b&gt;not&lt;/b&gt; sorted, an error is generated.
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OutputFrequency" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Add a property called &quot;Frequency&quot; that contains the number of individual records included in the resulting merged record.&lt;/p&gt;
</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="AcceptNonNumericStringsAsNumbers" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Determines whether &lt;b&gt;all&lt;/b&gt; string values for the MergeUsing property -- even non-numeric ones such as &apos;abc&apos; or &apos;1.0c&apos; -- will be coerced to numbers when  MergePropertyType is set to IsNumeric.  

If set to True, then a string such as &apos;abc&apos; that does not begin with a numeric portion will be coerced to zero, while a string such as &apos;1.0c&apos; that begins with a numeric portion will be coerced to the corresponding number (in this case 1.0).  

If set to False, then records containing non-numeric strings for the MergeUsing property will be sent out the Fail port.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 13 07:05:29 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;MergeUsing&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>if (strlength(trim(parameter(&apos;MergeUsing&apos;, 2))) &gt; 0) then
	&quot;Merge on &quot; . trim(parameter(&apos;MergeUsing&apos;, 2));
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Merge Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>JOINNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{1E393621-138C-466E-8A2B-275A3FAB26E3}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1065 -275</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Merges properties of all data records that share the same key property value into a single data record</sci:value>
						<sci:value>&lt;p&gt;Incoming data records are merged into a single data record if they have the same value for the &lt;i&gt;MergeUsing&lt;/i&gt; property, which acts as an ID or index property.&lt;/p&gt;
&lt;p&gt;This component can be used to perform two types of operation:
&lt;ul&gt;
&lt;li&gt;Merge data records from multiple input streams. This combines properties from the multiple streams that are associated with the same index (i.e., &lt;i&gt;MergeUsing&lt;/i&gt;) property. Typically this will widen the data records with more properties and reduce the total number of data records.&lt;/li&gt;
&lt;li&gt;Merge data records from a single input stream to create array data. This maintains the number of properties but will reduce the number of records.&lt;/li&gt;
&lt;/ul&gt;
Note that these operations can occur simultaneously.
&lt;p&gt;&lt;i&gt;MergeBehavior&lt;/i&gt; controls how properties, other than the &lt;i&gt;MergeUsing&lt;/i&gt; property, are handled.&lt;/p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Multiple &lt;i&gt;MergeUsing&lt;/i&gt; properties can be specified.  In this case, data records are merged if the value for each &lt;i&gt;MergeUsing&lt;/i&gt; property matches across the data records.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;b&gt;See Also: &lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you wish to merge records based on molecular structures, use &lt;a href=&quot;javascript:DoLink(&apos;
{2E21E16B-6901-46F3-8780-F14D3D7057CE}
&apos;)&quot;&gt;
Merge Molecules&lt;/a&gt; (which requires the Chemistry Collection).&lt;/p&gt;
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records that contain the properties being used for merging</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records that do not contain the properties being used for merging</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.119</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ReplaceNullsInFirstRecord" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="false">
						<sci:help>Specifies whether to replace nulls in the first merged record when KeepAllNullString is specified.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>40</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Manipulators\Merge Data</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Rename Properties" version="2">
					<sci:arg name="Original Property Names" type="PropertyNameType" required="true" visibility="visible" multi="true">
						<sci:help>An array of property names to rename. The new name will be the corresponding name in &lt;i&gt;New Property Names&lt;i&gt;.</sci:help>
						<sci:value>Developability Index (All)</sci:value>
					</sci:arg>
					<sci:arg name="New Property Names" type="StringType" required="true" visibility="visible" multi="true">
						<sci:help>An array of the new property names. The original name will be the corresponding name in &lt;i&gt;Original Property Names&lt;i&gt;.</sci:help>
						<sci:value>DI_all</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>RenameProperties</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Feb 28 12:30:36 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#orig := Parameter(&apos;Original Property Names&apos;);
#new := Parameter(&apos;New Property Names&apos;);
if (numvalues(#orig) == 0 OR #orig[1] eq &quot;&quot; OR numvalues(#new) == 0 OR #new[1] eq &quot;&quot;) then
	&quot;&quot;;
else
  #display := &apos;Rename &apos; . #orig[1] . &apos; to &apos; . #new[1];
  if (numvalues(#orig) &gt; 1) then
    #display .= &apos;, ...&apos;;
  end if;
  #display;
end if;
</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1365 -275</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{04496ABE-C1D2-43D2-83D4-35AC9FC8D501}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Rename the specified properties</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, rename the properties found in the &lt;i&gt;Original Property Names&lt;/i&gt; list to the names provided in &lt;i&gt;New Property Names&lt;/i&gt;.

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To remove specified properties from each data record, use 
&lt;a href=&quot;javascript:DoLink(&apos;{C2ED35FF-5397-4877-AADB-10F1A15D60E2}&apos;)&quot;&gt;Remove Properties&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>With only the specified properties remaining</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1376</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>45</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Rename Properties</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Is Property Defined Filter" version="2">
					<sci:arg name="Property Name" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Property the filter will be applied to</sci:help>
						<sci:value>DI_all</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="hidden" multi="false">
						<sci:help>Contains less commonly used parameters.</sci:help>
						<sci:member>TreatNullsAsDefined</sci:member>
					</sci:arg>
					<sci:arg name="TreatNullsAsDefined" type="BoolType" required="false" visibility="hidden" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>If True, a null property (one where &lt;i&gt;GetPropertyType&lt;/i&gt; returns &lt;i&gt;Null&lt;/i&gt;) will pass the filter.

If False, these null properties will not pass the filter. This latter behavior is consistent with the &lt;i&gt;prop is defined&lt;/i&gt; expression in PilotScript.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>IsDefined</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Sep 19 12:47:46 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#propertyName := trim(Parameter(&apos;Property Name&apos;, 2));
if(strlength(#propertyName) &gt; 0) then		
	&apos;Is &apos; . #propertyName . &apos; defined&apos;;
else
	&apos;&apos;;
end if;
				</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{74CB089F-EAA6-4FC4-A247-08453D1ADED4}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1665 -275</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a specified property is defined</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;Property Name&lt;/i&gt; is checked.  If the value is defined, the record is sent out the Pass port.  Otherwise it is sent out the Fail port.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the property is defined</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the property is NOT defined</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>44</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Is Property Defined Filter</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Is Property Defined Filter" version="2">
					<sci:arg name="Property Name" type="PropertyNameType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Property the filter will be applied to</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="hidden" multi="false">
						<sci:help>Contains less commonly used parameters.</sci:help>
						<sci:member>TreatNullsAsDefined</sci:member>
					</sci:arg>
					<sci:arg name="TreatNullsAsDefined" type="BoolType" required="false" visibility="hidden" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>If True, a null property (one where &lt;i&gt;GetPropertyType&lt;/i&gt; returns &lt;i&gt;Null&lt;/i&gt;) will pass the filter.

If False, these null properties will not pass the filter. This latter behavior is consistent with the &lt;i&gt;prop is defined&lt;/i&gt; expression in PilotScript.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>IsDefined</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Sep 19 12:47:46 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#propertyName := trim(Parameter(&apos;Property Name&apos;, 2));
if(strlength(#propertyName) &gt; 0) then		
	&apos;Is &apos; . #propertyName . &apos; defined&apos;;
else
	&apos;&apos;;
end if;
				</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{74CB089F-EAA6-4FC4-A247-08453D1ADED4}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1965 -275</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes data records for which a specified property is defined</sci:value>
						<sci:value>&lt;p&gt;For each incoming data record, the value of the property specified by &lt;i&gt;Property Name&lt;/i&gt; is checked.  If the value is defined, the record is sent out the Pass port.  Otherwise it is sent out the Fail port.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the property is defined</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records for which the property is NOT defined</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>88</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Filters\Is Property Defined Filter</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="RegistrationVersion">17.1.0.119</sci:propval>
				</sci:proplist>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>Dev := DI_all &lt; 100;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2265 -275</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>58</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Random Percent Filter" version="2">
					<sci:arg name="Percent" type="DoubleType" required="true" visibility="visible" multi="false">
						<sci:help>Enter the percentage of records to pass as a number between 0.0 and 100.0.</sci:help>
						<sci:value>80</sci:value>
					</sci:arg>
					<sci:arg name="Seed" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>Random number generator seed. If left blank the current time in seconds is used as the seed.</sci:help>
						<sci:value>333</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Sets up the random seed.</sci:help>
						<sci:value>srand($(seed));</sci:value>
					</sci:arg>
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Defines how the random filtering is performed.</sci:help>
						<sci:value>rand() * 100 &lt; $(Percent);</sci:value>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Not used.</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="nevershow" multi="false">
						<sci:help>Whether calculated properties are kept on the data property list.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{DD58ECD1-516F-48FE-A5DB-8328AED680F2}">
						<sci:help>Argument Description</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Wed Jun 01 10:08:01 2005</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>FILTERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{B9AF5701-25F7-4492-984D-85BEBA2C704C}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Random Percent Filter</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2565 -275</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Passes a specified percentage of data records by random selection</sci:value>
						<sci:value>&lt;p&gt;Applies a probability, based on the &lt;i&gt;Percent&lt;/i&gt; value, which determines if a record should be passed. (Because the probability is applied to each record, the total percent of records sent out the Pass port may differ slightly from the actual &lt;i&gt;Percent&lt;/i&gt; value entered.) All remaining records are sent out the Fail port.&lt;/p&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Records which pass the random selection filter.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records which do not pass the random selection filter.</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>5.0.0.103</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>26</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Data Filters\Random Percent Filter</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Excel Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;
The file(s) or URL source(s) to read.
&lt;/p&gt;
&lt;p&gt;
This may be a comma-delimited list of files or URLs. URLs may include http, https and ftp. Simple wildcard tokens are supported (* and ?).
&lt;/p&gt;</sci:help>
						<sci:member>Keep Properties</sci:member>
						<sci:member>Maximum</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:value>userdata:/DI_all_labels.csv</sci:value>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>The maximum number of data records to read (all records if value is empty).</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The type of tag to create to identify the source of data records. A property called &quot;SourceTag&quot; is created and holds the value indicated.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SourceTag property is created and any existing ones are removed.&lt;/li&gt;
&lt;li&gt;Filename: The name of the file read.&lt;/li&gt;
&lt;li&gt;FilenameAndExtension: The name of the file read with its file extension.&lt;/li&gt;
&lt;li&gt;FullFilename: The name of the file read, including the directory path.&lt;/li&gt;
&lt;li&gt;Number: When multiple files are read in this component, they are numbered 1,2,3...&lt;/li&gt;
&lt;li&gt;Letter: When multiple files are read in this component, they are lettered A, B, C...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A list of properties the reader should retain for each data record that is output. If a value is not defined, the reader retains all properties. If the parameter contains the value &quot;-&quot; (minus sign), no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, property names are taken from the first line of data in the file. When False, properties are named Column1, Column2, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Sheets" type="StringType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;Identifies the Excel worksheets within the specified file to read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AllSheets: Read all worksheets sequentially.&lt;/li&gt;
&lt;li&gt;ActiveSheet: Read only the active worksheet when opened by Excel. (The active sheet is the sheet on top when the file was saved.)&lt;/li&gt;
&lt;li&gt;SheetName: Read only the worksheet named by the &lt;i&gt;SheetName&lt;/i&gt; parameter.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>SheetTag</sci:member>
						<sci:member>SheetName</sci:member>
						<sci:legalval selected="true">AllSheets</sci:legalval>
						<sci:legalval>ActiveSheet</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
					</sci:arg>
					<sci:arg name="SheetName" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>This parameter is only relevant if &lt;i&gt;Sheet&lt;/i&gt; is set to &quot;SheetName&quot;. In this case, use this parameter to specify which sheet is to be read.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	      &apos;To enable &apos;.ParameterName().&apos;, set Sheets to &quot;SheetName&quot;&apos;);
(parameter(&apos;Sheets&apos;) eq &apos;SheetName&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="SheetTag" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;If set, a new property named &quot;SheetTag&quot; is defined on each generated data record. This property indicates the worksheet from which the data is read.
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;None: No SheetTag property is created.&lt;/li&gt;
&lt;li&gt;SheetName: The name of the worksheet from which the data record is read.&lt;/li&gt;
&lt;li&gt;SheetNumber: When multiple worksheets are read in from one file, they are numbered 1,2,3...&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>SheetName</sci:legalval>
						<sci:legalval>SheetNumber</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>AllLines</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>DateFormat</sci:member>
						<sci:member>PreserveExcelFormats</sci:member>
						<sci:member>Reduced Memory Usage</sci:member>
						<sci:member>Extract Comments</sci:member>
						<sci:member>Cells can contain Arrays</sci:member>
						<sci:member>Array Element Delimiter</sci:member>
						<sci:member>Read Background Color</sci:member>
						<sci:member>Treat empty cells as non-existant</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A comma-separated list of rows and
row ranges to specify which initial rows in each
Excel worksheet should be ignored by the
parser (column headers will be read from the
next row).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the character or string used to represent an undefined string in the file being read. When a cell value is encountered containing the undefined string, the property is omitted from the output data record.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>When True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>Trims whitespace from the left and right ends of each value.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="DateFormat" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Determines the way in which date values are assigned to generated data records. Choose the &quot;Text&quot; option to format Excel date cell values as text strings. The &quot;DateTime&quot; option will result in SciTegic DateTime data properties on the data record.</sci:help>
						<sci:legalval selected="true">Text</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
					</sci:arg>
					<sci:arg name="PreserveExcelFormats" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Determines if formatting of the data is preserved. Choose the &quot;True&quot; option to preserve the Excel formats and mimic the behavior of Excel(on server) component. This value is set to &quot;False&quot; by default. Default behavior is to use the original non-formatted numeric cell values to generate properties.  Note that if the value is &quot;True&quot;, all values will be converted to strings in order to preserve the formatting.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Reduced Memory Usage" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;When set to True and the Shortcut Version of Implementation parameter is greater than 1, this component will use much less memory than the previous version with some limitations (&lt;i&gt;See &quot;Known Limitations&quot; below&lt;/i&gt;). When you encounter the issues with this mode, turn this parameter off to work around these limitations.&lt;/p&gt;

&lt;br/&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;When the value is set to False, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the source file&apos;s format is Excel .XLS format (Excel &apos;97-2003)&lt;/b&gt;, this parameter is ignored. This parameter is only applicable to Excel 2007 .XLSX and .XLSM files.&lt;/li&gt;
&lt;li&gt;When &lt;b&gt;the Shortcut Version is absent or less than 2&lt;/b&gt;, this parameter is ignored. In this case, old version&apos;s behavior is maintained.&lt;/li&gt;
&lt;/ul&gt; 

&lt;br/&gt;
&lt;b&gt;Known Limitations:&lt;/b&gt;
&lt;br/&gt;
We are aware of the following limitations when using this parameter.  
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Source files should be saved with Microsoft Excel.&lt;/b&gt; Files generated by 3rd party programs may not work with this parameter.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Excel formula support is very limited.&lt;/b&gt; Files that contain Excel formulas may not work with this parameter.&lt;/li&gt;
&lt;/ul&gt; 

</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Extract Comments" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Extract Comments</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Extract comments from Excel cells and add them to the property with the &quot;SCI_Comment&quot; metadata.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>merge_tagname</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Shortcut Version" type="LongType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Used to maintain backwards compatibility for older protocols with this shortcut component.</sci:help>
						<sci:legalval/>
						<sci:legalval>1</sci:legalval>
						<sci:legalval selected="true">2</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Cells can contain Arrays" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Cells can contain Arrays</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Set to &lt;code&gt;true&lt;/code&gt; if values in cells containing certain markers, e.g. the new-line character, are to be treated as arrays.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Array Element Delimiter" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Array Element Delimiter</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Marker character to separate multiple values in a single cell.</sci:help>
						<sci:enabledscript>Parameter(&apos;Cells can contain Arrays&apos;) eq &apos;True&apos;;</sci:enabledscript>
						<sci:legalval selected="true">\n</sci:legalval>
						<sci:legalval>;</sci:legalval>
						<sci:legalval>,</sci:legalval>
						<sci:legalval>:</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Read Background Color" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Read Background Color</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;div&gt;If set to &lt;code&gt;True&lt;/code&gt;, the cells&apos; background color information is read and stored in a metadata property called &lt;i&gt;SCI_BackgroundColor&lt;/i&gt;.&lt;/div&gt;
&lt;div&gt;That property, if defined, holds a &lt;i&gt;ByteArrayValue&lt;/i&gt; of size 3, with the elements being the channels in the RGB space.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Treat empty cells as non-existant" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Treat empty cells as non-existant</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If a cell is empty  or its value matches the value of the &lt;i&gt;UndefinedString&lt;/i&gt; parameter, this parameter controls how to treat that cell:&lt;br/&gt; If this parameter is &lt;code&gt;True&lt;/code&gt;, a &lt;i&gt;SciTegic.value.NullValue&lt;/i&gt; will be created. &lt;br/&gt; If this parameter is &lt;code&gt;False&lt;/code&gt; (the default), an empty &lt;i&gt;SciTegic.value.StringValue&lt;/i&gt; will be created.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{14D98B18-C990-432C-834B-7026565E5ABF}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -455</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Read data from Excel files. (Formerly called &quot;Excel Reader (Cross Platform)&quot;)</sci:value>
						<sci:value>&lt;p&gt;Reads the Excel file or files specified by &lt;em&gt;Source&lt;/em&gt;, creating one record for each row in each worksheet in each file. In addition to multiple comma-delimited files, there is support for simple wild cards (* and ?), and support for remote URLs (e.g. http).&lt;/p&gt;

&lt;p&gt;This component reads both the older binary Excel .XLS format (Excel &apos;97-2003) and the newer Excel 2007 .XLSX format.&lt;/p&gt;

&lt;p&gt;This component can also read macro-enabled workbooks with the .XLSM extension, but &lt;b&gt;macros are not evaluated&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The component does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated
as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc. are used as the
property names.&lt;/p&gt;

&lt;p&gt;Use &lt;i&gt;Sheets&lt;/i&gt; and &lt;i&gt;SheetName&lt;/i&gt; to include specific worksheets within the files. Individual rows and ranges of rows can be excluded using &lt;i&gt;CommentLines&lt;/i&gt;.&lt;/p&gt;
</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>One record per row in the Excel spreadsheet(s).</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1778</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Apr 19 10:50:26 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>38</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolModified" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Modified</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{8022246D-CCC0-4AEE-ACC1-43F2E79975B0}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Excel Reader</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>pdb_code := ToLower(Name);</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>43</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.PropertyFunctions.1">
				<sci:component name="Remove Properties" version="2">
					<sci:arg name="PropertyList" type="PropertyNameType" required="true" visibility="visible" multi="true">
						<sci:help>The names of properties to remove from each data record entering the component</sci:help>
						<sci:value>Name</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Action" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>the action to perform</sci:help>
						<sci:value>Remove</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 13 07:18:43 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;PropertyList&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#propertyList := Parameter(&apos;PropertyList&apos;);
#displayName := &apos;&apos;;
for #i in 1 .. numvalues(#propertyList) loop
  #prop := trim(#propertyList[#i]);
  if (strlength(#prop) &gt; 0) then
    if (strlength(#displayName) &gt; 0) then
	  #displayName .= &apos;, &apos;;
	end if;
    #displayName .= #prop;
  end if;
end loop;
if(strlength(#displayName) &gt; 0) then		
	&apos;Remove &apos; . #displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>765 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{C2ED35FF-5397-4877-AADB-10F1A15D60E2}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Removes the specified properties</sci:value>
						<sci:value>For each data record that enters the component, the properties specified by &lt;i&gt;PropertyList&lt;/i&gt; are removed from the  record. 

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;To keep only a few properties from a long list, it may be more efficient to instead use &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt;.&lt;/p&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Data records with the specified properties removed</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>17.1.0.119</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>65</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Remove Properties</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.DelimitedWriter.1">
				<sci:component name="Delimited Text Writer" version="2">
					<sci:arg name="Destination" type="DestinationURLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>The location to which to write the data. Can be a file, a network resource, a global property, or a data record property.
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot; and add an output port.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the destination is a file or network resource, be sure to specify an extension such as .txt or .xls. To save in compressed (zipped) format, add the extension .gz or .zip to the filename.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>IfFileExists</sci:member>
						<sci:member>CharacterEncoding</sci:member>
						<sci:member>Destination Authentication Options</sci:member>
						<sci:value>job:/devTestData.csv</sci:value>
					</sci:arg>
					<sci:arg name="Destination Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Destination Authentication Options Username</sci:member>
						<sci:member>Destination Authentication Options Password</sci:member>
						<sci:member>Destination Authentication Options Authentication Method</sci:member>
						<sci:member>Destination Authentication Options KDC Server</sci:member>
						<sci:member>Destination Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Destination Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Destination Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Destination Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Destination Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Destination Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Destination&apos;);
Parameter(&apos;Destination&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to write. If empty, all records are written out.</sci:help>
					</sci:arg>
					<sci:arg name="IfFileExists" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies action to take if a file specified by &lt;i&gt;Destination&lt;/i&gt; already exists. Options are:
&lt;ul&gt;
&lt;li&gt;Overwrite: Replace the existing file with the new content.
&lt;li&gt;Append: Append the new content to the end of the existing file.
&lt;li&gt;Halt: Raise an error and halt the protocol.
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Overwrite</sci:legalval>
						<sci:legalval>Append</sci:legalval>
						<sci:legalval>Halt</sci:legalval>
					</sci:arg>
					<sci:arg name="CharacterEncoding" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies the character set encoding to use within the destination file. Options are:
&lt;ul&gt;
&lt;li&gt;ANSI: an encoding where each character is defined by a single byte. This allows the Latin-1 (ISO-8859-1) character set to be written to the file. Virtually all applications can read these files.
&lt;li&gt;UTF-8: a variable length encoding supporting all Unicode characters. Each character is represented by 1 to 6 bytes. This allows writing out any extended characters specified in the Unicode character sets while minimizing the size of the file when most characters are from the ANSI set. Some applications do not support UTF-8 files.
&lt;li&gt;Unicode: (also known as UCS-2) represents each character by exactly 2 bytes in &quot;little-endian&quot; order. Many applications do not support this encoding.
&lt;li&gt;Unicode big endian: represents each character by exactly 2 bytes in &quot;big-endian&quot; order. Many applications do not support this encoding.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you choose an option other than ANSI, then take note of the &lt;i&gt;UseByteOrderMark&lt;/i&gt; setting.
&lt;li&gt;For more information about each of these encoding styles, go to &lt;a href=&quot;javascript:DoLink(&apos;http://www.unicode.org&apos;)&quot;&gt;http://www.unicode.org&lt;/a&gt;.
&lt;li&gt;The UCS-2 encoding has been superseded by &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/UTF-16&apos;)&quot;&gt;UTF-16&lt;/a&gt; but the two 
are equivalent for all characters in the &lt;a href=&quot;javascript:DoLink(&apos;https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane&apos;)&quot;&gt;Basic Multilingual Plane&lt;/a&gt; .
&lt;/ul&gt;
</sci:help>
						<sci:member>UseByteOrderMark</sci:member>
						<sci:legalval selected="true">ANSI</sci:legalval>
						<sci:legalval>UTF-8</sci:legalval>
						<sci:legalval>Unicode</sci:legalval>
						<sci:legalval>Unicode big endian</sci:legalval>
					</sci:arg>
					<sci:arg name="UseByteOrderMark" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether to use a byte order mark (BOM) when writing a file with a &lt;i&gt;CharacterEncoding&lt;/i&gt; other than ANSI. The BOM is a set of 2 or 3 bytes written to the start of a file or data stream to indicate the character encoding of the following data. BOMs are more widely used in Windows than in Linux environments. (For example, Windows Notepad includes a BOM in UTF-8 files.)
&lt;p&gt;
Options are:
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always: For non-ANSI encodings, always writes a BOM at the start of the output stream.
&lt;li&gt;Never: Never writes a BOM at the start of the output stream.
&lt;li&gt;Native: Equivalent to &quot;Always&quot; on Windows and &quot;Never&quot; on Linux.
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set CharacterEncoding to a value other than &quot;ANSI&quot;&apos;);
	Parameter(&apos;CharacterEncoding&apos;) ne &apos;ANSI&apos;;</sci:enabledscript>
						<sci:legalval selected="true">Always</sci:legalval>
						<sci:legalval>Never</sci:legalval>
						<sci:legalval>Native</sci:legalval>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the character to use to separate
the fields in the file. (Whole records are separated by line breaks.) Make sure you use a different
MultiValueDelimiter than Delimiter!</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval selected="true">Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values on a single property. If &quot;None&quot;, 
multiple values are separated into their own columns.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="Format Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:member>OutputColumnNames</sci:member>
						<sci:member>OutputColumnTypes</sci:member>
						<sci:member>OutputRowNumber</sci:member>
						<sci:member>UndefinedString</sci:member>
						<sci:member>MissingValue Format</sci:member>
						<sci:member>NewlineStyle</sci:member>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Text to output when data for a given column is not present (leave empty or enter text of choice)</sci:help>
					</sci:arg>
					<sci:arg name="OutputColumnNames" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Output column names</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="OutputColumnTypes" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Output a row that includes column types</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>SpotfireFormat</sci:legalval>
						<sci:legalval>NDIFormat</sci:legalval>
					</sci:arg>
					<sci:arg name="OutputRowNumber" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Includes the number of the record as the first field for each record</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="MissingValue Format" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>How to write out explicitly-defined MissingValue properties. Each missing value property
contains a string that might indicate the reason the value is missing. You can ask to 
see either the missing value text containing this string, or use the undefined string to write out missing values.</sci:help>
						<sci:legalval selected="true">Use MissingValue Text</sci:legalval>
						<sci:legalval>Use UndefinedString</sci:legalval>
					</sci:arg>
					<sci:arg name="NewlineStyle" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;
Set this value to define the line ending character(s) in the output file. The default value is the Windows-standard carriage return plus line feed (CR+LF), but you might need to change this, especially in a non-Windows environment. Options are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CR+LF (Traditional Windows text file line ending)&lt;/li&gt;
&lt;li&gt;LF (Line feed, &apos;\n&apos;, 0x0A)&lt;/li&gt;
&lt;li&gt;CR (Carriage return, &apos;\r&apos;, 0x0D)&lt;/li&gt;
&lt;li&gt;Native (CR+LF on Windows, LF on Linux)&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">CR+LF</sci:legalval>
						<sci:legalval>LF</sci:legalval>
						<sci:legalval>CR</sci:legalval>
						<sci:legalval>Native</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 16 10:54:42 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Destination&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayName := Trim(Parameter(&apos;Destination&apos;, 2));
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Write to @&apos; . #name;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Write to property &apos; . #name;
	else
		&apos;Write &apos; . #name;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Delimited Writer</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{9B0081A4-6085-4FF0-BD12-AEB8B7BD9CB5}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>2865 -455</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Writes data records to a text file with one data record per line and data separated by delimiters</sci:value>
						<sci:value>&lt;p&gt;Data records are separated with a new line and the individual properties within each record are separated with the character specified by &lt;i&gt;Delimiter&lt;/I&gt;. The property names for the fields are stored as the first line of the file. 
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; to control the output format for properties 
  with more than one value (array properties).
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1864</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>50</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Writers\Delimited Text Writer</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Enrichment Plot Viewer" version="2">
					<sci:arg name="ScoreProperty" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>ScoreProperty</sci:help>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Expression used to test for good.</sci:help>
						<sci:value>Dev</sci:value>
					</sci:arg>
					<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Settings controlling the viewer&apos;s behavior. Options are:
&lt;ul&gt;
&lt;li&gt;Show Plot in Browser: Launch a separate browser window displaying the plot.
&lt;li&gt;Output Reporting Element: Send a Pipeline Pilot Reporting element out the Pass port. This allows the plot to be embedded in a report.
&lt;/ul&gt;</sci:help>
						<sci:legalval>Show Plot in Browser</sci:legalval>
						<sci:legalval selected="true">Output Reporting Element</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
						<sci:value>learnedProp,AllCount,GoodCount</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network runs, processes once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Dec 07 14:09:40 2010</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Enrichment Plot Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -815</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays an enrichment plot for a binary classification model</sci:value>
						<sci:value>Applies a learned model (or specified property) to a set of test data with known good and bad values. Internally, the data records are sorted by the learned model score from highest to lowest. The X-axis of the plot contains the fraction of records seen following the sort. The Y-axis contains the fraction of good records found in the sorted list up to that point. The plot lets you see how well the model assigns higher scores to known good records than to known bad records.
&lt;p&gt;
In addition to the enrichment plot for your model, plots for two hypothetical models are shown as limiting cases. For a &quot;perfect model,&quot; every good record appears in the sorted list before every bad record. For a &quot;random model,&quot; the fraction of good records seen is just the fraction of total records seen, meaning the random model makes no distinction at all between good and bad records.
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>A reporting element containing the plot if the &quot;Output Reporting Element&quot; option is selected</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.5.1.2</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>53</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Viewers\Enrichment Plot Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="ROC Plot Viewer" version="2">
					<sci:arg name="ScoreProperty" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>ScoreProperty</sci:help>
						<sci:member>Allow Score Reversal</sci:member>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="Allow Score Reversal" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Allow Score Reversal</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Specifies whether to change the sign of all scores and redo the ROC computations when the initial ROC AUC value is less than 0.5.
&lt;p&gt;
The ROC analysis initially assumes that greater values of &lt;i&gt;ScoreProperty&lt;/i&gt; correspond to increased likelihood of samples being in the &quot;good&quot; class. But for some models, it is not known beforehand whether greater values correspond to &quot;good&quot; or &quot;bad&quot; samples. For such cases, this option allows you to reverse the scores when the initial assumption appears to be wrong.
&lt;p&gt;
Use this option with care, as a ROC AUC value less than 0.5 may simply indicate a poor model. For most model types, the class corresponding to greater scores is known.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false">
						<sci:help>TestForGood</sci:help>
						<sci:value>Dev</sci:value>
					</sci:arg>
					<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Settings controlling the viewer&apos;s behavior. Options are:
&lt;ul&gt;
&lt;li&gt;Show Plot in Browser: Launch a separate browser window displaying the plot.
&lt;li&gt;Output Reporting Element: Send a Pipeline Pilot Reporting element out the Pass port. This allows the plot to be embedded in a report.
&lt;/ul&gt;</sci:help>
						<sci:legalval>Show Plot in Browser</sci:legalval>
						<sci:legalval selected="true">Output Reporting Element</sci:legalval>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:value>ReversedScore,TitleSuffix,Acc,Accuracy,_FIRST_</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jun 09 05:10:33 2017</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>ROC Plot Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{2E590EF8-6E3A-4554-A131-8D3AD568DFDA}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -1175</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Generates a Receiver Operating Characteristic (ROC) plot and displays it in an HTML page</sci:value>
						<sci:value>A ROC plot can help you understand the tradeoff between model sensitivity (the model&apos;s ability to identify true positives) and model specificity (its ability to avoid false positives) in a learned model. To create a ROC plot, you provide a &lt;i&gt;ScoreProperty&lt;/i&gt; which is used to rank samples according to their predicted likelihood of being &quot;good&quot; or &quot;bad&quot;.  The &lt;i&gt;TestForGood&lt;/i&gt; is the expression used to distinguish actual good from bad samples.  
&lt;p&gt;
Also reported in the plot title is the ROC score -- the area under the curve of the ROC plot. The score as reported by this component is a number between 0.5 and 1.0. The closer the ROC score is to 1.0, the better the model is at distinguishing good from bad samples.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Each point on a ROC plot corresponds to a different cutoff value for the &lt;i&gt;ScoreProperty&lt;/i&gt;.  All samples above the cutoff are considered good; all those below the cutoff are considered bad.  The X value of the point on the ROC curve is the proportion of false positives for the given cutoff (i.e., the proportion of bad samples classified as good).  The Y value is the proportion of true positives (i.e., the proportion of good samples classified as good).  The complete ROC curve is generated by considering all possible values of the cutoff.
&lt;li&gt;Internally, the ROC score is first computed assuming that greater values of the score property correspond to increased likelihood of a sample being good.  In some models, greater values instead correspond to increased likelihood of being bad.  This is assumed to be the case if the first internally computed ROC score is less than 0.5 and &lt;i&gt;Allow Score Reversal&lt;/i&gt; is set to True.  If so, the ordering of the samples based on the score property is reversed, and the ROC plot is created according to this ordering.  If this reverse ordering is done, the text &quot;[ranking reversed]&quot; appears at the end of the plot title.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To compute a ROC score without displaying the ROC plot, use &lt;a href=&quot;javascript:DoLink(&apos;{766152E4-98EB-4754-9990-EDEEA7E5F779}&apos;)&quot;&gt;Generate ROC Score&lt;/a&gt;.
&lt;li&gt;Enrichment plots and enrichment scores give another measure of model quality.  See the &lt;a href=&quot;javascript:DoLink(&apos;{6F75B0E4-F5FF-4490-88CC-F53D2E3316E9}&apos;)&quot;&gt;Enrichment Plot Viewer&lt;/a&gt;.
&lt;li&gt;To display ROC plots and compare ROC scores between multiple models, use the &lt;a href=&quot;javascript:DoLink(&apos;{27910028-CF29-49E9-B23C-EF951C8B184A}&apos;)&quot;&gt;Classification Model Evaluation Viewer&lt;/a&gt;.
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>A reporting element containing the plot if the &quot;Output Reporting Element&quot; option is selected</sci:value>
						<sci:value>None</sci:value>
						<sci:value>Records passing out of any unconnected fail ports of components inside the subprotocol</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1468</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>54</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Viewers\ROC Plot Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Title</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Use Default Browser</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Include Format and Position CSS</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Oct 22 23:43:53 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0952D9DF-F95C-4D43-826F-C70450811DD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -1175</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{A28703A7-E701-4D34-9A93-1D24AC2039CC}&apos;)&quot;&gt;Page&lt;/a&gt; component to set the report&apos;s margins, borders, padding, and background formatting, or to specify HTML attributes on the report&apos;s &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>55</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Viewers\HTML Report Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.DelimitedReader.1">
				<sci:component name="Delimited Text Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:member>Source Authentication Options</sci:member>
						<sci:value>job:/devTestData.csv</sci:value>
					</sci:arg>
					<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Source Authentication Options Username</sci:member>
						<sci:member>Source Authentication Options Password</sci:member>
						<sci:member>Source Authentication Options Authentication Method</sci:member>
						<sci:member>Source Authentication Options KDC Server</sci:member>
						<sci:member>Source Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:member>ParseNDimensionalArrayStrings</sci:member>
						<sci:legalval selected="true">FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>$</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>UndefinedString</sci:member>
						<sci:member>AllLines</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CheckSyntax</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>AddEmptyProperties</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval>AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval selected="true">Replace</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 16 10:52:03 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component that this component is based upon.</sci:help>
						<sci:value>Delimited Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -1355</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
						<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1864</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>52</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{A7EB2256-9D49-4AB2-BAE3-F3FC101698D4}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="Scitegic.ShortcutComponent.1">
				<sci:component name="Shortcut Component" version="2">
					<sci:arg name="Component Name" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of the component which will process the data. You can give either a short name such as &quot;alogpmodel&quot;, or a fully-specified name such as &quot;myname/LearnedProperties/alogpmodel&quot;, or
evan a universal identifier (GUID) such as &quot;{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}&quot;.

If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.</sci:help>
						<sci:member>Use Parameters</sci:member>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="Use Parameters" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Define whether to pass on the parameters from this component to the target component or to extract the parameter names and values from the Parameter Settings value.</sci:help>
						<sci:member>Parameter Settings</sci:member>
						<sci:member>Force Parameter Settings</sci:member>
						<sci:legalval selected="true">From This Component</sci:legalval>
						<sci:legalval>From Parameter Settings</sci:legalval>
					</sci:arg>
					<sci:arg name="Parameter Settings" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;p&gt;A list of parameter settings to be applied to the target component, specified as an array. Each item in the array is one parameter setting, formatted as:&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
&amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;
&lt;/pre&gt;
Example:
&lt;pre style=&quot;color:brown&quot;&gt;
Property1=Total
Property2=NumSamples
Statistic=Mean
&lt;/pre&gt;
&lt;h5&gt;Parameter Arrays&lt;/h5&gt;
&lt;p&gt;To define an array parameter value, simply repeat the parameter name for each array item.
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
Catalog Number=6753
City List=Rome
City List=Athens
City List=Lisbon
&lt;/pre&gt;
&lt;h5&gt;Parameter Metadata&lt;/h5&gt;
&lt;p&gt;
You can also define metadata values for a parameter on the component. To do this, use a ^^ indicator to identify the parameter/metadata name pair. In the following example, the Measurement parameter has two metadata items, named Unit and Precision:
&lt;pre style=&quot;color:brown&quot;&gt;
Measurement=1000
Measurement^^Unit=Float
Measurement^^Precision=6
&lt;/pre&gt;
&lt;h5&gt;Parameter Group Series&lt;/h5&gt;
&lt;p&gt;
In general, a parameter value defined in the &lt;i&gt;Parameter Settings&lt;/i&gt; list should match a named parameter that exists on the target component for the shortcut. If there is no match, the parameter value is ignored. The only exceptions are when &lt;i&gt;Force Parameter Settings&lt;/i&gt; is True, or for ordered series of parameter groups. In the latter case, a new parameter can be created using a parameter in the base parameter group (number 1) as a template. In this example, the target component includes the following parameter group:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 1
List 1 Language
List 1 Format
&lt;/pre&gt;
The parameter list for the shortcut component might be:
&lt;pre style=&quot;color:brown&quot;&gt;
List 1 Language=English
List 1 Format=Left
List 2=
List 2 Language=Spanish
List 2 Format=Flow
List 3=
List 3 Language=French
List 3 Format=Center
&lt;/pre&gt;
&lt;p&gt;The first 2 items above simply define values for existing parameters in the base parameter group. The remaining items define two new parameter groups (group2 and group 3) with their values. 
&lt;/p&gt;&lt;p&gt;
You could also define metadata on the new parameters:
&lt;/p&gt;
&lt;pre style=&quot;color:brown&quot;&gt;
List 2=
List 2^^Filename=esp.txt
List 2 Language=Spanish
List 2 Format=Flow
List 2 Format^^Style=Bold
&lt;/pre&gt;</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Force Parameter Settings" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If True, then all parameter values in the &lt;i&gt;Parameter Settings&lt;/i&gt; array are passed to the target component even if some parameters in the array do not already exist on the component.</sci:help>
						<sci:enabledscript>SetDisabledDetails(
	       &apos;To enable &apos;.ParameterName().&apos;, set Use Parameters to &quot;From Parameter Settings&quot;&apos;);
	Parameter(&apos;Use Parameters&apos;) eq &apos;From Parameter Settings&apos;;</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Protect Globals" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Controls whether to protect global values from change by the referenced component. Options are:
&lt;ul&gt;
&lt;li&gt;Don&apos;t Protect: allows the referenced component to access and change any globals. 
&lt;li&gt;Use Copy: allows the referenced component to access a copy made of the globals 
at initialization time. It may change these globals or create new ones, but these 
changes will not be transferred outside the component itself. 
&lt;li&gt;Use Copy of Read-Only: gives the referenced component a copy of read-only globals, 
but does not pass in writable globals. (Writable globals are more likely to be temporary 
in scope, and passing in information using them is not recommended. If you need the value of 
these, you may add parameters to the Shortcut Component to pass them in.)
You may create new globals, but they will remain local to the component; further, trying to assign an existing global 
will cause an error. These strict semantics help avoid unintentional problems caused by altering system-wide globals or using
temporary state-dependent globals.
&lt;/ul&gt; 

&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;WARNING:  If the reference component specified by &quot;Component Name&quot; is a subprotocol and the &quot;Protect Globals&quot; parameter is set to any value other than &quot;Don&apos;t Protect&quot;, the protocol will crash resulting in a &quot;No Server Process&quot; error.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>Copy Hierarchical Data</sci:member>
						<sci:legalval selected="true">Don&apos;t Protect</sci:legalval>
						<sci:legalval>Use Copy</sci:legalval>
						<sci:legalval>Use Copy of Read-Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Copy Hierarchical Data" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;If set to true, any copy of the global data passed to the component will also contain any hierarchical properties. Otherwise, only properties defined on the root node will be passed.&lt;/p&gt;

&lt;p&gt;Has no effect unless the &apos;Use Copy&apos; or &apos;Use Read-Only Copy&apos; values of the &apos;Protect Globals&apos; parameter are selected.&lt;/p&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Link to Any Ancestor" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>If the component you are referring to has a link to a parent property, that property is expected to be on the parent protocol of the Shortcut Component. 

Sadly, sometimes additional layers of subprotocols might be added. In this case, setting Link to Any Ancestor to &quot;True&quot; causes the shortcut to walk all ancestor protocols looking for resolution of the links. </sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Use New Parameter Copy" type="BoolType" required="false" visibility="nevershow" multi="false" legalvalsenforced="false">
						<sci:help>Whether to use the newer version of parameter copying</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Apr 17 12:56:59 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Shortcut Component</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{ABCDDCBA-CC5A-4517-8D55-6BB4D53DE12E}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint2" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Point</sci:help>
						<sci:value>370 -50</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -1355</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Run the component specified by name.</sci:value>
						<sci:value>&lt;p&gt;
This component can act as a shortcut to any other component in the system.  This means that it is replaced at run time with a copy of the target component it refers to. By default, the target component is run with parameters copied from this component. Alternatively, a list of parameter settings can be specified in a single array parameter.
&lt;/p&gt;
&lt;p&gt;
(The &quot;Shortcut Component&quot; is so-named because its operation is quite similar to that of a shortcut of a subprotocol, which gets the newest copy at run-time and sets the parameters from the values on the shortcut.)
&lt;/p&gt;
&lt;p&gt;
The component can be useful when you wish to write a protocol that uses a component that may not yet be in the system, such as a learned model. Another use is component substitution at run time, based upon protocol parameters or earlier results in the protocol.
&lt;/p&gt;
&lt;p&gt;
You can adjust the component port configuration to match those of the target component ports.
&lt;/p&gt;
&lt;p&gt;
If a name is given, the search is conducted starting on the user&apos;s tab, then the Protocols tab, then the Components tab.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;WARNING:  If the reference component specified by &quot;Component Name&quot; is a subprotocol and the &quot;Protect Globals&quot; parameter is set to any value other than &quot;Don&apos;t Protect&quot;, the protocol will crash resulting in a &quot;No Server Process&quot; error.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon</sci:help>
						<sci:value>Shortcut Component</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1749</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>64</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{668B0ADB-AC9E-433F-8A9E-C250F7633011}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Utilities\Subprotocol Utilities\Shortcut Component</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Good versus Bad Distribution Viewer" version="2">
					<sci:arg name="PropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of property to use in the histograms</sci:help>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="true" visibility="visible" multi="false">
						<sci:help>PilotScript expression used to split the data into &quot;good&quot; and &quot;bad&quot; classes.  If &lt;i&gt;TestForGood&lt;/i&gt; evaluates to True, a data record is assigned to the &quot;good&quot; class. If &lt;i&gt;TestForGood&lt;/i&gt; evaluates to False, it is assigned to the &quot;bad&quot; class.</sci:help>
						<sci:value>Dev</sci:value>
					</sci:arg>
					<sci:arg name="BinSize" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Width of bins to be used to generate the frequency distribution.  If blank, the bin size is determined from the data.  Bins are centered at exact multiples of &lt;i&gt;BinSize&lt;/i&gt;. Each bin includes all property values from 0.5*&lt;i&gt;BinSize&lt;/i&gt; to the left of the bin center (inclusive) to 0.5*&lt;i&gt;BinSize&lt;/i&gt; to the right of the center (exclusive).</sci:help>
					</sci:arg>
					<sci:arg name="Minimum" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Minimum bin value to show in the plot.  If blank, the minimum will be determined by the range of the data.</sci:help>
					</sci:arg>
					<sci:arg name="Maximum" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>Maximum bin value to show in the plot.  If blank, the maximum will be determined by the range of the data.</sci:help>
					</sci:arg>
					<sci:arg name="Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Settings controlling the viewer&apos;s behavior. Options are:
&lt;ul&gt;
&lt;li&gt;Show Plot in Browser: Launch a separate browser window displaying the plot.
&lt;li&gt;Output Reporting Element: Send a Pipeline Pilot Reporting element out the Pass port. This allows the plot to be embedded in a report.
&lt;/ul&gt;</sci:help>
						<sci:legalval>Show Plot in Browser</sci:legalval>
						<sci:legalval selected="true">Output Reporting Element</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Set of temporary files the network converts to true temporary filenames</sci:help>
						<sci:value>tempfile,tempfile2,cachename</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 22 10:22:13 2011</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{17ED219D-1C6B-4EE3-B238-47E137C81FED}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>EmptyProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Good versus Bad Distribution Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -1535</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays separate frequency distributions for a specified property according to a test for separating the samples into two classes</sci:value>
						<sci:value>The plots are shown as percent of samples versus the property value.  A separate plot is shown for records that pass the &lt;i&gt;TestForGood&lt;/i&gt; (&quot;good&quot; records) and those that fail the test (&quot;bad&quot; records).  In order to generate the frequency distributions, records are assigned to bins according to the value of the property specified by &lt;i&gt;PropertyName&lt;/i&gt;.  The X value for a point on the plot is the location of a bin center.  The Y value is the percent of good or bad samples falling into that bin.</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>A reporting element containing the plot if the &quot;Output Reporting Element&quot; option is selected
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Records with missing or non-numeric values for the &lt;i&gt;PropertyName&lt;/i&gt; property</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>8.9.0.2</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>75</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Viewers\Good versus Bad Distribution Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.EvaluateExpression.1">
				<sci:component name="Custom Manipulator (PilotScript)" version="2">
					<sci:arg name="Expression" type="ExpressionType" required="true" visibility="visible" multi="false" expanded="true" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Expression (or list of expressions separated by semi-colons) to evaluate.</sci:help>
						<sci:member>Initial Expression</sci:member>
						<sci:member>Final Expression</sci:member>
						<sci:member>Keep Calculated Properties</sci:member>
						<sci:value>predictDev := learnDev &gt; -0.511;</sci:value>
					</sci:arg>
					<sci:arg name="Initial Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only the first time data passes into the component.
&lt;p/&gt; 
Since there is no data available at initialization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Final Expression" type="ExpressionType" required="false" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>&lt;p&gt;
This expression is executed only at finalization (after the last data passes out of the component).
&lt;p/&gt; 
Since there is no data available at finalization time, only expressions referencing local or global properties are allowed.
&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Keep Calculated Properties" type="BoolType" required="true" visibility="visible" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Adds any properties calculated in this component to a data record&apos;s property list.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Do Screen" type="BoolType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>When TRUE, controls which exit port is used for
each data record by evaluating the final expression
(or only one) listed in the &quot;Expression&quot; parameter.
   -Pass (green) port when expression true
   -Fail (red) port when expression false</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ExpressionVersion" type="LongType" required="false" visibility="nevershow" multi="false" implbase="{0995D675-7EE2-432C-95DF-E91C14052B22}">
						<sci:help>Version of expression parser to use.</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jan 21 09:55:43 2008</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Expression&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>#displayName := trim(Parameter(&apos;Expression&apos;, 2));
if(strlength(#displayName) &gt; 0) then	
	/* Find the first line break */
	#nl := FindSubstring(#displayName, &quot;\r&quot;);
	if #nl &lt;= 0 then
		#nl := FindSubstring(#displayName, &quot;\n&quot;);
	end if;

	/* Keep the first line only */
	if (#nl &gt; 0) then
		StrErase(#displayName, #nl);
	end if;
	
	#displayName;
else
	&quot;&quot;;
end if;</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>EXPRESSIONNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0995D675-7EE2-432C-95DF-E91C14052B22}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -1895</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Applies a PilotScript expression to each data record
</sci:value>
						<sci:value>&lt;p&gt;PilotScript is the native scripting language in Pipeline Pilot.  It is based on PL/SQL and allows you to query or alter the properties on data records.  For example, the expression:

&lt;blockquote&gt;
&lt;code&gt;A := 10;&lt;/code&gt;
&lt;/blockquote&gt;
creates a property named &quot;A&quot; and sets the value to &quot;10&quot;.&lt;/p&gt;

&lt;p&gt;For each incoming data record the PilotScript statements in &lt;i&gt;Expression&lt;/i&gt; are evaluated.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;To initialize global variables such as counters, use &lt;i&gt;Initial Expression&lt;/i&gt;.&lt;/li&gt; 
&lt;li&gt;To clean up global variables or calculate final results use &lt;i&gt;Final Expression&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;Parameters on Custom Manipulators do not become global variables that can be accessed via &lt;i&gt;@ParameterName&lt;/i&gt; syntax.  They must be accessed by using the &lt;i&gt;Parameter(&apos;ParameterName&apos;)&lt;/i&gt; function or by using token substitution via &lt;i&gt;$(ParameterName)&lt;/i&gt; syntax.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For more information on PilotScript, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/pscript/pscript_overview.htm&apos;)&quot;&gt;PilotScript Overview&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;To use PilotScript to filter data records use &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter (PilotScript)&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>7.0.0.35</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>86</sci:value>
					</sci:arg>
					<sci:arg name="ComponentCheckpoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Checkpoint Identifier</sci:help>
						<sci:value>{9AC80A85-279D-41B4-A21B-7D51A37AF237}</sci:value>
						<sci:value>3</sci:value>
						<sci:value>0</sci:value>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Property Manipulators\Custom Manipulator (PilotScript)</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Confusion Matrix" version="2">
					<sci:arg name="Actual Property" type="PropertyNameType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Property containing actual category (class). If a value is defined for both &lt;i&gt;Actual Property&lt;/i&gt; and &lt;i&gt;TestForGood&lt;/i&gt;, &lt;i&gt;Actual Property&lt;/i&gt; takes precedence.</sci:help>
						<sci:member>Preferred Value</sci:member>
						<sci:member>TestForGood</sci:member>
						<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;TestForGood&apos;) ne &apos;&apos;</sci:validscript>
						<sci:value>Dev</sci:value>
					</sci:arg>
					<sci:arg name="Preferred Value" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies the name of the &quot;positive&quot; class for the purpose of calculating true positive, false positive, and so on</sci:help>
						<sci:enabledscript>Parameter(&apos;Actual Property&apos;) ne &apos;&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>A PilotScript expression applied to each data record to determine if it is part of the &quot;good&quot; subset. For a Bayesian model, use this in place of a value for &lt;i&gt;Actual Property&lt;/i&gt;. If a value is defined for both &lt;i&gt;Actual Property&lt;/i&gt; and &lt;i&gt;TestForGood&lt;/i&gt;, &lt;i&gt;Actual Property&lt;/i&gt; takes precedence.</sci:help>
						<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;Actual Property&apos;) ne &apos;&apos;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Actual Property&apos;) eq &apos;&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Prediction Property" type="PropertyNameType" required="true" visibility="visible" multi="false">
						<sci:help>Property containing predicted category (class)</sci:help>
						<sci:value>predictDev</sci:value>
					</sci:arg>
					<sci:arg name="Class Order" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list specifying the order in which you wish the classes to appear in the confusion matrix. If left blank, alphabetical order is used.</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
						<sci:member>RunToCompletion Categorize Using</sci:member>
						<sci:legalval selected="true">False</sci:legalval>
						<sci:legalval>True - For Each Data Record</sci:legalval>
						<sci:legalval>True - For Each Category</sci:legalval>
					</sci:arg>
					<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
						<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
#rtcForEachCategory := (Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
elsif (#rtcForEachCategory) then
	SetDisabledDetails(&quot;This parameter is not applicable when &apos;RunToCompletion&apos; is set to &apos;True - For Each Category&apos;&quot;);
end if;
#parallel and not #rtcForEachCategory;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Use this to specify grid engine specific command line parameters to the job submission command. Leave blank to use defaults.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
						<sci:value>temp</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;/p&gt;&lt;p&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>ConfusionHash,AllClassHash</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Confusion Matrix</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>790</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{A1F1D4A0-91E7-463D-AEE4-F4C6F744F592}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>990 -1895</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Calculates a confusion matrix</sci:value>
						<sci:value>&lt;i&gt;Actual Property&lt;/i&gt; specifies the name of the property containing the actual class (category) for each data record, or use &lt;i&gt;TestForGood&lt;/i&gt; to identify &quot;good&quot; data records for a Bayesian model. &lt;i&gt;Prediction Property&lt;/i&gt; specifies the name of the property containing the predicted class.
&lt;p&gt;
If the input data are binary or if you specify a &lt;i&gt;Preferred Value&lt;/i&gt;, then additional statistics such as true positives (TP), false positives (FP), sensitivity, specificity, and so on are output. A small subset of these statistics are output for the multi-class case (those that are applicable and can be calculated).
&lt;br&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;For most classification model types, the default &lt;i&gt;modelname&lt;/i&gt; output (where &lt;i&gt;modelname&lt;/i&gt; is the name of the model) contains the predicted class. But for a Bayesian model created by &lt;a href=&quot;javascript:DoLink(&apos;{22699AB0-7583-4062-976F-46E680B2CBFF}&apos;)&quot;&gt;Learn Good From Bad&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{0855FA42-AADB-47AA-B821-592699C86396}&apos;)&quot;&gt;Learn Good Molecules&lt;/a&gt;, the property containing the prediction (True for &quot;good&quot; or False for &quot;bad&quot;) is named &lt;i&gt;modelname&lt;/i&gt;#Prediction. The &lt;i&gt;modelname&lt;/i&gt; output in this case contains the Bayesian score.
&lt;/ul&gt;</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>Confusion Matrix</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Data records missing one or both of the required properties</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1140</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Mar 22 08:06:36 2016</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>83</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Basic Math and Statistics\Confusion Matrix</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Table Viewer" version="2">
					<sci:arg name="Maximum Rows" type="LongType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies the maximum number of table rows in the HTML page</sci:help>
						<sci:value>2000</sci:value>
					</sci:arg>
					<sci:arg name="Rows Per Page" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The number of rows displayed on each page</sci:help>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>The optional title of the HTML document</sci:help>
					</sci:arg>
					<sci:arg name="Freeze Table Header" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;When set to True, this table&apos;s header and title will remain visible when the table is scrolled vertically.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;This feature only applies to HTML reports.&lt;/li&gt;
	&lt;li&gt;The fixed header behavior depends on what container (e.g., plain browser window, Tile component, Dynamic Content Container) that the Table is piped into.&lt;/li&gt; 
	&lt;li&gt;To create a table of fixed pixel height, set this parameter to True and pipe this table into a Dynamic Content Container of fixed (i.e., non-percentage) height.&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the HTML table. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
						<sci:value>temphtml</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>HTML Filename</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{7B3502D7-FA57-4EB5-838B-FE6AB0BF0E69}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Cant Replace With Copy</sci:legalval>
						<sci:legalval>Cant Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Oct 23 17:05:34 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Table Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>1290 -1895</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolCommentSize" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>ProtocolCommentSize</sci:help>
						<sci:value>1100 500</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{F6A20C96-BC1C-48f3-82E9-4D8F023F82EE}</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays data records as HTML in a web browser</sci:value>
						<sci:value>&lt;p&gt;Generates and displays an HTML table page of data records, with one record per row. Each property becomes a column in the table and each value a cell.
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Molecules will be displayed if present.&lt;/li&gt;
&lt;li&gt;For hierarchical data records, only top level properties are displayed.&lt;/li&gt;
&lt;li&gt;Any grouped data is displayed in nested tables.&lt;/li&gt;
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If you prefer not to view the grouped data, use &lt;a href=&quot;javascript:DoLink(&apos;{ACCDEEEF-FEED-4B27-B263-BA531EABFC9C}&apos;)&quot;&gt;Delete Children&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For more control over the display of molecules, use &lt;a href=&quot;javascript:DoLink(&apos;{485D30CD-737C-4AD3-89C9-F81CB20E47AE}&apos;)&quot;&gt;HTML Molecular Table Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>87</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\Viewers\HTML Table Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.DelimitedReader.1">
				<sci:component name="Delimited Text Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:member>Source Authentication Options</sci:member>
						<sci:value>job:/devTestData.csv</sci:value>
					</sci:arg>
					<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Source Authentication Options Username</sci:member>
						<sci:member>Source Authentication Options Password</sci:member>
						<sci:member>Source Authentication Options Authentication Method</sci:member>
						<sci:member>Source Authentication Options KDC Server</sci:member>
						<sci:member>Source Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:member>ParseNDimensionalArrayStrings</sci:member>
						<sci:legalval selected="true">FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>$</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>UndefinedString</sci:member>
						<sci:member>AllLines</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CheckSyntax</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>AddEmptyProperties</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval>AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval selected="true">Replace</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 16 10:52:03 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component that this component is based upon.</sci:help>
						<sci:value>Delimited Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -2255</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
						<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1864</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>79</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Classification Model Evaluation Viewer" version="2">
					<sci:arg name="Model Name" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Name of saved model component to evaluate.
&lt;p&gt;
To compare multiple models in different components, enter a comma-separated list of model component names for &lt;i&gt;Model Name&lt;/i&gt;.</sci:help>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="Y Property" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Name of dependent Y property in input test data set</sci:help>
						<sci:member>Add Missing Y Value</sci:member>
						<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;TestForGood&apos;) ne &apos;&apos;</sci:validscript>
						<sci:value>Dev</sci:value>
					</sci:arg>
					<sci:arg name="Add Missing Y Value" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>If set to True and the &lt;i&gt;Y Property&lt;/i&gt; is missing from a data record, define the property to have the value given by &lt;i&gt;Missing Y Value&lt;/i&gt;.

If set to False, send data records with a missing &lt;i&gt;Y Property&lt;/i&gt; out the Fail port.

This option does not apply if you specify a &lt;i&gt;TestForGood&lt;/i&gt; rather than a &lt;i&gt;Y Property&lt;/i&gt; to define the class to which a data record belongs.</sci:help>
						<sci:member>Missing Y Value</sci:member>
						<sci:enabledscript>Parameter(&apos;Y Property&apos;) ne &apos;&apos;</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Missing Y Value" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Property value to use for the &lt;i&gt;Y Property&lt;/i&gt; when the property is undefined on the input data record.</sci:help>
						<sci:value>None</sci:value>
					</sci:arg>
					<sci:arg name="TestForGood" type="ExpressionType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>A PilotScript expression applied to each data record to determine if it is part of the &quot;good&quot; subset</sci:help>
						<sci:validscript>Parameter() ne &apos;&apos; or Parameter(&apos;Y Property&apos;) ne &apos;&apos;</sci:validscript>
						<sci:enabledscript>Parameter(&apos;Y Property&apos;) eq &apos;&apos;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Allow Score Reversal" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Allow Score Reversal</sci:value>
								<sci:value>Allow Score Reversal</sci:value>
								<sci:value>Allow Score Reversal</sci:value>
								<sci:value>Allow Score Reversal</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>Specifies whether to change the sign of all scores and redo the ROC computations when the initial ROC AUC value is less than 0.5.
&lt;p&gt;
The ROC analysis initially assumes that greater values of &lt;i&gt;ScoreProperty&lt;/i&gt; correspond to increased likelihood of samples being in the &quot;good&quot; class. But for some models, it is not known beforehand whether greater values correspond to &quot;good&quot; or &quot;bad&quot; samples. For such cases, this option allows you to reverse the scores when the initial assumption appears to be wrong.
&lt;p&gt;
Use this option with care, as a ROC AUC value less than 0.5 may simply indicate a poor model. For most model types, the class corresponding to greater scores is known.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Display Options" type="StringType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>Settings that control the display of the report. Options are:
&lt;ul&gt;
&lt;li&gt;Show Tables: Display tables containing the ROC score for each model.
&lt;li&gt;Show Plots: Display ROC plots for each model. A separate chart is shown for each model, but may include multiple plots for (i) multiple classes or (ii) in-domain vs. out-of-domain vs. all data.
&lt;li&gt;Show All-Model Charts: Display charts containing ROC plots for all models in a single chart. For binary models, one chart is displayed. For multi-class models, a separate chart is displayed for each class corresponding to the model&apos;s score prediction for that class. This option can be used with &quot;Show Plots&quot; or as an alternative.
&lt;li&gt;Show Class Scores: For multi-class (non-binary) models, a separate ROC plot and score can be defined for each class represented in the input data. The overall score is an average of these class ROC scores. This option specifies that the class scores be shown in the tables and output in addition to the average score. (If one or more class scores is undefined due to the class not being represented in the data, then the average score is shown with an asterisk (*), and the average value is computed only over those class scores that are defined.)
&lt;li&gt;One Plot per Graph: By default, all ROC plots for each model are shown in a single graph&amp;mdash;including separate plots for in-domain and out-of-domain data, and for each class for a multi-class model. With the &quot;One Plot per Graph&quot; option, each distinct ROC curve appears in a separate graph. This option does not affect the &quot;Show All-Model Charts&quot; case; if the latter option is selected, charts with multiple models are always displayed.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Show Tables</sci:legalval>
						<sci:legalval selected="true">Show Plots</sci:legalval>
						<sci:legalval>Show All-Model Charts</sci:legalval>
						<sci:legalval selected="true">Show Class Scores</sci:legalval>
						<sci:legalval>One Plot per Graph</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Settings controlling the viewer&apos;s output. Options are:
&lt;ul&gt;
&lt;li&gt;Output Validation Statistics: For each model, output a data record containing the model&apos;s validation statistics as properties.
&lt;li&gt;Output Reporting Element: Output a Pipeline Pilot Reporting element containing the validation report. This allows the validation report to be embedded within a larger report.
&lt;li&gt;Show Report in Browser: Display the validation report in its own browser window.
&lt;/ul&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;If no &lt;i&gt;Display Options&lt;/i&gt; are selected, then the only meaningful option is &quot;Output Validation Statistics&quot;. The other two options will have no effect.
&lt;li&gt;If you choose to output both the validation statistics and a reporting element, you will need to use a &lt;a href=&quot;javascript:DoLink(&apos;{DD58ECD1-516F-48FE-A5DB-8328AED680F2}&apos;)&quot;&gt;Custom Filter&lt;/a&gt; with an expression such as &quot;Model is defined&quot; to separate the data records containing the validation statistics from the record containing the reporting element.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Output Validation Statistics</sci:legalval>
						<sci:legalval>Output Reporting Element</sci:legalval>
						<sci:legalval selected="true">Show Report in Browser</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;/p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;p/&gt;</sci:help>
						<sci:value>cache,chartcache,classchartclass</sci:value>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="TextType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;Any global property not declared in this way is created on the top level global property list and is accessible from all protocols, but may collide with another property of the same name.&lt;p/&gt;Scoping global properties to the subprotocol where they are used is highly recommended.&lt;/p&gt;</sci:help>
						<sci:value>AllDefinedProperties,NumRecordsIn,NumRecordsOut,NumRecordsAll,GotApplicability,NoRecordsWithYSeen,UniqueYValues,BinaryData,GlobalModelList,GlobalModelClasses,GlobalScoreProperties,Warnings,ApplicabilityFound,OutputOptions,Outputs,InScores,OutScores,AllScores,InScoresAll,OutScoresAll,AllScoresAll,ChartOutput,ClassCountAll,ClassCountIn,ClassCountOut,ScoreToUse,YValueForScore,Acc,Accuracy,ReversedScore,numericClass,InMinBERsAll,OutMinBERsAll,AllMinBERsAll,InMinBERcutoffsAll,OutMinBERcutoffsAll,AllMinBERcutoffsAll,gotAllModelPlot</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>When RunToCompletion is set to True, the subprotocol is re-initialized and executed in its entirety for each record it processes.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;
When set to True, this set of options allow the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running local or remote.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option judiciously, since it will not increase throughput in all circumstances. In general, it will yield improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
						<sci:member>Parallel Processing Options Batch Size</sci:member>
						<sci:member>Parallel Processing Options Server</sci:member>
						<sci:member>Parallel Processing Options Preserve Order</sci:member>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="true">
						<sci:help>The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:value>25</sci:value>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="true" expanded="true" legalvalsenforced="false" uimpl="true">
						<sci:help>&lt;p&gt;
Comma separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be helpful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
						<sci:member>Parallel Processing Options Server Processes</sci:member>
						<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
						<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Comma separated list of maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.</sci:help>
						<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Run subprotocol on grid engine if available.</sci:help>
						<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
						<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
						<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:value>ComponentReturnsFail</sci:value>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Classification Model Evaluation Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{27910028-CF29-49E9-B23C-EF951C8B184A}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>390 -2255</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Evaluates predictions of one or more classification models against a test set and displays the results</sci:value>
						<sci:value>&lt;i&gt;Model Name&lt;/i&gt; may contain the name of a learned model, the name of a property defined on the input, a calculable property, or a comma-separated list of these in any combination. &lt;i&gt;Y Property&lt;/i&gt; specifies the name of the property containing the actual class to which each data record belongs. Alternatively, if there are only two classes, you may specify a &lt;i&gt;TestForGood&lt;/i&gt; PilotScript expression to distinguish members of the &quot;Good&quot; class from members of the &quot;Bad&quot; class. (&quot;Good&quot; and &quot;Bad&quot; are arbitrary labels for the two classes.)
&lt;p&gt;
The displayed report contains the ROC score (ROC AUC) and a ROC plot for each model along with the best (minimum) Balanced Error Rate (BER) and the model score cutoff value corresponding to the best BER (&quot;Best Cutoff&quot;).
&lt;p&gt;
If the specified model supports an &quot;_Applicability&quot; output property, then separate results are reported for samples within and outside the model&apos;s domain of applicability.
&lt;p&gt;
In addition to displaying a report in a browser, you can specify that the model statististics be sent out the Pass port. (See &lt;i&gt;Output Options&lt;/i&gt;.)
&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The specified models must produce numerical output representing the relative likelihood of a sample being in each class. Models that produce only the predicted class membership as output cannot be used.

&lt;li&gt;If you wish to use the model scores in your protocol without displaying a report, set &lt;i&gt;Output Options&lt;/i&gt; to &quot;Output Validation Statistics&quot; only.

&lt;li&gt;For data and models containing more than two classes, a separate ROC plot is shown for each class. (This is a &quot;1-vs-rest&quot; as opposed to &quot;1-vs-1&quot; type of ROC Plot. See below for references.) Also, a separate BER and Cutoff are reported for each class. (The cutoff value applies to the score for that class and the BER to a binary 1-vs-rest classification.) The reported ROC score for the model is an average of the class ROC scores over all of these plots. If you select &quot;Show Class Scores&quot; as one of the &lt;i&gt;Display Options&lt;/i&gt;, the individual class scores are shown in the output table in addition to the overall score. The overall score is displayed with an asterisk (*) if any of the class ROC scores could not be computed due to the class being absent from the data set or subset.

&lt;li&gt;If the input data contain more than two classes, and you are using properties on the data stream rather than a learned model, then the property names defining the class probabilities or likelihoods must be of the form &lt;i&gt;modelname_class1name&lt;/i&gt;, &lt;i&gt;modelname_class2name&lt;/i&gt;, etc., where &lt;i&gt;class1name&lt;/i&gt;, &lt;i&gt;class2name&lt;/i&gt;, etc. are the names of the classes.

&lt;li&gt;If you specify multiple models for &lt;i&gt;Model Name&lt;/i&gt; then a union of applicability domain warnings across all models is used to determine whether a sample is in-domain or out-of-domain. Thus, a sample must be within the applicability domain of all the models in order to be considered &quot;in-domain&quot; for the model score calculations and plots.
&lt;/ul&gt;

&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{677F9529-03FC-4A18-8619-03A0F657F3B1}&apos;)&quot;&gt;Regression Model Evaluation Viewer&lt;/a&gt; to evaluate regression models (i.e., models that predict a continuous Y property).
&lt;li&gt;For an excellent overview of the ROC plot technique as applied to classification models see: T. Fawcett, &quot;ROC Graphs: Notes and Practical Considerations for Data Mining Researchers,&quot; Tech Report HPL-2003-4, HP Laboratories (2003). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.hpl.hp.com/techreports/2003/HPL-2003-4.pdf&apos;)&quot;&gt;here&lt;/a&gt;.
&lt;li&gt;For a description of the &quot;1-vs-1&quot; method of computing ROC scores for multi-class problems see: D.J. Hand and R.J. Till, &quot;A Simple Generalization of the Area Under the ROC Curve for Multiple Class Classification Problems,&quot; &lt;i&gt;Machine Learning&lt;/i&gt;, &lt;b&gt;45&lt;/b&gt;, 171 (2001). Available online &lt;a href=&quot;javascript:DoLink(&apos;http://www.springerlink.com/content/nn141j42838n7u21/fulltext.pdf&apos;)&quot;&gt;here&lt;/a&gt;. The &quot;1-vs-rest&quot; method differs from the &quot;1-vs-1&quot; approach in that it uses the model prediction for, say, class 1 to distinguish class 1 samples from all other samples, while the &quot;1-vs-1&quot; method uses the model predictions for class 1 and class 2 to distinguish class 1 samples only from class 2 samples. The process is repeated for all classes or pairs of classes, respectively, and the results averaged to produce an overall ROC score.
&lt;li&gt;If you wish to obtain an overall multi-class balanced error rate value based on a model&apos;s default cutoffs, use &lt;a href=&quot;javascript:DoLink(&apos;{A1F1D4A0-91E7-463D-AEE4-F4C6F744F592}&apos;)&quot;&gt;Confusion Matrix&lt;/a&gt;. You can use the same component to get a BER and many other statistics for a binary model as well.
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>Test data to use for evaluating the quality of the models&apos; predictions</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>For each model specified by &lt;i&gt;Model Name&lt;/i&gt;, one data record containing the ROC scores for that model (&quot;Validation Statistics&quot; option) or a Reporting element containing the validation report (&quot;Reporting Element&quot; option)</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>If &lt;i&gt;Add Missing Y Value&lt;/i&gt; is False, data records for which the Y Property is undefined, as well as data records for which a given model prediction could not be calculated (e.g., due to missing properties)</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1872</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval>Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Fri Jul 20 06:40:35 2018</sci:value>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Processing Order</sci:help>
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>80</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Viewers\Classification Model Evaluation Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="Model Validation Results Viewer" version="2">
					<sci:arg name="LearnedPropertyName" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The name of the model in the learned properties folder</sci:help>
						<sci:value>learnDev</sci:value>
					</sci:arg>
					<sci:arg name="Output Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>Settings controlling the viewer&apos;s output. Options are:
&lt;ul&gt;
&lt;li&gt;Output Reporting Element: Output a Pipeline Pilot Reporting element containing the report. This allows the report to be embedded within a larger one.
&lt;li&gt;Show Report in Browser: Display the report in its own browser window.
&lt;/ul&gt;
</sci:help>
						<sci:legalval>Output Reporting Element</sci:legalval>
						<sci:legalval selected="true">Show Report in Browser</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Temporary files converted by the network to true temporary filenames</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to create on the property list for this protocol. Other properties are created on the global property list and are accessible from all protocols.</sci:help>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network runs, processes once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/modeling</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Tue Sep 08 08:42:41 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Model Validation Results Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>VIEWERNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{AA7C0D64-DC9F-4887-9971-DC37612DE0C1}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -2615</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Show the validation results for a learned model as an HTML page</sci:value>
						<sci:value>Show the validation results for a learned model as an HTML page. These are the same results as those provided in the help text within the learned model component</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>9.6.0.1021</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
					</sci:arg>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>78</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Analysis and Statistics\Data Modeling\Viewers\Model Validation Results Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="0" to="40" type="true"/>
			<sci:connectid from="40" to="45" type="true"/>
			<sci:connectid from="45" to="44" type="true"/>
			<sci:connectid from="44" to="88" type="true"/>
			<sci:connectid from="88" to="58" type="true"/>
			<sci:connectid from="58" to="26" type="true"/>
			<sci:connectid from="26" to="20" type="true"/>
			<sci:connectid from="26" to="50" type="false"/>
			<sci:connectid from="38" to="43" type="true"/>
			<sci:connectid from="43" to="65" type="true"/>
			<sci:connectid from="65" to="40" type="true"/>
			<sci:connectid from="53" to="55" type="true"/>
			<sci:connectid from="54" to="55" type="true"/>
			<sci:connectid from="52" to="64" type="true"/>
			<sci:connectid from="64" to="53" type="true"/>
			<sci:connectid from="64" to="54" type="true"/>
			<sci:connectid from="64" to="75" type="true"/>
			<sci:connectid from="64" to="86" type="true"/>
			<sci:connectid from="75" to="55" type="true"/>
			<sci:connectid from="86" to="83" type="true"/>
			<sci:connectid from="83" to="87" type="true"/>
			<sci:connectid from="79" to="80" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
