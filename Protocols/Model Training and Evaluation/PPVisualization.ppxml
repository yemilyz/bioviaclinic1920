<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="PPVisualization" version="2">
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties, each of which will automatically hold the name of a file in the job&apos;s temporary folder, whose name is guaranteed to be unique.&lt;/p&gt;

&lt;p&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold just the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareGlobal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this protocol. Such properties can be accessed within the scope of this protocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;It is best practice to declare all global properties before use. Indeed, this practice is enforced in some contexts.&lt;/p&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;b&gt;When a global property needs to be scoped to the whole protocol:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the new global property in the &lt;i&gt;DeclareGlobal&lt;/i&gt; parameter at the protocol level.&lt;/dd&gt;
&lt;br/&gt;
&lt;dt&gt;&lt;b&gt;To limit a global property to a subprotocol scope:&lt;/b&gt;&lt;/dt&gt;
&lt;dd&gt;List the property in the subprotocol&apos;s &lt;i&gt;DeclareLocal&lt;/i&gt; parameter.&lt;/dd&gt;

&lt;p&gt;This example declares 2 global properties:&lt;/p&gt;
&lt;pre&gt;
    g_tokenHash,g_assayIdentifier
&lt;/pre&gt;

&lt;p&gt;
To initialize the declared global value with a scalar value, use the syntax:
&lt;/p&gt;

&lt;p&gt;
&lt;i&gt;property-name&lt;/i&gt; := &lt;i&gt;value&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
You can surround text string values with quotes to aid clarity. Values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; are handled as boolean values.
&lt;/p&gt;
&lt;p&gt;This example declares 3 global properties, and sets initial values on two of them:&lt;/p&gt;
&lt;pre&gt;
    g_counter := 0, g_location, g_geography:=&quot;APAC&quot;
&lt;/pre&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Form" type="ProtocolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;The path to a protocol that will render an HTML user interface for this protocol.  This optional parameter is used by Web Port to provide a custom user interface for a protocol.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="true">
				<sci:member>__PoolID</sci:member>
				<sci:member>Http Cookie Handling</sci:member>
				<sci:member>__NotificationProtocol</sci:member>
			</sci:arg>
			<sci:arg name="__PoolID" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; is a case insensitive string that can optionally be set to optimize the speed of execution for quick running protocols.  Multiple protocols with the same value for &lt;i&gt;__PoolID&lt;/i&gt; can share expensive resources such as database connections, Java VMs, memory, etc. reducing the execution time by 1 to 2 seconds per run.  This can give a large speed improvement to protocols that run in a few seconds such as web applications and interactive reports.  Longer running protocols will not see much benefit.  Generally, it is a good idea to use the same &lt;i&gt;__PoolID&lt;/i&gt; for all protocols within a single application such as an interactive report since many of the components, databases, and data structures will be similar.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;__PoolID&lt;/i&gt; can also be specified by the client when the protocol is launched.  If &lt;i&gt;__PoolID&lt;/i&gt; is specified both as a parameter by the client and as a parameter stored within the protocol, the client&apos;s value overrides the stored value.&lt;/p&gt;

&lt;p&gt;To disable pooling entirely for this particular protocol, set &lt;i&gt;__PoolID&lt;/i&gt; to &lt;b&gt;&amp;lt;Disable&amp;gt;&lt;/b&gt;&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Http Cookie Handling" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;Http Cookie Handling&lt;/i&gt; provides a mechanism to control the handling of Http cookies within components that access remote resources via Http and Https.  These include the &lt;a href=&quot;javascript:DoLink(&apos;{8A25024A-C274-485B-BB99-8570DCC4C075}&apos;)&quot;&gt;HTTP Connector&lt;/a&gt;, Data readers such as &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;, &lt;a href=&quot;javascript:DoLink(&apos;{93C4D73F-0B4D-03F4-B0E3-D82C4FE04C6F}&apos;)&quot;&gt;XML Reader (Generic)&lt;/a&gt;, etc., and custom Java, Perl, and .Net components that use the available APIs for accessing remote servers.  By default, New Protocols will have this setting enabled and set to &quot;Protocol Scope&quot;.  This means that Http cookies obtained from a remote server within any component in the protocol or any of its subprotocols will be parsed and appropriately sent back on subsequent requests from the same component or any other component.   The handling of the cookies is based on the IETF standard as specified in &lt;a href=&quot;javascript:DoLink(&apos;http://tools.ietf.org/html/rfc6265&apos;)&quot;&gt;http://tools.ietf.org/html/rfc6265&lt;/a&gt;.  Setting the parameter to Disabled will prevent components from parsing and returning cookies to the remote servers.&lt;/p&gt;

&lt;p&gt;Persistence of cookies is not supported, so scoping of Http cookies is entirely within the context of a single protocol execution.&lt;/p&gt;

&lt;p&gt;Older protocols that do not have the &lt;i&gt;Http Cookie Handling&lt;/i&gt; parameter will behave as though it had been set to &quot;Disabled&quot;.  To enable cookie handling in these protocols, copy this parameter from a New Protocol to the older protocol and set the parameter as desired.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">Protocol Scoped</sci:legalval>
				<sci:legalval>Disabled</sci:legalval>
			</sci:arg>
			<sci:arg name="__NotificationProtocol" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;&lt;i&gt;__NotificationProtocol&lt;/i&gt; specifies the name or component ID (guid) of a protocol stored in the server&apos;s protocol database that will be executed when the current job completes. If your administrator has enabled notification protocols and depending on his or her preference, the notify protocol will either run as the anonymous user or as an admin specified user. The notification protocol receives several parameters that contain information about the original job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Notify_JobID&lt;/i&gt;: The job id of the execution
&lt;li&gt;&lt;i&gt;Notify_JobStatus&lt;/i&gt;: 
A description of the result of the job execution
&lt;li&gt;&lt;i&gt;Notify_JobStatusCode&lt;/i&gt;: The 
status code that for the result of the job execution.
	&lt;ul style=&quot;list-style-type:circle&quot;&gt;
	
&lt;li&gt;&lt;i&gt;5&lt;/i&gt;: Job was stopped by the client or administrator.
	&lt;li&gt;&lt;i&gt;6&lt;/i&gt;: 
Job completed normally with success.
	&lt;li&gt;&lt;i&gt;7&lt;/i&gt;: Job completed with an error.
	&lt;li&gt;&lt;i&gt;8&lt;/i&gt;: 
The process ID associated with the running job crashed or otherwise disappeared.
	&lt;li&gt;&lt;i&gt;9&lt;/i&gt;: 
Job failed to start.
	&lt;/ul&gt;
&lt;li&gt;&lt;i&gt;Notify_ProtocolName&lt;/i&gt;: The name of the protocol
&lt;li&gt;&lt;i&gt;Notify_ProtocolPath&lt;/i&gt;: 
The path of the protocol in the DB.  This field can be blank for protocols that were launched without 
saving to the database.
&lt;li&gt;&lt;i&gt;Notify_ProtocolLogName&lt;/i&gt;: The log name of the protocol.  
Is usually the same as ProtocolName, however this can be set by the client to a different name than the 
protocol.
&lt;li&gt;&lt;i&gt;Notify_RunHost&lt;/i&gt;: The name of the node where the protocol executed.
&lt;li&gt;&lt;i&gt;Notify_Username&lt;/i&gt;: 
The user that ran the job
&lt;/ul&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>The Run On Grid parameter tells the server to run the protocol on the grid engine if the Pipeline Pilot server is configured to run with grid integration.</sci:help>
				<sci:member>Queue Name</sci:member>
				<sci:member>Grid Options</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="true">
				<sci:help>The Queue Name allows you to specify the name of the queue on the grid engine to submit the job to. Leave blank to specify the default queue.</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Grid Options" type="StringType" required="false" visibility="visible" multi="true" legalvalsenforced="false" uimpl="true">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval>ComponentTakesInput</sci:legalval>
				<sci:legalval>ComponentReturnsPass</sci:legalval>
				<sci:legalval>ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Reporting" type="GroupType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>This group contains parameters specific to protocols containing Reporting components.</sci:help>
				<sci:member>Reporting Stylesheet</sci:member>
				<sci:member>Reporting Chart Display Type</sci:member>
			</sci:arg>
			<sci:arg name="Reporting Stylesheet" type="StylesheetType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
				<sci:help>Specifies the name of a Stylesheet to be used by this protocol if any of the Reporting components have a Style selected in the &lt;i&gt;Format&lt;/i&gt; and &lt;i&gt;Position&lt;/i&gt; parameters.</sci:help>
				<sci:value>{25A23C6A-4EF0-45F2-8495-3E88896C6262}</sci:value>
			</sci:arg>
			<sci:arg name="Reporting Chart Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
				<sci:legalval selected="true">Default</sci:legalval>
				<sci:legalval>Interactive</sci:legalval>
				<sci:legalval>Image</sci:legalval>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="WebExports" type="StringType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma delimited list of global properties which will be automatically 
exported if this protocol is published as a web service.&lt;/p&gt;

&lt;p&gt;Each global property in the list is created with an empty value at the start of the protocol run.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="Keep Alive" type="BoolType" required="false" visibility="nevershow" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Specifies if the process where this protocol is run should stay around for later use.&lt;/p&gt;</sci:help>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>clinic1920</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Wed Mar 11 20:38:38 2020</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>20.1.0.2208</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>PPVisualization</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
				<sci:value>PROTOCOLNODE</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>{DD5B1C80-1429-48F1-8D5C-7CE92F54CA82}</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
				<sci:value>100</sci:value>
				<sci:value>PPVisualization</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
				<sci:value>None</sci:value>
				<sci:value/>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="ResultFiles Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>Include JobDir Files</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Local Component Identifier</sci:help>
				<sci:value>-1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>50 -50</sci:value>
			</sci:arg>
			<sci:arg name="OriginalPackage" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>OriginalPackage</sci:help>
				<sci:value>scitegic/coreutils</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>Protocols\Clinic1920\Model Train and Eval\PPVisualization</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.DelimitedReader.1">
				<sci:component name="Delimited Text Reader" version="2">
					<sci:arg name="Source" type="URLType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;
The location from which to read the data. Can be a file, a network resource, a global property, or a data record property.
&lt;/p&gt; 
&lt;p&gt;
&lt;ul&gt;
&lt;li&gt;For a file, enter a path.&lt;/li&gt;
&lt;li&gt;For a network resource, enter a network URL in the form &lt;b&gt;protocol://server:port/...&lt;/b&gt;. (If port is omitted, a default is used.) Protocols supported are:
	&lt;ul&gt;
	&lt;li&gt;http, https&lt;/li&gt;
	&lt;li&gt;ftp&lt;/li&gt;
	&lt;li&gt;hdfs (Hadoop Distributed File System)&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;For a global property, enter &quot;global://property-name&quot;, or select &quot;Global Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;For a data record property, enter &quot;property://property-name&quot;, or add an input port and select &quot;Data Property...&quot; from the &quot;Initialize Using&quot; right-click menu.&lt;/li&gt;
&lt;li&gt;To read multiple files, enter a comma-separated list of any of the above.&lt;/i&gt;
&lt;/ul&gt;</sci:help>
						<sci:member>Maximum</sci:member>
						<sci:member>Keep Properties</sci:member>
						<sci:member>UTF-8 Auto Detect</sci:member>
						<sci:member>SourceTag</sci:member>
						<sci:member>HasColumnNames</sci:member>
						<sci:member>Column Name Lines</sci:member>
						<sci:member>Source Authentication Options</sci:member>
						<sci:value>public:/Clinic1920/Results/bayes_protparam_15Feb20_ROC_validation_data.csv</sci:value>
					</sci:arg>
					<sci:arg name="Source Authentication Options" type="GroupType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>For HTTP, HTTPS, and HDFS URLs, you may optionally specify authentication information for the URL in the following parameters</sci:help>
						<sci:member>Source Authentication Options Username</sci:member>
						<sci:member>Source Authentication Options Password</sci:member>
						<sci:member>Source Authentication Options Authentication Method</sci:member>
						<sci:member>Source Authentication Options KDC Server</sci:member>
						<sci:member>Source Authentication Options KDC Realm</sci:member>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HTTP or HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^(https?|hdfs):&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options Authentication Method" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>Determines which method to use during authentication with an HTTP, HTTPS, or HDFS URL.

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Use Username and Password Parameters&lt;/b&gt;: Use the values provided by the parameter group&apos;s &lt;i&gt;Username&lt;/i&gt; and &lt;i&gt;Password&lt;/i&gt; parameters.
&lt;li&gt;&lt;b&gt;Use Pipeline Pilot Credentials&lt;/b&gt;: Use the username and password that were provided when the user logged into Pipeline Pilot if available.  NOTE: if the &lt;i&gt;Username&lt;/i&gt; parameter is provided, its value will override the user&apos;s logged in username.
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">Use Username and Password Parameters</sci:legalval>
						<sci:legalval>Use Pipeline Pilot Credentials</sci:legalval>
					</sci:arg>
					<sci:arg name="Source Authentication Options Username" type="UserNameType" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;
The username used to connect to the supplied URL.
&lt;/p&gt;
&lt;p&gt;
If the Authentication Method is set to &apos;Use Username and Password Parameters&apos;, then this parameter
must be filled in to log into the remote server.
&lt;/p&gt;
&lt;p&gt; 
If the Authentication Method is set to &apos;Use Pipeline Pilot Credentials&apos;, then this parameter can be left empty
and the logged in username is used. As an override option, if the username is filled in, this
username will be used along with the user&apos;s Pipeline Pilot password.
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Source Authentication Options Password" type="xpass" encrypt="bf_1" required="false" visibility="hidden" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>The password used to authenticate to the URL.  This parameter is disabled if Authentication Method is not set to &apos;Use Username and Password Parameters&apos;.
</sci:help>
						<sci:enabledscript>SetDisabledDetails(&quot;To enable, set Authentication Method to &apos;Use Username and Password Parameters&apos;&quot;);
Parameter(&apos;Authentication Method&apos;) eq &apos;Use Username and Password Parameters&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Server" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Source Authentication Options KDC Realm" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>For authentication to HDFS servers, KDC Server and Realm are also required</sci:help>
						<sci:enabledscript>SetDisabledDetails(&apos;To enable, specify an HDFS URL for Source&apos;);
Parameter(&apos;Source&apos;) rlike &apos;^hdfs:&apos;;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Maximum" type="LongType" required="false" visibility="visible" multi="false">
						<sci:help>The maximum number of data records to read. If empty, all records are read.</sci:help>
					</sci:arg>
					<sci:arg name="SourceTag" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>Specifies a tag format for identifying the source of data records. Causes a property named &lt;b&gt;SourceTag&lt;/b&gt; to be created to hold the value. Options and their associated tag values are:
&lt;ul&gt;
&lt;li&gt;None: No &lt;b&gt;SourceTag&lt;/b&gt; property is created and any existing &lt;b&gt;SourceTag&lt;/b&gt; properties are removed.
&lt;li&gt;Filename: The name of the file excluding its extension
&lt;li&gt;FilenameAndExtension: The name of the file including its file extension
&lt;li&gt;FullFilename: The name of the file, including its extension and directory path
&lt;li&gt;ZipFilename: When reading a compressed zip file, the filename within the compressed archive
&lt;li&gt;Number: When multiple files are read, a number (1, 2, 3...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;Letter: When multiple files are read , a letter (A, B, C...) corresponding to the order of the files in &lt;i&gt;Source&lt;/i&gt;
&lt;li&gt;KeepCurrent: Keeps the current value of &lt;b&gt;SourceTag&lt;/b&gt; if present
&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Filename</sci:legalval>
						<sci:legalval>FilenameAndExtension</sci:legalval>
						<sci:legalval>FullFilename</sci:legalval>
						<sci:legalval>ZipFilename</sci:legalval>
						<sci:legalval>Number</sci:legalval>
						<sci:legalval>Letter</sci:legalval>
						<sci:legalval>KeepCurrent</sci:legalval>
					</sci:arg>
					<sci:arg name="Keep Properties" type="PropertyPreviewType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies properties from &lt;i&gt;Source&lt;/i&gt; to retain for each output data record. If not specified, all properties are retained. A value of &quot;-&quot; (minus sign) specifies that no properties are retained.</sci:help>
					</sci:arg>
					<sci:arg name="UTF-8 Auto Detect" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>Specifies whether to attempt to infer the use of UTF-8 encoding in &lt;i&gt;Source&lt;/i&gt; files when a byte order mark (BOM) is absent from them.
&lt;p&gt;
&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;UTF-8 is a type of character encoding which represents international characters with multiple bytes, while basic Latin characters remain as a single byte.  If a file begins with a BOM, then the encoding can be inferred with confidence. If not, an indirect approach is necessary. This approach is not 100% reliable.  In some cases, valid text stored in different character encodings can appear to be valid UTF-8.  In these cases, the automatic detection will result in garbled text.  When this occurs, consider using the &lt;a href=&quot;javascript:DoLink(&apos;{B0B1B56C-3DF6-444C-BB78-B43211188F63}&apos;)&quot;&gt;Binary Reader&lt;/a&gt; to read the raw bytes from the file, then convert the data using the Pilotscript function &lt;b&gt;ConvertBytesToString&lt;/b&gt;, which allows you to specify the encoding.
&lt;/ul&gt;

</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="HasColumnNames" type="BoolType" required="true" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>If True, property names are taken from the first line of data in &lt;i&gt;Source&lt;/i&gt; files. If False, the first line is assumed to contain data, and properties are given names &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, etc.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Column Name Lines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>If the column name is part of the file, you can specify which line (or lines) are used to construct the property name. So &quot;4&quot; would declare the fourth line to contain the column names, and &quot;4-5&quot; means the values from both lines 4 and 5 will be used to construct the column names.

If not provided, the first non-comment line becomes the column name line.

Any other lines less than the largest column name line are considered comment lines and are ignored.</sci:help>
						<sci:enabledscript>parameter(&apos;HasColumnNames&apos;)</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Delimiter" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>Specifies the character that separates fields. Options include:
&lt;ul&gt;
&lt;li&gt;&lt;b&gt;FigureOut:&lt;/b&gt; Determines the type automatically (looks for, in order: tab, comma, space, colon, semicolon).&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Tab:&lt;/b&gt; For tab-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Space:&lt;/b&gt; For space-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Comma:&lt;/b&gt; For comma-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Colon:&lt;/b&gt; For colon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;Semicolon:&lt;/b&gt; For semicolon-delimited fields.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;$:&lt;/b&gt; For fields delimited bty the &quot;$&quot; character.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:member>MultipleValueDelimiter</sci:member>
						<sci:member>ParseNDimensionalArrayStrings</sci:member>
						<sci:legalval selected="true">FigureOut</sci:legalval>
						<sci:legalval>Tab</sci:legalval>
						<sci:legalval>Space</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>$</sci:legalval>
					</sci:arg>
					<sci:arg name="MultipleValueDelimiter" type="StringType" required="true" visibility="visible" multi="false">
						<sci:help>The delimiter to use between multiple values contained in a single property. If the multiple value delimiter exists in any of the input strings in any property, they are separated into an array of values. If &quot;None&quot;, 
values are never separated into multiple values.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Semicolon</sci:legalval>
						<sci:legalval>Colon</sci:legalval>
						<sci:legalval>Comma</sci:legalval>
						<sci:legalval>Linefeed</sci:legalval>
					</sci:arg>
					<sci:arg name="ParseNDimensionalArrayStrings" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Toggles whether to parse delimited N-Dimensional Array strings into N-Dimensional Array values.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Additional Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Contains less commonly used parameters</sci:help>
						<sci:member>UndefinedString</sci:member>
						<sci:member>AllLines</sci:member>
						<sci:member>TrimWhitespace</sci:member>
						<sci:member>CheckSyntax</sci:member>
						<sci:member>CommentLines</sci:member>
						<sci:member>AddEmptyProperties</sci:member>
					</sci:arg>
					<sci:arg name="CommentLines" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>A comma-separated list of line numbers and
line ranges to specify which lines should be 
ignored by the parser (column headers are read from the line that comes next).</sci:help>
					</sci:arg>
					<sci:arg name="UndefinedString" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>Character or string to represent an undefined string read in the file. To make an empty string to be treated as an undefined value, set the parameter value to &quot;EmptyString&quot;.</sci:help>
					</sci:arg>
					<sci:arg name="AllLines" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, all lines of the text file become part of a single data record. The values for a column from each row become multiple [array] values for the property (column).</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="TrimWhitespace" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Trims whitespace from the left and right ends of each value</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="CheckSyntax" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>Whether to perform a quick syntax check at the beginning of the file when it is opened, and if a problem is found, throw an error.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="AddEmptyProperties" type="BoolType" required="true" visibility="visible" multi="false">
						<sci:help>If True, then if a row does not have as many values as the number of columns, the missing properties are added to the data record as empty properties</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Join Behavior" type="StringType" required="false" visibility="hidden" multi="false" uimpl="false">
						<sci:help>&lt;p&gt;How to merge the created data record onto the incoming data record. Options are:&lt;/p&gt;
 
&lt;ul&gt;
&lt;li&gt;&lt;i&gt;OverwriteOrCreate&lt;/i&gt;: Copies all properties from the joining data onto the base data, overwriting the values of any properties that already exist.
&lt;li&gt;&lt;i&gt;OverwriteExisting&lt;/i&gt;: Copies only those properties from the joining data to the base data that already exist on the base.
&lt;li&gt;&lt;i&gt;CreateIfNew&lt;/i&gt;: Copies only those properties from the joining data to the base data that do not already exist on the base data.
&lt;li&gt;&lt;i&gt;AppendOrCreate&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  The other joining properties that are not already present in the base data are copied there.
&lt;li&gt;&lt;i&gt;AppendExisting&lt;/i&gt;: The value of a joining property that already exists in the base data is appended  (as an array) to the value in the base property.  No other properties are copied. 
&lt;li&gt;&lt;i&gt;Replace&lt;/i&gt;: The input data record is replaced by the created data record. &lt;/ul&gt;

</sci:help>
						<sci:legalval>OverwriteOrCreate</sci:legalval>
						<sci:legalval>OverwriteExisting</sci:legalval>
						<sci:legalval>CreateIfNew</sci:legalval>
						<sci:legalval>AppendOrCreate</sci:legalval>
						<sci:legalval>AppendExisting</sci:legalval>
						<sci:legalval selected="true">Replace</sci:legalval>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval>ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Mon Jul 16 10:52:03 2018</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Read Training Data</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAutoDisplayName" type="ExpressionType" required="false" visibility="nevershow" multi="false">
						<sci:help>Automatically update the component display name when the &quot;Source&quot; property is changed. This feature is turned off after the user manually changes the display name of the component in Protocol workspace.</sci:help>
						<sci:value>
#displayNames := Parameter(&apos;Source&apos;, 2);
if (#displayNames ne &apos;&apos;) then
  Expand(&apos;,&apos;, #displayNames);
end if;
#displayName := Trim(#displayNames[1]);
#dots := &apos;&apos;;
if (NumValues(#displayNames) &gt; 1) then
	#dots := &apos;...&apos;;
end if;
if(StrLength(#displayName) &gt; 0) then	
	/* Find the last slash or backslash, extract the end */
	#name := #displayName;
	#ls1 := FindLastSubstring(#name, &apos;/&apos;);
	#ls2 := FindLastSubstring(#name, &apos;\&apos;);
	if (#ls1 &gt; #ls2) then
		#name := Substring(#name, #ls1+1);
	elsif (#ls2 &gt; #ls1) then
		#name := Substring(#name, #ls2+1);
	end if;

	if (#name eq &apos;&apos;) then
		&apos;&apos;;
	elsif (Substring(#displayName, 1, 9) eq &apos;global://&apos;) then
		&apos;Read from @&apos; . #name . #dots;
	elsif (Substring(#displayName, 1, 11) eq &apos;property://&apos;) then
		&apos;Read from property &apos; . #name . #dots;
	else
		&apos;Read &apos; . #name . #dots;
	end if;
else
	&apos;&apos;;
end if;
			</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component that this component is based upon.</sci:help>
						<sci:value>Delimited Reader</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>DOCUMENTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{7D2AF7C7-A077-4201-B10B-8E8283A5EADD}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>90 -95</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Reads data from text files containing one record per line with data separated by delimiters</sci:value>
						<sci:value>&lt;p&gt;The file or files are specified by &lt;i&gt;Source&lt;/i&gt;. The file(s) should contain textual data formatted with a single record per line. Individual property values on each line should be separated by a delimiter character (such as, space, comma, tab), as specified by &lt;i&gt;Delimiter&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;If &lt;i&gt;HasColumnNames&lt;/i&gt; is True, the values on the first line of the file are treated as the property names. Otherwise, &lt;b&gt;Column1&lt;/b&gt;, &lt;b&gt;Column2&lt;/b&gt;, and so on, are used as the property names.&lt;/p&gt;

Cells containing array data can be read by setting the &lt;i&gt;MultipleValueDelimiter&lt;/i&gt; option to the character that separates the array elements. (Of course, this cannot be the same as the delimiter character.) You can now use the &lt;i&gt;Unmerge Data&lt;/i&gt; component to unmerge these arrays into separate records.
&lt;b&gt;See Also:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;The new, recommended component for Excel (.xlsx or .xls) files that does not require Excel to be installed on the server machine, and therefore is operational on Linux and Windows platforms - &lt;a href=&quot;javascript:DoLink(&apos;{14D98B18-C990-432C-834B-7026565E5ABF}&apos;)&quot;&gt;Excel Reader&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;For non-delimited textual data, use &lt;a href=&quot;javascript:DoLink(&apos;{8056E8AD-33EA-42BB-9099-EAB24C3D08E6}&apos;)&quot;&gt;Text Reader&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>19.1.0.1864</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Data Access and Manipulation\File Readers\Delimited Text Reader</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.ComponentJavaPlugin.1">
				<sci:component name="XY Chart" version="2">
					<sci:arg name="Chart Data" type="GroupType" required="false" visibility="visible" multi="true" expanded="true">
						<sci:help>Defines groups of Data Series for the chart. There is no limit to the number of Data Series you can have. Use this parameter to add, remove and reorder data series in the chart.</sci:help>
						<sci:member>Data Series 1</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Settings for the Data Series to be plotted. You can add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt;.</sci:help>
						<sci:member>Data Series 1 Links and Actions</sci:member>
						<sci:member>Data Series 1 X Property</sci:member>
						<sci:member>Data Series 1 Y Property</sci:member>
						<sci:member>Data Series 1 Symbols and Lines</sci:member>
						<sci:member>Data Series 1 Data Options</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 X Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream, or calculable property, to plot against the X axis.</sci:help>
						<sci:value>FPRateTest</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Y Property" type="StringType" required="true" visibility="visible" multi="false" expanded="true">
						<sci:help>The name of a property on the data stream, or calculable property, to plot against the Y axis. Multiple Y properties can be supplied with a comma-delimited list of property names.</sci:help>
						<sci:value>TPRateTest</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Various data options for the data series.</sci:help>
						<sci:member>Data Series 1 Data Options Error Bar</sci:member>
						<sci:member>Data Series 1 Data Options Y Axis for Plot</sci:member>
						<sci:member>Data Series 1 Data Options Regression Line</sci:member>
						<sci:member>Data Series 1 Data Options Regression Line Expression</sci:member>
						<sci:member>Data Series 1 Data Options Label</sci:member>
						<sci:member>Data Series 1 Data Options Legend Text</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Error Bar" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional parameter that is a property, or a PilotScript expression, providing values that describe the magnitude of error bars shown on individual bars. Any calculable properties must be calculated upstream.

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Y Axis for Plot" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Select which Y axis to plot against (Y Axis or Second Y Axis).</sci:help>
						<sci:legalval selected="true">Y Axis</sci:legalval>
						<sci:legalval>Second Y Axis</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Regression Line" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The type of regression line to draw in the chart.  If &quot;Custom&quot;, then the value of the &quot;Regression Line Expression&quot; parameter will be used to identify records whose values will be used to plot a regression line. If &quot;Power&quot;, then all data points need to have positive values, otherwise the regression line will not be drawn.</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Linear</sci:legalval>
						<sci:legalval>Power</sci:legalval>
						<sci:legalval>Custom</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Regression Line Expression" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;A PilotScript expression that evaluates to True for any data points that should be counted as part of a custom regression line.  This parameter is ignored unless the Regression Line parameter&apos;s value is &quot;Custom.&quot;&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:validscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
valid := Parameter(regressionLineParameterName) ne &apos;Custom&apos; OR Parameter() ne &apos;&apos;;
if (not valid) then
     SetInvalidDetails(&apos;This parameter is required when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
valid;</sci:validscript>
						<sci:enabledscript>regressionLineParameterName := StrReplace(ParameterName(), &quot;Regression Line Expression&quot;, &quot;Regression Line&quot;);
enabled := Parameter(regressionLineParameterName) eq &apos;Custom&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Regression Line is set to &quot;Custom&quot;&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Label" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The name of a property on the data stream, or a PilotScript expression, that will be displayed as a label next to each point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Data Options Legend Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Text to be displayed in the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains a single entry, then the specified string is used as the legend. If &lt;i&gt;Y Property&lt;/i&gt; contains multiple entries then this parameter should contain a comma-separated list of strings to be used as legends. If this parameter is left blank, or the number of comma-separated strings is less than the number of &lt;i&gt;Y Property&lt;/i&gt; entries then a default legend text will be supplied.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Symbol and line attributes for the data series.</sci:help>
						<sci:member>Data Series 1 Symbols and Lines Symbol Type</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Size</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Color</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Symbol Fill Pattern</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Type</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Thickness</sci:member>
						<sci:member>Data Series 1 Symbols and Lines Line Color</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol type to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol type for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol type value or an expression defining a symbol type. A symbol type can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;None&lt;/li&gt;
&lt;li&gt;Square&lt;/li&gt;
&lt;li&gt;Circle&lt;/li&gt;
&lt;li&gt;Triangle&lt;/li&gt;
&lt;li&gt;Inverted Triangle&lt;/li&gt;
&lt;li&gt;Diamond&lt;/li&gt;
&lt;li&gt;Cross&lt;/li&gt;
&lt;li&gt;Star&lt;/li&gt;
&lt;li&gt;Burst&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
						<sci:legalval selected="true">None</sci:legalval>
						<sci:legalval>Square</sci:legalval>
						<sci:legalval>Circle</sci:legalval>
						<sci:legalval>Triangle</sci:legalval>
						<sci:legalval>Inverted Triangle</sci:legalval>
						<sci:legalval>Diamond</sci:legalval>
						<sci:legalval>Cross</sci:legalval>
						<sci:legalval>Star</sci:legalval>
						<sci:legalval>Burst</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Size" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol size. The entered value will be used as the number of pixels in the radius of the symbol.  If the parameter is not specified the default symbol size of 6.0 is used. &lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can create bubble charts where the size of each data point reflects a meaningful aspect of the data by changing the parameter type to ExpressionType and typing an expression evaluating to a double value. If the expression is evaluated to a negative value, a symbol size of zero is used (no symbol is drawn).&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the symbol and error bar color.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different color for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a color value or an expression defining a color.  There are three ways to specify colors for the property or expression:
&lt;ul&gt;&lt;li&gt;Strings, e.g., Red or Blue.&lt;/li&gt;
&lt;li&gt;RGB (reg-green-blue) color values (as hexadecimal values), prefixed with a &apos;#&apos; symbol.  For example, to specify the color Red, use &lt;code&gt;#FF0000&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Integer index values that correspond to the default order of colors from the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/default_color_table.htm&apos;)&quot;&gt;Default Color Table&lt;/a&gt;. For example, to specify Yellow, use 4 (i.e., Yellow is the fourth entry in the table).&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;

</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Symbol Fill Pattern" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies the symbol fill pattern to use.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;You can assign a different symbol fill pattern for each data point by changing the parameter type to ExpressionType and setting its value to either the name of a property that holds a symbol fill pattern value or an expression defining a symbol fill pattern. A symbol fill pattern can be one of the predefined strings:
&lt;ul&gt;
&lt;li&gt;Gradient&lt;/li&gt;
&lt;li&gt;Solid&lt;/li&gt;
&lt;li&gt;Open&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;

&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:legalval>Solid</sci:legalval>
						<sci:legalval selected="true">Gradient</sci:legalval>
						<sci:legalval>Open</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the line type for the data.</sci:help>
						<sci:legalval>None</sci:legalval>
						<sci:legalval selected="true">Solid</sci:legalval>
						<sci:legalval>Dotted</sci:legalval>
						<sci:legalval>Dashed</sci:legalval>
						<sci:legalval>Dot-dash</sci:legalval>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Thickness" type="LongType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the thickness of line.</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="Data Series 1 Symbols and Lines Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;specifies the color of the line.</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Links and Actions options for the data series.</sci:help>
						<sci:member>Data Series 1 Links and Actions Link</sci:member>
						<sci:member>Data Series 1 Links and Actions Protocol Link</sci:member>
						<sci:member>Data Series 1 Links and Actions HTML Attributes</sci:member>
						<sci:member>Data Series 1 Links and Actions Tooltip</sci:member>
						<sci:member>Data Series 1 Links and Actions Link Options</sci:member>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Link" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false">
						<sci:help>&lt;p&gt;An optional PilotScript expression evaluating to a link for each data point on the chart. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
	&lt;ul&gt;
	&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
	&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
	&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
	&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:enabledscript>protocolLinkParameterName := StrReplace(ParameterName(), &quot;Actions Link&quot;, &quot;Actions Protocol Link&quot;);
enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol for each data point on the chart. Editing this parameter opens up the Protocol Link Dialog.
&lt;/p&gt;
&lt;p&gt;
Note: if Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If Y Property contains more than one entry, the same protocol link will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
						<sci:enabledscript>linkParameterName := StrReplace(ParameterName(), &quot;Protocol Link&quot;, &quot;Link&quot;);
enabled := Parameter(linkParameterName) eq &apos;&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display pages linked to data points. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the data series.
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions Tooltip" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;An optional property name, or PilotScript expression evaluating to a string, that will be displayed as a tooltip when the mouse hovers over a data point in the chart.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same tooltip will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Data Series 1 Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Defines attributes for one point on the chart. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt; 
&lt;ul&gt;
&lt;li&gt;If &lt;i&gt;Y Property&lt;/i&gt; contains more than one entry, the same attributes will be assigned to relevant chart entries of all Y Properties.&lt;/li&gt;
&lt;li&gt;When working with array data in PilotScript expressions use the special property &quot;CurrentArrayIndex&quot; to access the array element that is currently being processed.  For example, to multiply the values of the array property, &quot;Foo&quot;, by 2, use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Foo[CurrentArrayIndex] * 2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit &lt;code&gt;[CurrentArrayIndex]&lt;/code&gt;, only the first element of the array will be used.&lt;/p&gt;

&lt;p&gt;If the PilotScript expression is just a property name, you do not need to use &quot;CurrentArrayIndex&quot;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies attributes to be applied to the whole chart.</sci:help>
						<sci:member>Chart Options Title</sci:member>
						<sci:member>Chart Options Format</sci:member>
						<sci:member>Chart Options Position</sci:member>
						<sci:member>Chart Options Chart Output</sci:member>
						<sci:member>Chart Options Force One Series per Data Record</sci:member>
						<sci:member>Chart Options Make Scriptable</sci:member>
						<sci:member>Chart Options Display Options</sci:member>
						<sci:member>Chart Options Links and Actions</sci:member>
						<sci:member>Chart Options Display Type</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Title for the chart.&lt;/p&gt;</sci:help>
						<sci:value>$(Data Series 1 Y Property) vs. $(Data Series 1 X Property)</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Format" type="FormatType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Specifies formatting to be applied to this element. Editing this parameter opens the Format Dialog.&lt;/p&gt;

&lt;p&gt;Depending on what this Format is being applied to, options may include:
&lt;ul&gt;&lt;li&gt;Font settings (e.g., Color, Size, Bold, Italic, Underline)&lt;/li&gt;
&lt;li&gt;Border settings (e.g., Color, Style, Width)&lt;/li&gt;
&lt;li&gt;Background settings (Color, Image)&lt;/li&gt;
&lt;li&gt;Alignment settings&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Only options that are relevant for this specific Format parameter will be displayed.&lt;/li&gt;
&lt;li&gt;Background Image: Allows you to select a background image for the reporting element. This image must be accessible to the Pipeline Pilot server. For example, there are some example images in the apps\scitegic\generic\dataroot\data\Images folder in your Pipeline Pilot installation (shortcut is &quot;generic\Images&quot; folder). To use your own images, you need to upload them to a location such as your userdir or jobdir. An easy way to do this is to use the Binary Reader component to read the file, and the Binary Writer component to save it to the chosen location. Supported image types include .gif, .jpg, .png, and .bmp.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.General</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Chart Options Position" type="PositionType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies how this element is positioned. Editing this parameter opens the Position dialog, which enables you to change margins, paddings, width, and height.</sci:help>
						<sci:value>600</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.General</sci:value>
						<sci:value>Width</sci:value>
						<sci:value>800</sci:value>
						<sci:value>Pixels</sci:value>
						<sci:value>Height</sci:value>
						<sci:value>600</sci:value>
						<sci:value>Pixels</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Display Type" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies the chart display format.  This can be either interactive or a static image. If the &lt;i&gt;Default&lt;/i&gt; option is selected then the server default setting as specified by the &lt;i&gt;DefaultChartDisplayType&lt;/i&gt; global in the Admin portal is used.
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Interactive</sci:legalval>
						<sci:legalval>Image</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Chart Output" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Controls how data records are plotted in charts:
&lt;ul&gt;&lt;li&gt;If set to &quot;One Chart for All Data Records&quot; then all data records will be plotted in a single chart.&lt;/li&gt;
&lt;li&gt;If set to &quot;One Chart for Each Data Record&quot; then each data record will be plotted in a separate chart.  Use this when you want to create a chart for each row of a table.  Note that with the &quot;One Chart for Each Data Record&quot; setting, this applies to all Data Series specified including any non-array data series.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval selected="true">One Chart for All Data Records</sci:legalval>
						<sci:legalval>One Chart for Each Data Record</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Force One Series per Data Record" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:help>Use this parameter to force each data record to be treated as separate data series. That is, when you want the values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; in each data record to be treated as independent data series, so that they can be colored or sized differently, or use different symbols. This is typically done when &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; contain array data.
&lt;p&gt;Note that the effect of treating the data as separate data series will happen automatically if the first data record has array data, irrespective of the value for &lt;i&gt;Force One Series per Data Record&lt;/i&gt;. But if the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; (whether of type array or not), then this parameter must be set to &lt;b&gt;True&lt;/b&gt; to force the data to be treated as separate data series. A typical use case is when the first data record has single values for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; but subsequent data records have array data.
&lt;ul&gt;&lt;li&gt;&lt;b&gt;False:&lt;/b&gt; The number of values of for &lt;i&gt;X Property&lt;/i&gt; and &lt;i&gt;Y Property&lt;/i&gt; determines whether each record creates a new data series.&lt;/li&gt;
&lt;li&gt;&lt;b&gt;True:&lt;/b&gt; Each data record always creates a separate data series.&lt;/li&gt;&lt;/ul&gt;</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Make Scriptable" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false">
						<sci:help>&lt;p&gt;Enables this chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When this parameter is sent to true, all properties on the data stream will be stored in the chart for use with the &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/a&gt;.  If the data stream contains properties that should not be included, you can specify which properties to keep by placing a &lt;a href=&quot;javascript:DoLink(&apos;{456195EF-9708-4367-B3DD-21EBF3796604}&apos;)&quot;&gt;Keep Properties&lt;/a&gt; component upstream of the chart.&lt;/p&gt;
&lt;p&gt;NOTE: Making the chart Scriptable will force the &apos;Display Type&apos; to become &apos;Interactive&apos;.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Display options for the whole chart.</sci:help>
						<sci:member>Chart Options Display Options Show Legend</sci:member>
						<sci:member>Chart Options Display Options Legend Format</sci:member>
						<sci:member>Chart Options Display Options Show Horizontal Gridlines</sci:member>
						<sci:member>Chart Options Display Options Show Vertical Gridlines</sci:member>
						<sci:member>Chart Options Display Options Plot Region Color</sci:member>
						<sci:member>Chart Options Display Options Plot Region Transparency</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Legend" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide the legend.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Legend Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:help>&lt;p&gt;Formatting to be applied to the chart legend.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.  You can also set the Background and Border Color of the legend.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Legend</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Horizontal Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide Horizontal Gridlines.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Show Vertical Gridlines" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;Show/Hide Vertical Gridlines.</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Plot Region Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Apply a background color to the plot.</sci:help>
						<sci:value>White</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Display Options Plot Region Transparency" type="DoubleType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;p&gt;A transparency for rendering the plot region. Legal values are between 0.0 (fully transparent) and 1.0 (fully opaque). The default is 1.0. 

&lt;p&gt;This options is not currently supported for PDF reports.</sci:help>
						<sci:validscript>SetInvalidDetails(&apos;The value has to be between 0.0 and 1.0&apos;);
Parameter() &gt;= 0.0 AND Parameter() &lt;= 1.0</sci:validscript>
						<sci:value>1.0</sci:value>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:member>Chart Options Links and Actions Link</sci:member>
						<sci:member>Chart Options Links and Actions Link Target</sci:member>
						<sci:member>Chart Options Links and Actions HTML Attributes</sci:member>
						<sci:member>Chart Options Links and Actions Data Connector</sci:member>
						<sci:member>Chart Options Links and Actions Protocol Link</sci:member>
						<sci:member>Chart Options Links and Actions Link Options</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;An optional parameter specifying a link for the reporting element produced by this component. The &lt;i&gt;Link&lt;/i&gt; value can be an internal report link or an external URL.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Internal: A string that points to a &lt;i&gt;Link Target&lt;/i&gt; in the report. Both the &lt;i&gt;Link&lt;/i&gt; and &lt;i&gt;Link Target&lt;/i&gt; values need to match for an internal link to work.&lt;/li&gt;
&lt;li&gt;External: A string that points to an external URL such as &apos;http://www.sitename.com&apos;, &apos;ftp://www.sitename.com&apos;, or a file URL. A file URL can be in one of these forms:
&lt;ul&gt;
&lt;li&gt;&apos;file:///C:/.../scitegic root/.../document.pdf&apos; - when using an absolute path within the Pipeline Pilot installation folder&lt;/li&gt;
&lt;li&gt;&apos;file:///relative_path/document.pdf&apos; - when using a path, relative to &lt;i&gt;@SciTegicRoot&lt;/i&gt;&lt;/li&gt;
&lt;li&gt;&apos;file://machine_name.domain_name.com/C/.../document.pdf&apos; - when using a path with a fully qualified machine name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;b&gt;Example:&lt;/b&gt;
To create a link from a combination of a property and static text, create a valid PilotScript expression. For example, if you have internal web pages linking to research projects that have addresses of the form: &lt;i&gt;http://mydomain.com/ProjectID&lt;/i&gt;, where &lt;i&gt;ProjectID&lt;/i&gt; is the actual project ID, and also a local property on the datastream, you would use:
&lt;p&gt;&lt;code&gt;&apos;http://mydomain.com&apos; . ProjectID&lt;/code&gt;
&lt;p&gt;as the value for &lt;i&gt;Link&lt;/i&gt;.</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
protocolLinkParameterName := prefix.&apos;Protocol Link&apos;;
enabled := true;
if (parameter(protocolLinkParameterName) is Defined ) then 
	enabled := Parameter(protocolLinkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Protocol Link is not set&apos;);
	End if;
end if;	
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Protocol Link" type="ProtocolLinkType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies a link that runs a protocol.  Editing this parameter opens up the Protocol Link Dialog.&lt;/p&gt;</sci:help>
						<sci:enabledscript>prefixLength := StringLen(&apos;Protocol Link&apos;);
fullLength := StringLen(ParameterName());
prefix := SubString(ParameterName(), 1, fullLength - prefixLength); 
linkParameterName := prefix.&apos;Link&apos;;
enabled := true;
if (parameter(linkParameterName) is Defined ) then 
	enabled := Parameter(linkParameterName) eq &apos;&apos;;
	if (not enabled) then
		 SetDisabledDetails(&apos;This parameter is enabled only when Link is not set&apos;);
	End if;
End if;
enabled;</sci:enabledscript>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link Options" type="LinkOptionsType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Specifies how to display pages linked to the reporting element. 
Applies only if &lt;i&gt;Link&lt;/i&gt; or &lt;i&gt;Protocol Link&lt;/i&gt; are set for the component.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Link Target" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Sets this element as the destination for links from other elements in the report. The value of &lt;i&gt;Link Target&lt;/i&gt; can be text or a property name, and should match the value of &lt;i&gt;Link&lt;/i&gt; in another report component.  In the resulting report, when the element with &lt;i&gt;Link&lt;/i&gt; is clicked, the element with the matching &lt;i&gt;Link Target&lt;/i&gt; is brought to the top of the report page.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions HTML Attributes" type="HTMLAttributesType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>Defines attributes for the reporting element. These attributes can be used by JavaScript code that is &lt;a href=&quot;javascript:DoLink(&apos;{262A8E5D-BB8E-4dc4-A6F5-A61FC6047EC8}&apos;)&quot;&gt;embedded in&lt;/a&gt; or &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;included by&lt;/a&gt; the HTML report. One very common attribute is &quot;id&quot; which allows access to the element using the document.getElementById(id) method. Event handlers such as &quot;onclick&quot; and &quot;onmouseover&quot; are also common attributes.</sci:help>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Parameters related to the Data Connector interactivity model.</sci:help>
						<sci:member>Chart Options Links and Actions Data Connector Subscriber Event Handling</sci:member>
						<sci:member>Chart Options Links and Actions Data Connector Publisher Subscriber Model</sci:member>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector Publisher Subscriber Model" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>Whether the component is a publisher, subscriber or both. Setting to &apos;None&apos; bypasses any Data Connector node.</sci:help>
						<sci:legalval selected="true">Publisher and Subscriber</sci:legalval>
						<sci:legalval>Publisher</sci:legalval>
						<sci:legalval>Subscriber</sci:legalval>
						<sci:legalval>None</sci:legalval>
					</sci:arg>
					<sci:arg name="Chart Options Links and Actions Data Connector Subscriber Event Handling" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Setting the on subscription event handling method.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;The publisher component always highlights.</sci:help>
						<sci:enabledscript>ModelParameterName := StrReplace(ParameterName(), &quot;Subscriber Event Handling&quot;, &quot;Publisher Subscriber Model&quot;);
enabled := Parameter(ModelParameterName) not EQ &apos;Publisher&apos; AND Parameter(ModelParameterName) not EQ &apos;None&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when the Publisher Subscriber Model is set to &quot;Publisher&quot; only or &quot;None&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalval selected="true">Highlight</sci:legalval>
						<sci:legalval>Filter</sci:legalval>
						<sci:legalval>Reverse Filter</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes of the X axis.</sci:help>
						<sci:member>X Axis Minimum</sci:member>
						<sci:member>X Axis Maximum</sci:member>
						<sci:member>X Axis Scaling</sci:member>
						<sci:member>X Axis Orientation</sci:member>
						<sci:member>X Axis Label</sci:member>
						<sci:member>X Axis Label Format</sci:member>
						<sci:member>X Axis Display Options</sci:member>
						<sci:member>X Axis Line Color</sci:member>
						<sci:member>X Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="X Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="X Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the X axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="X Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for X axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Orientation of the X Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease along the axis from left to right.</sci:help>
						<sci:legalval selected="true">Normal</sci:legalval>
						<sci:legalval>Inverted</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the X axis.</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="X Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the X-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval selected="true">Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Options for &lt;i&gt;X Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>X Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>X Axis Tickmark Options Tickmark Label Format</sci:member>
						<sci:member>X Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>X Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>X Axis Tickmark Options Major Tickmark Spacing</sci:member>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.&lt;/p&gt;
&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;This option currently does not apply to DateTime type tickmarks.
</sci:help>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;X Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="X Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the X axis line.</sci:help>
						<sci:value>Gainsboro</sci:value>
					</sci:arg>
					<sci:arg name="Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes for the left Y axis</sci:help>
						<sci:member>Y Axis Minimum</sci:member>
						<sci:member>Y Axis Maximum</sci:member>
						<sci:member>Y Axis Scaling</sci:member>
						<sci:member>Y Axis Orientation</sci:member>
						<sci:member>Y Axis Label</sci:member>
						<sci:member>Y Axis Label Format</sci:member>
						<sci:member>Y Axis Display Options</sci:member>
						<sci:member>Y Axis Line Color</sci:member>
						<sci:member>Y Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for Y axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Orientation" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Orientation of the Y Axis. Set to &quot;Inverted&quot; to reverse the axis, so that values decrease vertically up the axis from bottom to top.</sci:help>
						<sci:legalval selected="true">Normal</sci:legalval>
						<sci:legalval>Inverted</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the Y axis.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval>Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Options for &lt;i&gt;Y Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>Y Axis Tickmark Options Tickmark Label Format</sci:member>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) NE &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the Y axis line.</sci:help>
						<sci:value>Gainsboro</sci:value>
					</sci:arg>
					<sci:arg name="Second Y Axis" type="GroupType" required="false" visibility="visible" multi="false">
						<sci:help>Attributes for the right Y axis</sci:help>
						<sci:member>Second Y Axis Minimum</sci:member>
						<sci:member>Second Y Axis Maximum</sci:member>
						<sci:member>Second Y Axis Scaling</sci:member>
						<sci:member>Second Y Axis Label</sci:member>
						<sci:member>Second Y Axis Label Format</sci:member>
						<sci:member>Second Y Axis Display Options</sci:member>
						<sci:member>Second Y Axis Line Color</sci:member>
						<sci:member>Second Y Axis Tickmark Options</sci:member>
					</sci:arg>
					<sci:arg name="Second Y Axis Minimum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the lower bound of the right Y axis.  If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>maxParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Maximum&quot;);
valid := true;
minValue := Parameter();
if (minValue ne &apos;&apos; and IsNumber(minValue)) then
	maxValue := Parameter(maxParameterName);
	if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then 
		valid := maxValue &gt; minValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;
	
	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Minimum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := minValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;			
	end if;
end if;	
	
if (not valid) then 
	SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Second Y Axis Maximum" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Optional value for the upper bound of the right Y axis. If this is not specified, the axis range will be determined automatically.</sci:help>
						<sci:validscript>minParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Minimum&quot;);
valid := true;
maxValue := Parameter();
if (maxValue ne &apos;&apos; and IsNumber(maxValue)) then
	minValue := Parameter(minParameterName);
	if(minValue ne &apos;&apos; and IsNumber(minValue)) then 
		valid := minValue &lt; maxValue;
		invalidMessage := &apos;Minimum should be less than Maximum&apos;;
	end if;

	if (valid) then 
		scalingParameterName := StrReplace(ParameterName(), &quot;Maximum&quot;, &quot;Scaling&quot;);
		if Parameter(scalingParameterName) Is Defined and FindSubstring(Parameter(scalingParameterName), &apos;Logarithmic&apos;) &gt; 0 then
				valid := maxValue &gt; 0;
				invalidMessage := &apos;This parameter should be greater than 0 for logarithmic scaling&apos;;
		end if;		
	end if;	
end if;	
	
if (not valid) then 
		SetInvalidDetails(invalidMessage);
end if;

valid;</sci:validscript>
					</sci:arg>
					<sci:arg name="Second Y Axis Scaling" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Scaling for the right Y axis.</sci:help>
						<sci:legalval selected="true">Linear</sci:legalval>
						<sci:legalval>Logarithmic - base 10</sci:legalval>
						<sci:legalval>Logarithmic - natural</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Label" type="StringType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Label for the right Y axis.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Label Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Formatting to be applied to this reporting element.&lt;/p&gt;
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
						<sci:value>Style</sci:value>
						<sci:value>Chart.Axis Label</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Second Y Axis Display Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
						<sci:help>&lt;p&gt;Display options for the Second Y-Axis&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt; Show Axis Line - Show/Hide the axis line.&lt;/li&gt;
&lt;li&gt; Show Axis Label - Show/Hide the axis label.&lt;/li&gt;
&lt;li&gt; Show Tickmark Labels - Show/Hide the tickmark labels.&lt;/li&gt;
&lt;ul&gt;</sci:help>
						<sci:legalval>Show Axis Line</sci:legalval>
						<sci:legalval selected="true">Show Axis Label</sci:legalval>
						<sci:legalval selected="true">Show Tickmark Labels</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Options for &lt;i&gt;Second Y Axis&lt;/i&gt; tickmark labels.</sci:help>
						<sci:member>Second Y Axis Tickmark Options Major Tickmark Start Value</sci:member>
						<sci:member>Second Y Axis Tickmark Options Major Tickmark Spacing</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Orientation</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Type</sci:member>
						<sci:member>Second Y Axis Tickmark Options Tickmark Label Format</sci:member>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Start Value" type="ExpressionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The starting value for major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Major Tickmark Spacing" type="DoubleType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Spacing of major tickmarks.</sci:help>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Type" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;The data type of the axis tickmark labels.
</sci:help>
						<sci:legalval selected="true">Based on Input Data</sci:legalval>
						<sci:legalval>Double</sci:legalval>
						<sci:legalval>Integer</sci:legalval>
						<sci:legalval>DateTime</sci:legalval>
						<sci:legalval>Date</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Format" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Selects the format of the tickmark labels displayed on this axis. The legal values are dependent on &apos;Second Y Axis Tickmark Options Tickmark Label Type&apos;. The default value is dependent on the label type, as indicated below.
&lt;/p&gt;
&lt;p&gt;The separator characters that appear in numbers are different around 
the world. The default number formatting will pick separators that are 
appropriate for the server&apos;s geographic location. In most places, a 
comma will be used to separate thousands in integers (e.g., 1,234) and a 
period used to separate whole and fractional parts of floating point 
numbers (e.g., 1.234). In Germany, these symbols are reversed. The 
separators can also be set by selecting the appropriate menu entry.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Integer:
&lt;ul&gt;
&lt;li&gt;Default - use the thousands separator appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;1234 - AS IS&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a thousands separator&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a thousands separator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Double: 
&lt;ul&gt;
&lt;li&gt;Default - use a decimal point appropriate for the geographic location and output up to 8 digits after the point&lt;/li&gt;
&lt;li&gt;1.2 - use a period as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1.23 - use a period as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1.234 - use a period as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1.2345 - use a period as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;li&gt;1,2 - use a comma as a decimal point and output up to 1 digit after the point&lt;/li&gt;
&lt;li&gt;1,23 - use a comma as a decimal point and output up to 2 digit after the point&lt;/li&gt;
&lt;li&gt;1,234 - use a comma as a decimal point and output up to 3 digit after the point&lt;/li&gt;
&lt;li&gt;1,2345 - use a comma as a decimal point and output up to 4 digit after the point&lt;/li&gt;
&lt;/ul&gt;
Note that in all of the above cases, the tickmarks label precision is based on the precision of the interval between tickmarks.  For example, with a format of 1.234 and a tickmarks interval of 0.5, all tickmark values appear with a single decimal digit.  Trailing zeros after the decimal point are always omitted, irrespective of the selected format.
&lt;/li&gt;
&lt;li&gt;DateTime:
&lt;ul&gt;
&lt;li&gt;Default - use the date and time format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23&lt;/li&gt;
&lt;li&gt;06/13/1960 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23 PM (default)&lt;/li&gt;
&lt;li&gt;06/13/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23&lt;/li&gt;
&lt;li&gt;13/06/1960 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/1960 1:23:45 PM&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;06/13/60 13:23&lt;/li&gt;
&lt;li&gt;06/13/60 13:23:45&lt;/li&gt;
&lt;li&gt;06/13/60 1:23 PM&lt;/li&gt;
&lt;li&gt;06/13/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;13/06/60 13:23&lt;/li&gt;
&lt;li&gt;13/06/60 13:23:45&lt;/li&gt;
&lt;li&gt;13/06/60 1:23 PM&lt;/li&gt;
&lt;li&gt;13/06/60 1:23:45 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23&lt;/li&gt;
&lt;li&gt;June 13, 1960 13:23:45&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23 PM&lt;/li&gt;
&lt;li&gt;June 13, 1960 1:23:45 PM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Date:
&lt;ul&gt;
&lt;li&gt;Default - use the date format appropriate for the geographic location&lt;/li&gt;
&lt;li&gt;06/13/1960&lt;/li&gt;
&lt;li&gt;13/06/1960&lt;/li&gt;
&lt;li&gt;06/13/60&lt;/li&gt;
&lt;li&gt;13/06/60&lt;/li&gt;
&lt;li&gt;June 13, 1960&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:enabledscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Tickmark Label Format&quot;, &quot;Tickmark Label Type&quot;);
enabled := Parameter(ValuesTypeParameterName) EQ &apos;Based on Input Data&apos;;
if (not enabled) then
     SetDisabledDetails(&apos;This parameter is not enabled when Label Type is set to &quot;Based on Input Data&quot;&apos;);
End if;
enabled;</sci:enabledscript>
						<sci:legalvalscript>ValuesTypeParameterName := StrReplace(ParameterName(), &quot;Format&quot;, &quot;Type&quot;);
if (Parameter(ValuesTypeParameterName) eq &apos;Integer&apos;) then
	 resize(legalvalues, 4);
     legalvalues[2] := &apos;1234&apos;;
	 legalvalues[3] := &apos;1,234&apos;;
	 legalvalues[4] := &apos;1.234&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Double&apos;) then
	 resize(legalvalues, 9);
     legalvalues[2] := &apos;1.2&apos;;
     legalvalues[3] := &apos;1.23&apos;;
     legalvalues[4] := &apos;1.234&apos;;
     legalvalues[5] := &apos;1.2345&apos;;
     legalvalues[6] := &apos;1,2&apos;;
     legalvalues[7] := &apos;1,23&apos;;
     legalvalues[8] := &apos;1,234&apos;;
     legalvalues[9] := &apos;1,2345&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;DateTime&apos;) then
	 resize(legalvalues, 26);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;06/13/1960 13:23&apos;;
	legalvalues[4] := &apos;06/13/1960 13:23:45&apos;;
	legalvalues[5] := &apos;06/13/1960 1:23 PM&apos;;
	legalvalues[6] := &apos;06/13/1960 1:23:45 PM&apos;;
	legalvalues[7] := &apos;13/06/1960&apos;;
	legalvalues[8] := &apos;13/06/1960 13:23&apos;;
	legalvalues[9] := &apos;13/06/1960 13:23:45&apos;;
	legalvalues[10] := &apos;13/06/1960 1:23 PM&apos;;
	legalvalues[11] := &apos;13/06/1960 1:23:45 PM&apos;;
	legalvalues[12] := &apos;06/13/60&apos;;
	legalvalues[13] := &apos;06/13/60 13:23&apos;;
	legalvalues[14] := &apos;06/13/60 13:23:45&apos;;
	legalvalues[15] := &apos;06/13/60 1:23 PM&apos;;
	legalvalues[16] := &apos;06/13/60 1:23:45 PM&apos;;
	legalvalues[17] := &apos;13/06/60&apos;;
	legalvalues[18] := &apos;13/06/60 13:23&apos;;
	legalvalues[19] := &apos;13/06/60 13:23:45&apos;;
	legalvalues[20] := &apos;13/06/60 1:23 PM&apos;;
	legalvalues[21] := &apos;13/06/60 1:23:45 PM&apos;;
	legalvalues[22] := &apos;June 13, 1960&apos;; 
	legalvalues[23] := &apos;June 13, 1960 13:23&apos;;
	legalvalues[24] := &apos;June 13, 1960 13:23:45&apos;;
	legalvalues[25] := &apos;June 13, 1960 1:23 PM&apos;;
	legalvalues[26] := &apos;June 13, 1960 1:23:45 PM&apos;;
elsif (Parameter(ValuesTypeParameterName) eq &apos;Date&apos;) then
	 resize(legalvalues, 6);
	legalvalues[2] := &apos;06/13/1960&apos;; 
	legalvalues[3] := &apos;13/06/1960&apos;;
	legalvalues[4] := &apos;06/13/60&apos;;
	legalvalues[5] := &apos;13/06/60&apos;;
	legalvalues[6] := &apos;June 13, 1960&apos;; 
else
	resize(legalvalues,1);
end if;
legalvalues[1] := &apos;Default&apos;;
SetLegalValues(legalvalues);</sci:legalvalscript>
						<sci:legalval selected="true">Default</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Tickmark Options Tickmark Label Orientation" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;Specifies the orientation for tickmark labels.</sci:help>
						<sci:legalval selected="true">Horizontal</sci:legalval>
						<sci:legalval>Vertical</sci:legalval>
						<sci:legalval>Diagonal</sci:legalval>
					</sci:arg>
					<sci:arg name="Second Y Axis Line Color" type="ColorType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:help>&lt;p&gt;Specifies the color of the right Y axis line.</sci:help>
						<sci:value>Gainsboro</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings" type="GroupType" required="false" visibility="visible" multi="false" uimpl="false">
						<sci:help>Column settings control how the element appears when it is used inside a table.</sci:help>
						<sci:member>Column Settings Header Text</sci:member>
						<sci:member>Column Settings Header Format</sci:member>
						<sci:member>Column Settings Header Position</sci:member>
						<sci:member>Column Settings Cell Format</sci:member>
						<sci:member>Column Settings Cell Position</sci:member>
					</sci:arg>
					<sci:arg name="Column Settings Header Text" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Header Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>&lt;p&gt;When used in a table, this parameter sets the format of the text displayed 
at the top of its column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Header Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the text displayed at the top of its column.</sci:help>
					</sci:arg>
					<sci:arg name="Column Settings Cell Format" type="FormatType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When used in a table, this parameter sets the format of the cells in the column.
&lt;p&gt;Editing this parameter opens the Format Dialog. Options that can be changed by 
this parameter include Font, Font Size, Bold, Italic, Underline, and Color.&lt;/p&gt;

&lt;b&gt;Notes:&lt;/b&gt;
&lt;br&gt;Examples of available formatting options:
&lt;ul&gt;
&lt;li&gt;Font Size: Sets font size&lt;/li&gt;
&lt;li&gt;Color: Sets font color&lt;/li&gt;
&lt;/ul&gt;</sci:help>
						<sci:value>700</sci:value>
					</sci:arg>
					<sci:arg name="Column Settings Cell Position" type="PositionType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
						<sci:help>When the element is used within a Table component, this parameter sets the position of the cells in the column.</sci:help>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true" expanded="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false" expanded="true">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>REPORTCHARTNODE</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>18.1.0.1590</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true" expanded="true">
						<sci:value>100</sci:value>
						<sci:value>Creates an XY plot for a report</sci:value>
						<sci:value>&lt;p&gt;Displays data as points and/or lines. Each incoming data record represents a single point for a given dataset. Multiple data series (i.e., &lt;em&gt;Data Series 1&lt;/em&gt;, &lt;em&gt;Data Series 2&lt;/em&gt;, etc.) can use distinct formatting. The chart as a whole and the individual axes are also customizable.&lt;/p&gt;

&lt;p&gt;&lt;i&gt;X Property&lt;/i&gt; is the property containing the X data values. &lt;i&gt;Y Property&lt;/i&gt; is the property containing the Y data values. You can specify multiple Y properties for a given Data Series, as described below.&lt;/p&gt;

&lt;p&gt;To plot multiple datasets in a single chart, add additional Data Series using &lt;i&gt;Chart Data&lt;/i&gt; and specify an &lt;em&gt;X Property&lt;/em&gt; and &lt;em&gt;Y Property&lt;/em&gt; for &lt;em&gt;Data Series 1&lt;/em&gt; and &lt;em&gt;Data Series 2&lt;/em&gt;, etc. This allows you to control formatting options individually for each data series. Alternatively, you can enter multiple properties as a comma-separated list in &lt;em&gt;Y Property&lt;/em&gt; for a given Data Series. In this case, the same formatting is applied to each data property.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;i&gt;Data Series n&lt;/i&gt;: Specifies data properties and formatting options that control the particular data series.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Chart Options&lt;/i&gt;: Options that control the whole chart, such as &lt;i&gt;Title&lt;/i&gt; and various &lt;i&gt;Display Options&lt;/i&gt;.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;X Axis&lt;/i&gt;: Options that control the look and feel of the X Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Y Axis&lt;/i&gt;: Options that control the look and feel of the Y Axis.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Second Y Axis&lt;/i&gt;: Options that control the look and feel of a second Y Axis, displayed on the right side of the chart, when any Data Series is specified to be plotted against it.&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Column Settings&lt;/i&gt;: Options to control how the chart appears inside a table.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Chart Output&lt;/em&gt;, you can specify if all data records are plotted in a single chart or in a separate chart for each data record, (e.g., to plot array data as a chart in each table row). Array data is not required.&lt;/li&gt;
&lt;li&gt;To add additional Data Series, right-click the component to enter edit mode, and copy and paste one of the existing Data Series. Any values assigned to parameters are also copied.&lt;/li&gt;
&lt;li&gt;To display some of your data in unique way, you can add Canvas Elements to an XY Chart. You can only pipe a Canvas Element into the chart when the &lt;em&gt;Display Type&lt;/em&gt; is set to &quot;Image&quot;. &lt;/li&gt;
&lt;li&gt;To enable the &lt;A href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;Scriptable Charts API&lt;/A&gt; for this chart, set &lt;em&gt;Chart Options&lt;/em&gt; &gt; &lt;em&gt;Make Scriptable&lt;/em&gt; to &quot;True&quot;. &lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/charts/index.html&apos;)&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_canvas.pdf&apos;)&quot;&gt;Canvas Elements Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value/>
						<sci:value>Generic</sci:value>
						<sci:value>A data record representing the chart is sent to the pass port.</sci:value>
						<sci:value>None</sci:value>
						<sci:value>The input data records are all sent to the fail port.</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>Plug In</sci:value>
					</sci:arg>
					<sci:arg name="Link Options Mapping" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Mapping of the Format parameter name to the Link Options parameter name.</sci:help>
						<sci:value>Chart Options Format</sci:value>
						<sci:value>Chart Options Links and Actions Link Options</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="JavaClass" type="StringType" required="true" visibility="nevershow" multi="false" expanded="true">
						<sci:value>com.scitegic.report.component.chart.XYPlotComponent</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Sep 14 11:06:16 2017</sci:value>
					</sci:arg>
					<sci:arg name="Use Package" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>{DDD69C6F-63BC-41c0-8320-86BE1D88E458}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>XY Chart</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false" expanded="true">
						<sci:value>390 -95</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Charts\XY Chart</sci:value>
					</sci:arg>
				</sci:component>
			</sci:data>
			<sci:data object="SciTegic.Protocol.1">
				<sci:component name="HTML Report Viewer" version="2">
					<sci:arg name="Title" type="StringType" required="false" visibility="visible" multi="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Title</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;The optional title of the HTML document. The title is also used as part of the report&apos;s file name.&lt;/p&gt;</sci:help>
					</sci:arg>
					<sci:arg name="Advanced Options" type="GroupType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:member>Include Format and Position CSS</sci:member>
						<sci:member>Use Default Browser</sci:member>
						<sci:member>Set IE Compatibility</sci:member>
					</sci:arg>
					<sci:arg name="Include Format and Position CSS" type="BoolType" required="false" visibility="visible" multi="false" expanded="true">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Include Format and Position CSS</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>If set to &lt;strong&gt;False&lt;/strong&gt;, all format and position settings will be omitted from the output document, allowing them to be set using an external stylesheet specified with an &lt;a href=&quot;javascript:DoLink(&apos;{6DF7D4FA-28BC-453b-8882-DE55C7CFFBF9}&apos;)&quot;&gt;Include&lt;/a&gt;.</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Set IE Compatibility" type="BoolType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:mpropval name="SCI_PromotedFrom" ishidden="true" type="StringType">
								<sci:value>Set IE Compatibility</sci:value>
							</sci:mpropval>
							<sci:propval name="SCI_PromotionRenameRule" ishidden="true">UsingParent</sci:propval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;When this flag is set to True (default), IE compatibility in the report is set to IE 10 (the minimum support level for Pipeline Pilot). For most users of IE, this should provide a stable environment to view Pipeline Pilot reports.
&lt;/p&gt;
&lt;/p&gt;Switch off this setting, if necessary, to allow Internet Explorer to display content in the highest mode available. This is only required for users who view the report in Internet Explorer 11 or above and who need to enable facilities not available in IE 10 mode, such as WebGL and some HTML5/CSS features.
&lt;/p&gt;
&lt;p&gt;Note that even if you are viewing the report in another browser, other users may subsequently run the protocol or view the report in Internet Explorer, and so you may still need to set this IE Compatibility setting - but only in the rare case that your report requires something beyond the default IE 10 compatibility.
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Use Default Browser" type="BoolType" required="false" visibility="visible" multi="false" expanded="true" legalvalsenforced="false" uimpl="false">
						<sci:metaproplist>
							<sci:propval name="SCI_PromotionRenameRule">UsingParent</sci:propval>
							<sci:mpropval name="SCI_PromotedFrom" type="StringType">
								<sci:value>Browser</sci:value>
							</sci:mpropval>
						</sci:metaproplist>
						<sci:help>&lt;p&gt;
This parameter is only relevant when running the protocol in the Pipeline Pilot Professional Client.
&lt;/p&gt;
&lt;p&gt;
The value specifies whether to use your default desktop web browser to view the report. When set to False, Internet Explorer is used as a standard fallback option. If IE is your default browser, it is used in either case.
&lt;/p&gt;
&lt;p&gt;
If you use Internet Explorer, note that its behavior can be modified by switching off the &lt;i&gt;Set IE Compatibility&lt;/i&gt; parameter. This is only relevant if you are working with more recently-supported web technologies, such as WebGL, that require at least IE 11 compatibility (and also require that IE 11 is installed, of course).
&lt;/p&gt;</sci:help>
						<sci:legalval selected="true">True</sci:legalval>
						<sci:legalval>False</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Mode" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>&lt;p&gt;Allows some alternative formatting and position settings to be used that may cause the HTML report output to behave and look more like the HTML generated with previous versions of Pipeline Pilot. This parameter is intended to be set on writers in protocols developed with previous versions of Pipeline Pilot where the output looks or behaves differently when run with the current version.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Always use the value of &quot;Default&quot; for new protocols or protocols under active development. The latest Reporting components may not behave correctly in HTML reports written with a non-default mode.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When set to &quot;Pipeline Pilot 7.5&quot;, this parameter rolls back some of the improvements made in the name of standards compliance and formatting consistency, including:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The report will not include the HTML 4.01 Doctype declaration, which will cause Internet Explorer to render the report using quirks mode.&lt;/li&gt;
	&lt;li&gt;Position rules will not be strictly enforced, so Internet Explorer 6 will render borders and padding outside the specified width.&lt;/li&gt;
	&lt;li&gt;Horizontal alignment of block objects will not be supported, so you will not be able to, for example, center-align a table.&lt;/li&gt;
	&lt;li&gt;The page margins will not be set.&lt;/li&gt;
&lt;/ul&gt;
</sci:help>
						<sci:legalval selected="true">Default</sci:legalval>
						<sci:legalval>Pipeline Pilot 7.5</sci:legalval>
					</sci:arg>
					<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists the set of temporary files which will be converted by the network to true temporary file names</sci:help>
					</sci:arg>
					<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>Lists a set of properties (without the @) to be created on the property list for this protocol.
Other properties are created on the global property list
and so are accessible from all protocols.</sci:help>
						<sci:value>ServerFilePath</sci:value>
					</sci:arg>
					<sci:arg name="RunToCompletion" type="BoolType" required="false" visibility="visible" multi="false" implbase="{17001C74-63CE-4B4B-B37C-F0EAA19CE4AA}" uimpl="true">
						<sci:help>When the network is run, whether we process once or until done for each process call</sci:help>
						<sci:legalval>True</sci:legalval>
						<sci:legalval selected="true">False</sci:legalval>
					</sci:arg>
					<sci:arg name="Internet Explorer" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Internet Explorer</sci:help>
						<sci:value>internetexplorer.application</sci:value>
					</sci:arg>
					<sci:arg name="Chrome" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
						<sci:help>The location for Chrome</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="Firefox" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="true">
						<sci:help>The location for Firefox</sci:help>
						<sci:value>&quot;C:\Program Files (x86)\Mozilla Firefox\firefox.exe&quot;</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval>ComponentReturnsPass</sci:legalval>
						<sci:legalval>ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="ProcessingOrder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>DrainTopDown</sci:value>
					</sci:arg>
					<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Protocol Options</sci:help>
						<sci:legalval selected="true">Make Shortcut by Default</sci:legalval>
						<sci:legalval>Owner Access Only</sci:legalval>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The user who registered this component.</sci:help>
						<sci:value>scitegic/report</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The date this component was registered.</sci:help>
						<sci:value>Thu Oct 22 23:43:53 2015</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>HTML Report Viewer</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol AutoLayout</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:value>ReportViewerNode</sci:value>
					</sci:arg>
					<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Revision</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>SubProtocol</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{0952D9DF-F95C-4D43-826F-C70450811DD8}</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>690 -95</sci:value>
					</sci:arg>
					<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>By Ref</sci:help>
						<sci:value>1</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:value>100</sci:value>
						<sci:value>Displays the results of a reporting protocol in HTML format</sci:value>
						<sci:value>&lt;p&gt;This component accepts reporting objects as input (e.g., tables, text and images), and displays the output as an HTML file in Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Notes:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use the &lt;a href=&quot;javascript:DoLink(&apos;{A28703A7-E701-4D34-9A93-1D24AC2039CC}&apos;)&quot;&gt;Page&lt;/a&gt; component to set the report&apos;s margins, borders, padding, and background formatting, or to specify HTML attributes on the report&apos;s &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;See Also:&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_basic.pdf&apos;)&quot;&gt;Report Design Essentials&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/report/docs/reporting_charts.pdf&apos;)&quot;&gt;Chart Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;javascript:DoLink(&apos;sciapps/scitegic/reportadv/docs/reportadv_interactive.pdf&apos;)&quot;&gt;Interactive Reporting and Form Design&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</sci:value>
						<sci:value>Generic</sci:value>
						<sci:value>This component accepts reporting objects as input.</sci:value>
						<sci:value>None</sci:value>
						<sci:value/>
						<sci:value>None</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Sticky Notes</sci:help>
					</sci:arg>
					<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The server version when this component was registered</sci:help>
						<sci:value>16.1.0.1089</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>100</sci:value>
					</sci:arg>
					<sci:arg name="ProtocolScale" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Protocol Scale</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>2</sci:value>
					</sci:arg>
					<sci:arg name="SubProtocolMadeLinkIntoCopy" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:help>Subprotocol Made Link Into Copy</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The original path within the database of this component.</sci:help>
						<sci:value>Components\Reporting and Visualization\Reporting\Viewers\HTML Report Viewer</sci:value>
					</sci:arg>
				</sci:component>
				<sci:protocol/>
			</sci:data>
			<sci:connectid from="0" to="1" type="true"/>
			<sci:connectid from="1" to="2" type="true"/>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
<!-- Exported protocol -->
<sci:component name="8.0 Protocol Warning" version="2">
<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
<sci:help>Component Icon</sci:help>
<sci:value>PROTOCOLNODE</sci:value>
</sci:arg>
<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
<sci:help>Protocol Sticky Notes</sci:help>
<sci:value>%VERSION 3%</sci:value>
<sci:value>400 -219 1222 221</sci:value>
<sci:value>250 120 20</sci:value>
<sci:value>WARNING! This is a Pipeline Pilot protocol written in version 8.0 or later. It contains features that are not supported in earlier versions of Pipeline Pilot.</sci:value>
</sci:arg>
</sci:component>
</sci:data>
